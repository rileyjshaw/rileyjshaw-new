{"version":3,"sources":["webpack:///./src/components/doodles/background-generator.js","webpack:///./src/util/format-props.js","webpack:///./src/util/all-projects-query.js","webpack:///./src/util/content-types.js","webpack:///./node_modules/react-use-dimensions/es/index.js","webpack:///./src/components/content-node.js","webpack:///./src/components/content-grid.js","webpack:///./src/components/doodles/circle-constrained-lines.js"],"names":["defaultProps","width","Math","floor","random","zoom","dark","light","seamless","El","getState","props","cDark","cLight","themeBias","canvas","tiledCanvas","document","createElement","size","height","sequence","randSequence","lcm","length","maxTiles","ctx","getContext","tiledCtx","i","x","y","fillStyle","fillRect","nTiles","min","offset","drawImage","BackgroundGenerator","ref","className","perceivedTheme","useContext","ThemeContext","useMemo","getThemeColor","useState","setState","clicked","setClicked","useEffect","onClick","style","background","toDataURL","hasOwnProperty","formatters","post","data","node","fields","slug","frontmatter","rest","tags","sort","type","link","formatProps","formatter","useStaticQuery","allMdx","posts","edges","allCombinedProjectsJson","projects","nodes","map","p","BlockEmbedButton","TitleOnly","PostContent","description","more","dangerouslySetInnerHTML","__html","to","doodle","readableType","dweet","Inner","patch","shortType","slice","project","descriptionList","d","key","arenaChannel","updatedAt","icon","image","title","src","alt","commit","tumblr","screenshotsTumblr","song","uid","showEmbed","setShowEmbed","scrolling","frameBorder","indexOf","video","body","contentType","vimeo","youtube","allowFullScreen","getDimensionObject","rect","getBoundingClientRect","top","left","right","bottom","_ref","arguments","undefined","_ref$liveMeasure","liveMeasure","_useState","dimensions","setDimensions","_useState2","setNode","measure","window","requestAnimationFrame","addEventListener","removeEventListener","React","memo","forwardRef","date","repo","Doodle","masonry","contentTypes","useDimensions","innerRef","span","ceil","split","join","toLowerCase","gridRowEnd","dateTime","replace","tag","PI","cos","sin","pow","L","R","C","variants","getOffset","nLines","lineWidth","globalCompositeOperation","CircleConstrainedLines","canvasRef","useRef","variant","setVariant","getColor","current","angleStep","clearRect","beginPath","strokeStyle","arc","fill","stroke","angle","x1","y1","x2","y2","moveTo","lineTo","v"],"mappings":"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","file":"96e2b3902b9604e8fdeb81a9749725d8bb52c863-80b884ad3369061e839b.js","sourcesContent":["import {getThemeColor, randSequence, lcm} from '../../util/util';\nimport {ThemeContext} from '../theme-provider';\nimport './background-generator.css';\nimport React, {useState, useEffect, useContext, useMemo} from 'react';\n\nconst minWidth = 100; // Tiling width. Height is calculated dynamically.\nconst maxWidth = 200;\nconst minSequenceLength = 20; // Bigger numbers = more complex patterns.\nconst maxSequenceLength = 200;\n\n// For these backgrounds to tile properly, each subsequent column needs to be\n// shifted up by 1px. CSS doesn't currently support that, so we do it in\n// canvas. A max canvas width is set here so we don't go completely out of\n// control when there's a tall repeating pattern. \"Seamless\" mode can be set\n// to ensure a height over maxTiles is never reached, so it ensures a\n// perfectly tiling pattern.\nconst maxTiledWidth = 10000;\n\nconst defaultProps = {\n\twidth: minWidth + Math.floor(Math.random() * (maxWidth - minWidth) + 1),\n\tzoom: 6, // I think it looks better a bit chunky like this.\n\tdark: 'fg',\n\tlight: 'bg',\n\tseamless: true,\n\tEl: 'div',\n};\n\nconst getState = (\n\tprops,\n\tcDark,\n\tcLight,\n\tthemeBias,\n\tcanvas = document.createElement('canvas'),\n\ttiledCanvas = document.createElement('canvas')\n) => {\n\tconst {width, seamless} = {\n\t\t...defaultProps,\n\t\t...props,\n\t};\n\n\tlet size, height, sequence;\n\tdo {\n\t\tsequence = randSequence(\n\t\t\tminSequenceLength,\n\t\t\tmaxSequenceLength,\n\t\t\tthemeBias\n\t\t);\n\t\tsize = lcm(width, sequence.length);\n\t\theight = size / width;\n\t} while (seamless && height > maxTiles);\n\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst maxTiles = Math.floor(maxTiledWidth / width);\n\n\tconst ctx = canvas.getContext('2d');\n\tconst tiledCtx = tiledCanvas.getContext('2d');\n\n\t// Create a single tile on the canvas.\n\tfor (let i = 0; i < size; ++i) {\n\t\tconst x = i % width;\n\t\tconst y = Math.floor(i / width);\n\t\tctx.fillStyle = sequence[i % sequence.length] ? cDark : cLight;\n\t\tctx.fillRect(x, y, 1, 1);\n\t}\n\n\t// Tile the initial canvas onto a wider canvas to ensure x-axis tiling.\n\tconst nTiles = Math.min(maxTiles, height);\n\ttiledCanvas.width = width * nTiles;\n\ttiledCanvas.height = height;\n\tfor (let i = 0; i < nTiles; ++i) {\n\t\tlet offset = -i;\n\t\tdo {\n\t\t\ttiledCtx.drawImage(canvas, i * width, offset);\n\t\t\toffset += height;\n\t\t} while (offset <= height);\n\t}\n\n\treturn [canvas, tiledCanvas, nTiles, height];\n};\n\nexport default function BackgroundGenerator(props, ref) {\n\tconst {width, zoom, dark, light, El, className} = {\n\t\t...defaultProps,\n\t\t...props,\n\t};\n\tconst {perceivedTheme} = useContext(ThemeContext);\n\tconst themeBias = perceivedTheme === 'light' ? 0.65 : 0.45; // 0: light | 1: dark\n\tconst cDark = useMemo(() => getThemeColor(perceivedTheme)(dark)(), [\n\t\tdark,\n\t\tperceivedTheme,\n\t]);\n\tconst cLight = useMemo(() => getThemeColor(perceivedTheme)(light)(), [\n\t\tlight,\n\t\tperceivedTheme,\n\t]);\n\tconst [[canvas, tiledCanvas, nTiles, height], setState] = useState([]);\n\tconst [clicked, setClicked] = useState(false);\n\tuseEffect(() => {\n\t\tsetState(\n\t\t\tgetState(props, cDark, cLight, themeBias, canvas, tiledCanvas)\n\t\t);\n\t}, [cDark, cLight]);\n\n\t// Apply the wide, tileable canvas as a repeating background.\n\treturn (\n\t\t<El\n\t\t\tonClick={() => {\n\t\t\t\tsetState(\n\t\t\t\t\tgetState(\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\tcDark,\n\t\t\t\t\t\tcLight,\n\t\t\t\t\t\tthemeBias,\n\t\t\t\t\t\tcanvas,\n\t\t\t\t\t\ttiledCanvas\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tif (!clicked) setClicked(true);\n\t\t\t}}\n\t\t\tclassName={`content-node doodle doodle-background-generator${\n\t\t\t\tclassName ? ` ${className}` : ''\n\t\t\t}`}\n\t\t\tstyle={\n\t\t\t\ttiledCanvas && {\n\t\t\t\t\tbackground: `${\n\t\t\t\t\t\tthemeBias > 0.5 ? cDark : cLight\n\t\t\t\t\t} left top/${width * nTiles * zoom}px ${\n\t\t\t\t\t\theight * zoom\n\t\t\t\t\t}px url(${tiledCanvas.toDataURL()}`,\n\t\t\t\t}\n\t\t\t}\n\t\t\t{...(ref.hasOwnProperty('current') ? {ref} : {})}\n\t\t>\n\t\t\t{clicked || <span className=\"default-button\">Click?</span>}\n\t\t</El>\n\t);\n}\n","const formatters = {\n\tpost: function formatPost(data) {\n\t\t// Move all `fields` properties to the top level and sort tags.\n\t\tconst {\n\t\t\tfields: {slug, ...fields},\n\t\t\tfrontmatter,\n\t\t\t...rest\n\t\t} = data.node;\n\t\treturn {\n\t\t\t...fields,\n\t\t\t...rest,\n\t\t\tfrontmatter: {\n\t\t\t\t...frontmatter,\n\t\t\t\ttags: [...(frontmatter.tags ?? [])].sort(),\n\t\t\t},\n\t\t\ttype: 'post',\n\t\t\tlink: slug,\n\t\t\ttags: ['instructional'],\n\t\t};\n\t},\n};\n\nexport default function formatProps(props) {\n\tconst formatter = formatters[props.type];\n\treturn formatter ? formatter(props) : props;\n}\n","import formatProps from './format-props';\nimport {useStaticQuery, graphql} from 'gatsby';\n\nexport function format({\n\tallMdx: {edges: posts} = {edges: []},\n\tallCombinedProjectsJson: {nodes: projects} = {nodes: []},\n}) {\n\treturn [\n\t\t...posts.map(p => ({\n\t\t\t...p,\n\t\t\ttype: 'post',\n\t\t})),\n\t\t...projects,\n\t].map(formatProps);\n}\n\nexport default () =>\n\tformat(\n\t\tuseStaticQuery(graphql`\n\t\t{\n\t\t\tallMdx(\n\t\t\t\tfilter: {fileAbsolutePath: {regex: \"/\\/posts\\/.*\\\\.mdx?$/\"}}\n\t\t\t\tsort: {fields: [fields___date], order: DESC}\n\t\t\t) {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tmore\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\t\tlayout\n\t\t\t\t\t\t\ttags\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfields {\n\t\t\t\t\t\t\tuid\n\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\tdate(formatString: \"YYYY-MM-DD\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tallCombinedProjectsJson {\n\t\t\t\tnodes {\n\t\t\t\t\tuid\n\t\t\t\t\ttype\n\t\t\t\t\ttitle\n\t\t\t\t\tcoolness\n\t\t\t\t\tdate\n\t\t\t\t\tlink\n\t\t\t\t\tdescription\n\t\t\t\t\tdescriptionList\n\t\t\t\t\ttags\n\t\t\t\t\trepo\n\t\t\t\t\tupdatedAt\n\t\t\t\t\tlength\n\t\t\t\t\tcontentType\n\t\t\t\t\tbody\n\t\t\t\t\timage\n\t\t\t\t\tmore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`)\n\t);\n","import AutoLink, {ExternalLink} from '../components/auto-link';\nimport React, {useState} from 'react';\n\nconst BlockEmbedButton = ({type, onClick}) => (\n\t<button className=\"block-embed-button default-button\" onClick={onClick}>\n\t\tLoad embedded media{type ? ` (${type})` : ''}\n\t</button>\n);\n\nexport const TitleOnly = () => null;\nexport const ProjectContent = ({descriptionList}) =>\n\tdescriptionList && (\n\t\t<main>\n\t\t\t{descriptionList.map((d, i) => (\n\t\t\t\t<p key={i} dangerouslySetInnerHTML={{__html: d}} />\n\t\t\t))}\n\t\t</main>\n\t);\nexport const PostContent = ({description, link, more}) =>\n\tdescription ? (\n\t\t<main>\n\t\t\t<div\n\t\t\t\tclassName={more ? 'excerpt' : null}\n\t\t\t\tdangerouslySetInnerHTML={{__html: description}}\n\t\t\t/>\n\t\t\t{more && (\n\t\t\t\t<p className=\"continue-reading\">\n\t\t\t\t\t<AutoLink to={link}>Continue reading</AutoLink>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</main>\n\t) : null;\nexport const ArenaChannelContent = ({description, length, updatedAt}) => (\n\t<main>\n\t\t{description && <p>{description}</p>}\n\t\t<p>\n\t\t\tAn Are.na channel with {length} blocks. Last updated{' '}\n\t\t\t{updatedAt.slice(0, 10)}.\n\t\t</p>\n\t</main>\n);\nexport const IconContent = ({image, title}) => (\n\t<main>\n\t\t<img src={image} width={84} height={84} alt={`${title} icon`} />\n\t</main>\n);\nexport const PatchContent = ({description, link}) => (\n\t<main>\n\t\t{description?.slice(-3) === '...' ? (\n\t\t\t<p>\n\t\t\t\t{description}{' '}\n\t\t\t\t<ExternalLink to={link}>\n\t\t\t\t\tread the full description on Patchstorage\n\t\t\t\t</ExternalLink>\n\t\t\t</p>\n\t\t) : (\n\t\t\t<p>{description}</p>\n\t\t)}\n\t</main>\n);\nexport const SongContent = ({title, uid}) => {\n\tconst [showEmbed, setShowEmbed] = useState(false);\n\n\treturn (\n\t\t<div className=\"song-content\">\n\t\t\t{showEmbed ? (\n\t\t\t\t<iframe\n\t\t\t\t\ttitle={`An embedded song called \"${title}\"`}\n\t\t\t\t\tclassName=\"soundcloud\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"100\"\n\t\t\t\t\tscrolling=\"no\"\n\t\t\t\t\tframeBorder=\"no\"\n\t\t\t\t\tsrc={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${uid.slice(\n\t\t\t\t\t\tuid.indexOf('_') + 1\n\t\t\t\t\t)}&color=%23000000&auto_play=false&hide_related=true&show_comments=false&show_user=false&show_reposts=false&show_teaser=true`}\n\t\t\t\t></iframe>\n\t\t\t) : (\n\t\t\t\t<BlockEmbedButton\n\t\t\t\t\ttype=\"SoundCloud\"\n\t\t\t\t\tonClick={() => setShowEmbed(true)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\nexport const VideoContent = ({\n\tbody,\n\tcontentType,\n\tdescription,\n\ttitle,\n\tlink,\n\tmore,\n}) => {\n\tconst [showEmbed, setShowEmbed] = useState(false);\n\n\treturn (\n\t\t<main>\n\t\t\t<div className=\"video-embed\">\n\t\t\t\t{showEmbed ? (\n\t\t\t\t\t{\n\t\t\t\t\t\tvimeo: body && (\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{__html: body}} />\n\t\t\t\t\t\t),\n\t\t\t\t\t\tyoutube: (\n\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\ttitle={`An embedded video called \"${title}\"`}\n\t\t\t\t\t\t\t\tallowFullScreen\n\t\t\t\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\t\t\t\tsrc={`https://www.youtube-nocookie.com/embed/${body}`}\n\t\t\t\t\t\t\t></iframe>\n\t\t\t\t\t\t),\n\t\t\t\t\t}[contentType]\n\t\t\t\t) : (\n\t\t\t\t\t<BlockEmbedButton\n\t\t\t\t\t\ttype={contentType === 'vimeo' ? 'Vimeo' : 'YouTube'}\n\t\t\t\t\t\tonClick={() => setShowEmbed(true)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{description && (\n\t\t\t\t<>\n\t\t\t\t\t<p>{description}</p>\n\t\t\t\t\t{more && (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<ExternalLink to={link}>\n\t\t\t\t\t\t\t\tRead the full description on{' '}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvimeo: 'Vimeo',\n\t\t\t\t\t\t\t\t\t\tyoutube: 'YouTube',\n\t\t\t\t\t\t\t\t\t}[contentType]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</main>\n\t);\n};\n\nexport default {\n\tdoodle: {\n\t\treadableType: 'Doodle',\n\t},\n\tdweet: {\n\t\tclassName: 'span-2',\n\t\treadableType: 'Dweet',\n\t\tInner: TitleOnly,\n\t},\n\tpatch: {\n\t\tclassName: 'span-4',\n\t\treadableType: 'Patchstorage module',\n\t\tshortType: 'Patch',\n\t\tInner: PatchContent,\n\t},\n\tproject: {\n\t\tclassName: 'span-4',\n\t\treadableType: 'Project',\n\t\tInner: ProjectContent,\n\t},\n\tpost: {\n\t\tclassName: 'span-6',\n\t\treadableType: 'Blog post',\n\t\tInner: PostContent,\n\t},\n\tarenaChannel: {\n\t\tclassName: 'span-3',\n\t\treadableType: 'Are.na channel',\n\t\tInner: ArenaChannelContent,\n\t},\n\ticon: {\n\t\tclassName: 'span-3',\n\t\treadableType: 'Icon',\n\t\tInner: IconContent,\n\t},\n\tcommit: {\n\t\tclassName: 'span-6',\n\t\treadableType: 'Commit blog post',\n\t\tInner: PostContent,\n\t},\n\ttumblr: {\n\t\tclassName: 'span-6',\n\t\treadableType: 'SFPC blog post',\n\t\tInner: PostContent,\n\t},\n\tscreenshotsTumblr: {\n\t\tclassName: 'span-3',\n\t\treadableType: 'Screenshot',\n\t\tInner: TitleOnly,\n\t},\n\tsong: {\n\t\tclassName: 'span-5',\n\t\treadableType: 'Song',\n\t\tInner: SongContent,\n\t},\n\tvideo: {\n\t\tclassName: 'span-4',\n\t\treadableType: 'Video',\n\t\tInner: VideoContent,\n\t},\n};\n","import { useState, useCallback, useLayoutEffect } from \"react\";\n\nfunction getDimensionObject(node) {\n  var rect = node.getBoundingClientRect();\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: \"x\" in rect ? rect.x : rect.top,\n    left: \"y\" in rect ? rect.y : rect.left,\n    x: \"x\" in rect ? rect.x : rect.left,\n    y: \"y\" in rect ? rect.y : rect.top,\n    right: rect.right,\n    bottom: rect.bottom\n  };\n}\n\nfunction useDimensions() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$liveMeasure = _ref.liveMeasure,\n      liveMeasure = _ref$liveMeasure === undefined ? true : _ref$liveMeasure;\n\n  var _useState = useState({}),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  var _useState2 = useState(null),\n      node = _useState2[0],\n      setNode = _useState2[1];\n\n  var ref = useCallback(function (node) {\n    setNode(node);\n  }, []);\n  useLayoutEffect(function () {\n    if (node) {\n      var measure = function measure() {\n        return window.requestAnimationFrame(function () {\n          return setDimensions(getDimensionObject(node));\n        });\n      };\n\n      measure();\n\n      if (liveMeasure) {\n        window.addEventListener(\"resize\", measure);\n        window.addEventListener(\"scroll\", measure);\n        return function () {\n          window.removeEventListener(\"resize\", measure);\n          window.removeEventListener(\"scroll\", measure);\n        };\n      }\n    }\n  }, [node]);\n  return [ref, dimensions, node];\n}\n\nexport default useDimensions;","import contentTypes from '../util/content-types';\nimport AutoLink, {ExternalLink} from './auto-link';\nimport './content-node.css';\nimport React from 'react';\nimport useDimensions from 'react-use-dimensions';\n\n// TODO: Break this component and the grid fitting component out into separate\n//       files.\n// Each content type needs:\n//   \"uid\":\n//   \"type\":\n//   \"title\":\n//   \"date\":\nexport default React.memo(\n\tReact.forwardRef((props, ref) => {\n\t\tconst {\n\t\t\ttype,\n\t\t\ttitle,\n\t\t\tdate,\n\t\t\tlink,\n\t\t\trepo,\n\t\t\tuid,\n\t\t\ttags,\n\t\t\tDoodle,\n\t\t\tmasonry,\n\t\t} = props;\n\n\t\tif (type === 'doodle') return <Doodle ref={ref} {...props} />;\n\t\tif (!contentTypes[type]) return null;\n\n\t\tconst {className = '', readableType, shortType, Inner} = contentTypes[\n\t\t\ttype\n\t\t];\n\n\t\tconst [innerRef, {height}] = useDimensions({liveMeasure: false});\n\t\t// Inner: Math.ceil((height + 27) / (27 * 2))\n\t\t//                            ^ \"+ 27\" accounts for height falling within gap.\n\t\t//     (27 * 2) is the row + gap height ^\n\t\t// With outer padding: Math.ceil((height + 27 + 46) / (27 * 2))\n\t\t//                    = Math.ceil(height / 54) + 1\n\t\t// TODO(riley): Was this with the new design system.\n\t\t// const span = height && Math.ceil((height + 19) / 54) + 1;\n\t\tconst span = height && Math.ceil((height + 82) / 130);\n\n\t\treturn (\n\t\t\t<li\n\t\t\t\tclassName={`${className} ${type\n\t\t\t\t\t.split(/(?=[A-Z])/)\n\t\t\t\t\t.join('-')\n\t\t\t\t\t.toLowerCase()} ${height ? '' : 'un'}measured\n\t\t\tcontent-node`}\n\t\t\t\tkey={uid}\n\t\t\t\tref={ref}\n\t\t\t\tstyle={span && masonry && {gridRowEnd: `span ${span}`}}\n\t\t\t>\n\t\t\t\t{/* Note: might be able to make this more semantic. Sources:\n\t\t\thttps://stackoverflow.com/questions/12866008/html5-semantic-markup-for-blog-post-tags-and-categories\n\t\t\thttps://html.spec.whatwg.org/multipage/links.html#link-type-tag */}\n\t\t\t\t<div className=\"inner\" ref={innerRef}>\n\t\t\t\t\t<div className=\"content-type\">\n\t\t\t\t\t\t{shortType ?? readableType}\n\t\t\t\t\t</div>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t{link ? (\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t<AutoLink\n\t\t\t\t\t\t\t\t\tto={link}\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{__html: title}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h1 dangerouslySetInnerHTML={{__html: title}} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"subheading\">\n\t\t\t\t\t\t\t<time dateTime={date}>\n\t\t\t\t\t\t\t\t{date.replace(/-/g, '.')}\n\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t{repo && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t• From repository{' '}\n\t\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\t\tto={`https://github.com/${repo}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{repo}\n\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t\t<Inner {...props} />\n\t\t\t\t\t{tags && (\n\t\t\t\t\t\t<footer>\n\t\t\t\t\t\t\t<ul className=\"tags\">\n\t\t\t\t\t\t\t\t{tags.map(tag => (\n\t\t\t\t\t\t\t\t\t<li key={tag}>{tag}</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</footer>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t})\n);\n\n/*\ncase 'project':\n\tif (node.tags.includes('starred')) className = 'span-2';\n*/\n","import './content-grid.css';\nimport ContentNode from './content-node';\nimport {ThemeContext} from './theme-provider';\nimport React, {useContext} from 'react';\n\nexport default React.memo(\n\tReact.forwardRef(({nodes, masonry}, ref) => {\n\t\tconst {perceivedTheme} = useContext(ThemeContext);\n\t\treturn (\n\t\t\t<ul className={`content-grid${masonry ? ' masonry' : ''}`}>\n\t\t\t\t{nodes.map((node, i, {length}) => (\n\t\t\t\t\t<ContentNode\n\t\t\t\t\t\tperceivedTheme={perceivedTheme}\n\t\t\t\t\t\tmasonry={masonry}\n\t\t\t\t\t\tref={i === length - 1 ? ref : null}\n\t\t\t\t\t\tkey={node.uid}\n\t\t\t\t\t\t{...node}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t})\n);\n","import {getThemeColor} from '../../util/util';\nimport {ThemeContext} from '../theme-provider';\nimport './circle-constrained-lines.css';\nimport React, {useRef, useState, useEffect, useContext, useMemo} from 'react';\n\nconst {PI, cos, sin, pow} = Math;\nconst L = 800;\nconst R = L / 3;\n\n// Derived.\nconst C = L / 2;\n\nconst variants = [\n\t{\n\t\tgetOffset: (i, nLines) =>\n\t\t\tsin((i / nLines) * PI * 2) * cos((i / nLines) * PI * 2) * PI * 10,\n\t\tnLines: 800,\n\t\tlineWidth: 1,\n\t\tglobalCompositeOperation: 'overlay',\n\t},\n\t{\n\t\tgetOffset: (i, nLines) =>\n\t\t\tpow(sin((i / nLines) * 2 * PI) * cos((i / nLines) * 2 * PI), 2) *\n\t\t\t2 *\n\t\t\tPI *\n\t\t\t2,\n\t\tnLines: 800,\n\t\tlineWidth: 1,\n\t\tglobalCompositeOperation: 'overlay',\n\t},\n\t{\n\t\tgetOffset: (i, nLines) => (i / nLines) * 2 * PI * 1.5,\n\t\tnLines: 100,\n\t\tlineWidth: 2,\n\t\tglobalCompositeOperation: 'source-over',\n\t},\n];\n\nexport default function CircleConstrainedLines({El = 'div'}, ref) {\n\tconst {perceivedTheme} = useContext(ThemeContext);\n\tconst canvasRef = useRef(null);\n\tconst [variant, setVariant] = useState(\n\t\tMath.floor(Math.random() * variants.length)\n\t);\n\tconst getColor = useMemo(() => getThemeColor(perceivedTheme), [\n\t\tperceivedTheme,\n\t]);\n\tuseEffect(() => {\n\t\tconst canvas = canvasRef.current;\n\t\tif (!canvas) return;\n\n\t\tconst {\n\t\t\tgetOffset,\n\t\t\tnLines,\n\t\t\tlineWidth,\n\t\t\tglobalCompositeOperation,\n\t\t} = variants[variant];\n\n\t\tconst angleStep = (2 * PI) / nLines;\n\t\tconst ctx = canvas.getContext('2d');\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\tctx.beginPath();\n\t\tctx.globalCompositeOperation = globalCompositeOperation;\n\t\tctx.lineWidth = lineWidth;\n\t\tctx.strokeStyle = getColor('fg')();\n\t\tctx.fillStyle = getColor('bg', 'mute')();\n\t\tctx.arc(C, C, R * 1.03, 0, 2 * PI);\n\t\tctx.fill();\n\n\t\tctx.beginPath();\n\t\tctx.arc(C, C, R, 0, 2 * PI);\n\t\tctx.stroke();\n\n\t\tfor (let i = 0; i < nLines; ++i) {\n\t\t\tconst offset = getOffset(i, nLines);\n\t\t\tconst angle = i * angleStep;\n\t\t\tconst x1 = cos(angle) * R;\n\t\t\tconst y1 = sin(angle) * R;\n\t\t\tconst x2 = cos(angle + offset) * R;\n\t\t\tconst y2 = sin(angle + offset) * R;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(C + x1, C + y1);\n\t\t\tctx.lineTo(C + x2, C + y2);\n\t\t\tctx.stroke();\n\t\t}\n\t}, [variant, perceivedTheme]);\n\treturn (\n\t\t<El\n\t\t\t{...(ref.hasOwnProperty('current') ? {ref} : {})}\n\t\t\tclassName=\"content-node doodle doodle-constrained-lines\"\n\t\t>\n\t\t\t<canvas\n\t\t\t\theight={L}\n\t\t\t\twidth={L}\n\t\t\t\tref={canvasRef}\n\t\t\t\tonClick={() => setVariant(v => (v + 1) % variants.length)}\n\t\t\t/>\n\t\t</El>\n\t);\n}\n"],"sourceRoot":""}