{"version":3,"file":"component---src-pages-index-js-8dbdf17c499e6deef614.js","mappings":"6IAyBA,IAtBA,WACC,OACCA,EAAAA,cAAA,SAAG,kJAGW,IACbA,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAG,6BAA4B,kBAA0B,IAAI,MACnE,IACJF,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAG,sCAAqC,wBAEvC,4CAC+B,IAC1CF,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAG,0CAAyC,mDAE3C,yBACY,IACvBF,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAG,qBAAoB,gBAAuB,8BAI3D,C,kOCLaC,EAAOC,EAAAA,EAIdC,EAAU,CACf,CACCC,OAAQC,EAAAA,OAENC,EAAAA,EAAAA,IAAQ,CACV,CACCF,OAAQG,EAAAA,EACRC,OAAQ,CAACC,OAAQ,gBAElB,CACCL,OAAQM,EAAAA,GAET,CACCN,OAAQO,EAAAA,MAKLC,EAAY,SAAHC,GAAiC,IAADC,EAAAD,EAA3BE,iBAAAA,OAAgB,IAAAD,EAAG,GAAEA,EACxCE,GAAkCC,EAAAA,EAAAA,UAAS,GAApCC,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAuCjB,EAAQe,GAAxCd,EAAMgB,EAANhB,OAAgBiB,EAAYD,EAApBZ,OAEf,OACCV,EAAAA,cAAAA,EAAAA,SAAA,KACCA,EAAAA,cAAA,QAAMwB,UAAU,gBACfxB,EAAAA,cAAA,OAAKwB,UAAU,kBACdxB,EAAAA,cAAA,OAAKwB,UAAU,mBAAmBC,MAAOF,GACxCvB,EAAAA,cAAC0B,EAAAA,EAAU,KACV1B,EAAAA,cAAAA,EAAAA,SAAA,KACCA,EAAAA,cAACM,EAAM,MACPN,EAAAA,cAAA,UACCwB,UAAU,aACVG,QAAS,kBACRN,GACC,SAAAO,GAAG,OAAKA,EAAM,GAAKvB,EAAQwB,MAAM,GACjC,GAGF7B,EAAAA,cAAC8B,EAAAA,EAAM,UAKX9B,EAAAA,cAAA,OAAKwB,UAAU,cACdxB,EAAAA,cAAC+B,EAAAA,EAAU,MAAI,IACf/B,EAAAA,cAACgC,EAAAA,KAAI,CAAC9B,GAAG,SAASsB,UAAU,cAAa,OACnC,IACLxB,EAAAA,cAACiC,EAAAA,EAAS,CACTT,UAAU,cACVU,aAAa,OACbC,GAAI,KACJ,WAMHnC,EAAAA,cAAA,OAAKwB,UAAU,uBACdxB,EAAAA,cAAA,UAAI,oBACJA,EAAAA,cAACgC,EAAAA,KAAI,CAACR,UAAU,WAAWtB,GAAG,QAAO,kBAItCF,EAAAA,cAAA,WACCA,EAAAA,cAACoC,EAAAA,EAAW,CAACC,MAAOpB,IACpBjB,EAAAA,cAAA,KAAGwB,UAAU,gBAAe,iDACoB,IAC/CxB,EAAAA,cAACgC,EAAAA,KAAI,CAACR,UAAU,WAAWtB,GAAG,QAAO,WAE9B,OAKVF,EAAAA,cAACsC,EAAAA,EAAQ,CAACC,QAAQ,0BAClBvC,EAAAA,cAACwC,EAAAA,EAAI,OAIT,EASA,UAPyB,SAAAC,GACxB,IAAMxB,GAAmByB,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,MAClCC,QAAO,SAAAC,GAAO,IAAAC,EAAA,OAAqB,QAAjBA,EAACD,EAAQE,gBAAQ,IAAAD,EAAAA,EAAI,KAAO,EAAE,IAChDE,MAAM,EAAG,GACX,OAAOhD,EAAAA,cAACc,EAASmC,OAAAC,OAAA,GAAKT,EAAK,CAAExB,iBAAkBA,IAChD,C","sources":["webpack://rileyjshaw.com/./src/components/about/me-intro.js","webpack://rileyjshaw.com/./src/pages/index.js"],"sourcesContent":["import AutoLink from '../auto-link';\nimport React from 'react';\n\nfunction MeIntro() {\n\treturn (\n\t\t<p>\n\t\t\tI am a programmer and interface designer. My work has been featured\n\t\t\ton NPR, the CBC, HuffPost, Canadian Business, and elsewhere. I\n\t\t\tvolunteer at{' '}\n\t\t\t<AutoLink to=\"https://repairmatters.ca/\">Repair Matters</AutoLink>{' '}\n\t\t\tand{' '}\n\t\t\t<AutoLink to=\"https://www.canadalearningcode.ca/\">\n\t\t\t\tCanada Learning Code\n\t\t\t</AutoLink>\n\t\t\t, and am slowly developing my thoughts on{' '}\n\t\t\t<AutoLink to=\"https://github.com/miseryco/curriculum\">\n\t\t\t\twhat digital literacy means on today’s Internet\n\t\t\t</AutoLink>\n\t\t\t. I founded the studio{' '}\n\t\t\t<AutoLink to=\"https://misery.co\">Misery & Co.</AutoLink> and am\n\t\t\ttaking commissions.\n\t\t</p>\n\t);\n}\n\nexport default MeIntro;\n","import AboutIntro from '../components/about/me-intro';\nimport BigQuote from '../components/big-quote';\nimport ClientOnly from '../components/client-only';\nimport ContentGrid from '../components/content-grid';\nimport CycleText from '../components/cycle-text';\nimport BackgroundGenerator from '../components/doodles/background-generator';\nimport CircleConstrainedLines from '../components/doodles/circle-constrained-lines';\nimport GameOver from '../components/doodles/game-over';\nimport Riot from '../components/doodles/riot';\nimport GoUp from '../components/go-up';\nimport SEO from '../components/seo';\nimport Repeat from '../icons/Repeat';\nimport allProjectsQuery from '../util/all-projects-query';\nimport {shuffle, sortByDate} from '../util/sorting-methods';\nimport './index.css';\nimport {Link} from 'gatsby';\nimport React, {useState} from 'react';\n\nexport const Head = SEO;\n\n// Ensure the first doodle shown is consistent to prevent layout shifts on\n// initial load. Shuffle the rest.\nconst doodles = [\n\t{\n\t\tDoodle: BackgroundGenerator,\n\t},\n\t...shuffle([\n\t\t{\n\t\t\tDoodle: CircleConstrainedLines,\n\t\t\tstyles: {height: 'max-content'},\n\t\t},\n\t\t{\n\t\t\tDoodle: GameOver,\n\t\t},\n\t\t{\n\t\t\tDoodle: Riot,\n\t\t},\n\t]),\n];\n\nconst IndexPage = ({featuredProjects = []}) => {\n\tconst [doodleIdx, setDoodleIdx] = useState(0);\n\tconst {Doodle, styles: doodleStyles} = doodles[doodleIdx];\n\n\treturn (\n\t\t<>\n\t\t\t<main className=\"main-content\">\n\t\t\t\t<div className=\"frontpage-grid\">\n\t\t\t\t\t<div className=\"frontpage-doodle\" style={doodleStyles}>\n\t\t\t\t\t\t<ClientOnly>\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Doodle />\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"new-doodle\"\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tsetDoodleIdx(\n\t\t\t\t\t\t\t\t\t\t\tidx => (idx + 1) % doodles.length\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Repeat />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t</ClientOnly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"about-stub\">\n\t\t\t\t\t\t<AboutIntro />{' '}\n\t\t\t\t\t\t<Link to=\"/about\" className=\"about-link\">\n\t\t\t\t\t\t\tMore{' '}\n\t\t\t\t\t\t\t<CycleText\n\t\t\t\t\t\t\t\tclassName=\"about-arrow\"\n\t\t\t\t\t\t\t\tOuterElement=\"span\"\n\t\t\t\t\t\t\t\tms={100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t➫➯➱➬–\n\t\t\t\t\t\t\t</CycleText>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Include News, Newsletter? */}\n\t\t\t\t\t<div className=\"main-projects-title\">\n\t\t\t\t\t\t<h2>Recent additions</h2>\n\t\t\t\t\t\t<Link className=\"lab-link\" to=\"/lab\">\n\t\t\t\t\t\t\t(explore all)\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ContentGrid nodes={featuredProjects} />\n\t\t\t\t\t\t<p className=\"explore-more\">\n\t\t\t\t\t\t\tSort through hundreds of projects and posts in{' '}\n\t\t\t\t\t\t\t<Link className=\"lab-link\" to=\"/lab\">\n\t\t\t\t\t\t\t\tthe lab\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<BigQuote quoteId=\"SPUTTERED_AND_STOPPED\" />\n\t\t\t\t<GoUp />\n\t\t\t</main>\n\t\t</>\n\t);\n};\n\nconst IndexPageWrapper = props => {\n\tconst featuredProjects = sortByDate(allProjectsQuery())\n\t\t.filter(project => (project.coolness ?? 100) > 40)\n\t\t.slice(0, 5);\n\treturn <IndexPage {...props} featuredProjects={featuredProjects} />;\n};\n\nexport default IndexPageWrapper;\n"],"names":["React","AutoLink","to","Head","SEO","doodles","Doodle","BackgroundGenerator","shuffle","CircleConstrainedLines","styles","height","GameOver","Riot","IndexPage","_ref","_ref$featuredProjects","featuredProjects","_useState","useState","doodleIdx","setDoodleIdx","_doodles$doodleIdx","doodleStyles","className","style","ClientOnly","onClick","idx","length","Repeat","AboutIntro","Link","CycleText","OuterElement","ms","ContentGrid","nodes","BigQuote","quoteId","GoUp","props","sortByDate","allProjectsQuery","filter","project","_project$coolness","coolness","slice","Object","assign"],"sourceRoot":""}