{"version":3,"file":"component---src-pages-index-jsx-1c14a178a8568ecb5100.js","mappings":"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","sources":["webpack://rileyjshaw.com/./src/icons/Repeat.jsx","webpack://rileyjshaw.com/./src/components/BigQuote.jsx","webpack://rileyjshaw.com/./src/components/ContentNode.jsx","webpack://rileyjshaw.com/./src/components/ContentGrid.jsx","webpack://rileyjshaw.com/./src/components/CycleText.jsx","webpack://rileyjshaw.com/./src/components/GoUp.jsx","webpack://rileyjshaw.com/./src/components/TextGrid.jsx","webpack://rileyjshaw.com/./src/components/about/MeIntro.jsx","webpack://rileyjshaw.com/./src/pages/index.jsx","webpack://rileyjshaw.com/./src/util/ContentTypes.jsx","webpack://rileyjshaw.com/./src/util/format-props.mjs","webpack://rileyjshaw.com/./src/util/all-projects-query.mjs","webpack://rileyjshaw.com/./src/util/sorting-methods.js"],"sourcesContent":["import * as React from 'react';\n\nconst SvgRepeat = props => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 100 100\"\n\t\twidth=\"1em\"\n\t\theight=\"1em\"\n\t\tfill=\"currentColor\"\n\t\t{...props}\n\t>\n\t\t<path d=\"M93.748 50.034c0-.039.007-.076.007-.114h-.012C93.659 27.442 75.352 9.18 52.852 9.18v17.683c12.79 0 23.194 10.391 23.216 23.17-.059 12.558-10.144 22.769-22.643 23.078-11.699-.287-21.277-9.273-22.483-20.742h9.335L22.015 34.114 3.755 52.369h9.494c1.254 21.028 18.419 37.801 39.603 38.392v.06c.192 0 .381-.026.573-.03.193.004.38.03.573.03v-.06c21.971-.613 39.664-18.595 39.75-40.687h.003c0-.014-.003-.028-.003-.04z\" />\n\t</svg>\n);\nexport default SvgRepeat;\n","import Repeat from '../icons/Repeat';\nimport {shuffle} from '../util/sorting-methods';\nimport AutoLink from './AutoLink';\nimport './BigQuote.css';\nimport {graphql, useStaticQuery} from 'gatsby';\nimport React, {useState} from 'react';\n\nfunction BigQuote({quoteId, showRefreshButton = true}) {\n\tconst {\n\t\tallCombinedQuotesJson: {nodes: quotes},\n\t} = useStaticQuery(graphql`\n\t\t{\n\t\t\tallCombinedQuotesJson {\n\t\t\t\tnodes {\n\t\t\t\t\tuid\n\t\t\t\t\tcontent\n\t\t\t\t\tauthor\n\t\t\t\t\tsource\n\t\t\t\t\tcite\n\t\t\t\t\trelatedLink\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\tconst [shuffledQuotes] = useState(shuffle(quotes));\n\tconst [quoteIndex, setQuoteIndex] = useState(\n\t\tMath.max(\n\t\t\t0,\n\t\t\tshuffledQuotes.findIndex(({uid}) => uid === quoteId),\n\t\t),\n\t);\n\tconst quote = shuffledQuotes[quoteIndex];\n\tconst {content, cite} = quote;\n\tlet {source, author} = quote;\n\tif (source) {\n\t\tsource = (\n\t\t\t<>\n\t\t\t\t“<cite>{source}</cite>”\n\t\t\t</>\n\t\t);\n\t\tif (cite) {\n\t\t\tsource = <AutoLink to={cite}>{source}</AutoLink>;\n\t\t}\n\t\tif (author) {\n\t\t\tsource = (\n\t\t\t\t<>\n\t\t\t\t\t– {author}, {source}\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t} else if (author) {\n\t\tif (cite) {\n\t\t\tauthor = <AutoLink to={cite}>{author}</AutoLink>;\n\t\t}\n\t\tsource = <>– {author}</>;\n\t}\n\tconst lines = content.split('\\n');\n\treturn (\n\t\t<div\n\t\t\tclassName={`big-quote ${showRefreshButton ? '' : 'no-refresh'}`}\n\t\t\tid={showRefreshButton && 'big-quote'}\n\t\t>\n\t\t\t<blockquote cite={cite}>\n\t\t\t\t{lines.map((line, i) => (\n\t\t\t\t\t<p key={i}>{line}</p>\n\t\t\t\t))}\n\t\t\t\t{source && <footer>{source}</footer>}\n\t\t\t</blockquote>\n\t\t\t{showRefreshButton && (\n\t\t\t\t<a\n\t\t\t\t\thref=\"#big-quote\"\n\t\t\t\t\taria-label=\"Load new quote\"\n\t\t\t\t\tclassName=\"refresh\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetQuoteIndex(\n\t\t\t\t\t\t\tprevIndex => (prevIndex + 1) % quotes.length,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Repeat />\n\t\t\t\t</a>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default BigQuote;\n","import contentTypes from '../util/ContentTypes';\nimport {useRect} from '../util/hooks';\nimport AutoLink, {ExternalLink} from './AutoLink';\nimport './ContentNode.css';\nimport cn from 'cnz';\nimport React from 'react';\n\n// TODO: Break this component and the grid fitting component out into separate\n//       files.\n// Each content type needs:\n//   \"uid\":\n//   \"type\":\n//   \"title\":\n//   \"date\":\nexport default React.memo(\n\tReact.forwardRef(function ContentNode(props, ref) {\n\t\tconst {\n\t\t\tEl = 'div',\n\t\t\ttype,\n\t\t\ttitle,\n\t\t\tdate,\n\t\t\tlink,\n\t\t\trepo,\n\t\t\tuid,\n\t\t\ttags,\n\t\t\tDoodle,\n\t\t\t// Warning: `masonry` cannot change within the component’s lifetime.\n\t\t\tmasonry,\n\t\t\thidden,\n\t\t} = props;\n\n\t\tif (type === 'doodle') return <Doodle ref={ref} {...props} />;\n\n\t\tconst contentType = contentTypes[type];\n\t\tif (!contentType) return null;\n\t\tconst {className = '', readableType, shortType, Inner} = contentType;\n\n\t\tlet innerRef, innerRect, span;\n\t\tif (masonry) {\n\t\t\t[innerRef, innerRect] = useRect();\n\t\t\t// Inner: Math.ceil((height + 27) / (27 * 2))\n\t\t\t//                            ^ \"+ 27\" accounts for height falling within gap.\n\t\t\t//     (27 * 2) is the row + gap height ^\n\t\t\t// With outer padding: Math.ceil((height + 27 + 46) / (27 * 2))\n\t\t\t//                    = Math.ceil(height / 54) + 1\n\t\t\t// TODO(riley): Was this with the new design system.\n\t\t\t// const span = height && Math.ceil((height + 19) / 54) + 1;\n\t\t\tspan = innerRect && Math.ceil((innerRect.height + 82) / 130);\n\t\t}\n\n\t\treturn (\n\t\t\t<El\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'content-node',\n\t\t\t\t\tclassName,\n\t\t\t\t\ttype\n\t\t\t\t\t\t.split(/(?=[A-Z])/)\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase(),\n\t\t\t\t\tmasonry && (innerRect ? 'measured' : 'transparent'),\n\t\t\t\t\thidden && 'visually-hidden',\n\t\t\t\t)}\n\t\t\t\tkey={uid}\n\t\t\t\tref={ref}\n\t\t\t\tstyle={span && masonry ? {gridRowEnd: `span ${span}`} : null}\n\t\t\t>\n\t\t\t\t{/* Note: might be able to make this more semantic. Sources:\n\t\t\thttps://stackoverflow.com/questions/12866008/html5-semantic-markup-for-blog-post-tags-and-categories\n\t\t\thttps://html.spec.whatwg.org/multipage/links.html#link-type-tag */}\n\t\t\t\t<div className=\"inner\" ref={innerRef}>\n\t\t\t\t\t<div className=\"content-type\">\n\t\t\t\t\t\t{shortType ?? readableType}\n\t\t\t\t\t</div>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t{link ? (\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t<AutoLink\n\t\t\t\t\t\t\t\t\tto={link}\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{__html: title}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h1 dangerouslySetInnerHTML={{__html: title}} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"subheading\">\n\t\t\t\t\t\t\t<time dateTime={date}>\n\t\t\t\t\t\t\t\t{date.replace(/-/g, '.')}\n\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t{repo && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t• From repository{' '}\n\t\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\t\tto={`https://github.com/${repo}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{repo}\n\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t\t<Inner {...props} />\n\t\t\t\t\t{tags && (\n\t\t\t\t\t\t<footer>\n\t\t\t\t\t\t\t<ul className=\"tags\">\n\t\t\t\t\t\t\t\t{tags.map(tag => (\n\t\t\t\t\t\t\t\t\t<li key={tag}>{tag}</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</footer>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</El>\n\t\t);\n\t}),\n);\n\n/*\ncase 'project':\n\tif (node.tags.includes('starred')) className = 'span-2';\n*/\n","import './ContentGrid.css';\nimport ContentNode from './ContentNode';\nimport {SettingsContext} from './SettingsProvider';\nimport React, {useContext} from 'react';\n\nexport default React.memo(\n\t({nodes, hiddenNodes = [], masonry, lazyLoadRef}) => {\n\t\tconst {theme, blockEmbeds} = useContext(SettingsContext);\n\t\treturn (\n\t\t\t<ul className={`content-grid${masonry ? ' masonry' : ''}`}>\n\t\t\t\t{nodes.map((node, i, {length}) => (\n\t\t\t\t\t<ContentNode\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\tEl=\"li\"\n\t\t\t\t\t\tblockEmbeds={blockEmbeds}\n\t\t\t\t\t\tmasonry={masonry}\n\t\t\t\t\t\tref={i === length - 1 ? lazyLoadRef : null}\n\t\t\t\t\t\tkey={node.uid}\n\t\t\t\t\t\t{...node}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t{hiddenNodes.map(node => (\n\t\t\t\t\t<ContentNode\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\tEl=\"li\"\n\t\t\t\t\t\tblockEmbeds={blockEmbeds}\n\t\t\t\t\t\thidden={true}\n\t\t\t\t\t\tkey={node.uid}\n\t\t\t\t\t\t{...node}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t},\n);\n","import {useInterval, useViewport} from '../util/hooks';\nimport TextGrid from './TextGrid';\nimport React, {useState} from 'react';\n\n/* Fun strings:\n▁▂▃▅▆▇▇▆▅▃▂▁\n➬➱➯➫–\n◯⦿◉◎\n○⊙⊚⦾⊛◌ ◌\n▙▛▜▟\n*/\n\n// HACK(riley): We potentially have two different useViewport refs on this\n//              component: one for pausing the animation, and one for checking\n//              scroll position for lazy loading. I'm attaching both to the\n//              root element for now, but there's gotta be a nicer way to do\n//              this.\nconst mergeRefs = (...refs) => {\n\tconst filteredRefs = refs.filter(Boolean);\n\tif (!filteredRefs.length) return null;\n\tif (filteredRefs.length === 1) return filteredRefs[0];\n\treturn el => {\n\t\tfilteredRefs.forEach(ref => {\n\t\t\tif (typeof ref === 'function') {\n\t\t\t\tref(el);\n\t\t\t} else {\n\t\t\t\tref.current = el;\n\t\t\t}\n\t\t});\n\t};\n};\n\nexport default React.forwardRef(\n\t(\n\t\t{\n\t\t\tchildren: text,\n\t\t\tms = 300,\n\t\t\tsize = [1, 1],\n\t\t\tclassPrefix = 'cycle-text',\n\t\t\tclassName = '',\n\t\t\tOuterElement = 'div',\n\t\t\t...rest\n\t\t},\n\t\tpassedRef,\n\t) => {\n\t\tconst [xSize, ySize] = size;\n\t\tconst n = xSize * ySize;\n\t\tconst [index, setIndex] = useState(0);\n\t\tconst [ref, inView] = useViewport();\n\t\tuseInterval(() => setIndex(index + 1), inView ? ms : null);\n\n\t\tif (n === 1)\n\t\t\treturn (\n\t\t\t\t<OuterElement\n\t\t\t\t\tref={mergeRefs(passedRef, ref)}\n\t\t\t\t\tclassName={`${className} ${classPrefix}-item`}\n\t\t\t\t\t{...rest}\n\t\t\t\t>\n\t\t\t\t\t{text[index % text.length]}\n\t\t\t\t</OuterElement>\n\t\t\t);\n\n\t\treturn (\n\t\t\t<TextGrid\n\t\t\t\tsize={size}\n\t\t\t\tclassPrefix={classPrefix}\n\t\t\t\tclassName={className}\n\t\t\t\tref={mergeRefs(passedRef, ref)}\n\t\t\t\tOuterElement={OuterElement}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{Array.from(\n\t\t\t\t\t{length: n},\n\t\t\t\t\t(_, i) =>\n\t\t\t\t\t\ttext[\n\t\t\t\t\t\t\tMath.floor(index / Math.pow(text.length, i)) %\n\t\t\t\t\t\t\t\ttext.length\n\t\t\t\t\t\t],\n\t\t\t\t).join('')}\n\t\t\t</TextGrid>\n\t\t);\n\t},\n);\n","import CycleText from '../components/CycleText';\nimport './GoUp.css';\nimport React from 'react';\n\nexport default () => (\n\t<div className=\"go-up\">\n\t\t<CycleText\n\t\t\tms={150}\n\t\t\tOuterElement=\"span\"\n\t\t\tonClick={() => {\n\t\t\t\twindow.scrollTo(0, 0);\n\t\t\t\tconst title = document.getElementById('page-header');\n\t\t\t\ttitle.focus({preventScroll: true});\n\t\t\t}}\n\t\t>\n\t\t\t➫➯➱➬–\n\t\t</CycleText>\n\t</div>\n);\n","import React from 'react';\n\nexport default React.forwardRef(\n\t(\n\t\t{\n\t\t\tchildren,\n\t\t\tsize: [xSize, ySize],\n\t\t\tclassPrefix = 'text-grid',\n\t\t\tclassName = '',\n\t\t\tOuterElement = 'div',\n\t\t\t...rest\n\t\t},\n\t\tref,\n\t) => (\n\t\t<OuterElement\n\t\t\tclassName={`${className} ${classPrefix}-grid`}\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'grid',\n\t\t\t\tgridTemplate: `repeat(${ySize}, 1fr) / repeat(${xSize}, 1fr)`,\n\t\t\t}}\n\t\t\t{...rest}\n\t\t\tref={ref}\n\t\t>\n\t\t\t{children.split('').map((letter, i) => (\n\t\t\t\t<span\n\t\t\t\t\tclassName={`${classPrefix}-item`}\n\t\t\t\t\tkey={`${children}-${i}`}\n\t\t\t\t>\n\t\t\t\t\t{letter}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</OuterElement>\n\t),\n);\n","import AutoLink from '../AutoLink';\nimport React from 'react';\n\nconst thirdThings = [\n\t'toymaker',\n\t'toolmaker',\n\t'noisemaker',\n\t'code gardener',\n\t'code breaker',\n\t'patcher',\n\t'circuitbender',\n\t'mender',\n\t'mentee',\n\t'mentor',\n\t'plant eater',\n\t'fixer',\n\t'remixer',\n\t'drummer',\n];\n\nfunction MeIntro() {\n\treturn (\n\t\t<p>\n\t\t\tI am a programmer, interface designer, and {thirdThings[2]}. Rooted\n\t\t\tin repair and craft, I strive to create transparent, remixable\n\t\t\tdigital tools for a sustainable and accessible future. I run a\n\t\t\tstudio called{' '}\n\t\t\t<AutoLink to=\"https://misery.co\">Misery & Co.</AutoLink> and am\n\t\t\ttaking commissions.\n\t\t</p>\n\t);\n}\n\nexport default MeIntro;\n","import AboutIntro from '../components/about/MeIntro';\nimport BigQuote from '../components/BigQuote';\nimport ContentGrid from '../components/ContentGrid';\nimport CycleText from '../components/CycleText';\nimport GoUp from '../components/GoUp';\nimport SEO from '../components/SEO';\nimport allProjectsQuery from '../util/all-projects-query';\nimport {sortByDate} from '../util/sorting-methods';\nimport './index.css';\nimport {Link} from 'gatsby';\nimport React from 'react';\n\nexport const Head = SEO;\n\nconst IndexPage = ({featuredProjects = []}) => {\n\treturn (\n\t\t<>\n\t\t\t<main className=\"main-content\">\n\t\t\t\t<div className=\"frontpage-grid\">\n\t\t\t\t\t<div className=\"about-stub\">\n\t\t\t\t\t\t<AboutIntro />{' '}\n\t\t\t\t\t\t<Link to=\"/about\" className=\"about-link\">\n\t\t\t\t\t\t\tMore{' '}\n\t\t\t\t\t\t\t<CycleText\n\t\t\t\t\t\t\t\tclassName=\"about-arrow\"\n\t\t\t\t\t\t\t\tOuterElement=\"span\"\n\t\t\t\t\t\t\t\tms={100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t➫➯➱➬–\n\t\t\t\t\t\t\t</CycleText>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Include News, Newsletter? */}\n\t\t\t\t\t<div className=\"main-projects-title\">\n\t\t\t\t\t\t<h2>Recent additions</h2>\n\t\t\t\t\t\t<Link className=\"lab-link\" to=\"/lab\">\n\t\t\t\t\t\t\t(explore all)\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ContentGrid nodes={featuredProjects} />\n\t\t\t\t\t\t<p className=\"explore-more\">\n\t\t\t\t\t\t\tSort through hundreds of projects and posts in{' '}\n\t\t\t\t\t\t\t<Link className=\"lab-link\" to=\"/lab\">\n\t\t\t\t\t\t\t\tthe lab\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<BigQuote quoteId=\"SPUTTERED_AND_STOPPED\" />\n\t\t\t\t<GoUp />\n\t\t\t</main>\n\t\t</>\n\t);\n};\n\nconst IndexPageWrapper = props => {\n\tconst featuredProjects = sortByDate(allProjectsQuery())\n\t\t.filter(project => (project.coolness ?? 100) > 40)\n\t\t.slice(0, 5);\n\treturn <IndexPage {...props} featuredProjects={featuredProjects} />;\n};\n\nexport default IndexPageWrapper;\n","import AutoLink, {ExternalLink} from '../components/AutoLink';\nimport React, {useState} from 'react';\n\nconst BlockEmbedButton = ({type, onClick}) => (\n\t<button className=\"block-embed-button default-button\" onClick={onClick}>\n\t\tLoad embedded media{type ? ` (${type})` : ''}\n\t</button>\n);\n\nexport const TitleOnly = () => null;\nexport const ProjectContent = ({descriptionList}) =>\n\tdescriptionList && (\n\t\t<main>\n\t\t\t{descriptionList.map((d, i) => (\n\t\t\t\t<p key={i} dangerouslySetInnerHTML={{__html: d}} />\n\t\t\t))}\n\t\t</main>\n\t);\nexport const PostContent = ({description, link, more}) =>\n\tdescription ? (\n\t\t<main>\n\t\t\t<div\n\t\t\t\tclassName={more ? 'excerpt' : null}\n\t\t\t\tdangerouslySetInnerHTML={{__html: description}}\n\t\t\t/>\n\t\t\t{more && (\n\t\t\t\t<p className=\"continue-reading\">\n\t\t\t\t\t<AutoLink to={link}>Continue reading</AutoLink>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</main>\n\t) : null;\nexport const ArenaChannelContent = ({description, length, updatedAt}) => (\n\t<main>\n\t\t{description && <p>{description}</p>}\n\t\t<p>\n\t\t\tAn Are.na channel with {length} blocks. Last updated{' '}\n\t\t\t{updatedAt.slice(0, 10)}.\n\t\t</p>\n\t</main>\n);\nexport const IconContent = ({image, title}) => (\n\t<main>\n\t\t<img\n\t\t\tsrc={image.url}\n\t\t\twidth={image.width}\n\t\t\theight={image.height}\n\t\t\talt={`${title} icon`}\n\t\t/>\n\t</main>\n);\nexport const DweetContent = ({title, blockEmbeds}) => {\n\tconst [showEmbed, setShowEmbed] = useState(false);\n\n\treturn (\n\t\t<div className=\"dweet-content\">\n\t\t\t{!blockEmbeds || showEmbed ? (\n\t\t\t\t<iframe\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"100%\"\n\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\tsrc={`https://www.dwitter.net/e/${title.slice(1)}`}\n\t\t\t\t\tallowFullScreen=\"true\"\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<BlockEmbedButton\n\t\t\t\t\ttype=\"Dwitter\"\n\t\t\t\t\tonClick={() => setShowEmbed(true)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\nexport const PatchContent = ({description, link}) => (\n\t<main>\n\t\t{description?.slice(-3) === '...' ? (\n\t\t\t<p>\n\t\t\t\t{description}{' '}\n\t\t\t\t<ExternalLink to={link}>\n\t\t\t\t\tread the full description on Patchstorage\n\t\t\t\t</ExternalLink>\n\t\t\t</p>\n\t\t) : (\n\t\t\t<p>{description}</p>\n\t\t)}\n\t</main>\n);\nexport const SongContent = ({title, uid, blockEmbeds}) => {\n\tconst [showEmbed, setShowEmbed] = useState(false);\n\n\treturn (\n\t\t<div className=\"song-content\">\n\t\t\t{!blockEmbeds || showEmbed ? (\n\t\t\t\t<iframe\n\t\t\t\t\ttitle={`An embedded song called \"${title}\"`}\n\t\t\t\t\tclassName=\"soundcloud\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"100\"\n\t\t\t\t\tscrolling=\"no\"\n\t\t\t\t\tframeBorder=\"no\"\n\t\t\t\t\tsrc={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${uid.slice(\n\t\t\t\t\t\tuid.indexOf('_') + 1,\n\t\t\t\t\t)}&color=%23000000&auto_play=false&hide_related=true&show_comments=false&show_user=false&show_reposts=false&show_teaser=true`}\n\t\t\t\t></iframe>\n\t\t\t) : (\n\t\t\t\t<BlockEmbedButton\n\t\t\t\t\ttype=\"SoundCloud\"\n\t\t\t\t\tonClick={() => setShowEmbed(true)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\nexport const VideoContent = ({\n\tblockEmbeds,\n\tbody,\n\tcontentType,\n\tdescription,\n\ttitle,\n\timage,\n\tlink,\n\tmore,\n}) => {\n\tconst [showEmbed, setShowEmbed] = useState(false);\n\n\treturn (\n\t\t<main>\n\t\t\t<div className=\"video-embed\">\n\t\t\t\t{!blockEmbeds || showEmbed ? (\n\t\t\t\t\t{\n\t\t\t\t\t\tvimeo: body && (\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{__html: body}} />\n\t\t\t\t\t\t),\n\t\t\t\t\t\tyoutube: (\n\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\ttitle={`An embedded video called \"${title}\"`}\n\t\t\t\t\t\t\t\tallowFullScreen\n\t\t\t\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\t\t\t\tsrc={`https://www.youtube-nocookie.com/embed/${body}`}\n\t\t\t\t\t\t\t></iframe>\n\t\t\t\t\t\t),\n\t\t\t\t\t}[contentType]\n\t\t\t\t) : (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${image.url})`,\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t\t\tbackgroundPosition: 'center',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockEmbedButton\n\t\t\t\t\t\t\ttype={\n\t\t\t\t\t\t\t\tcontentType === 'vimeo' ? 'Vimeo' : 'YouTube'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={() => setShowEmbed(true)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{description && (\n\t\t\t\t<>\n\t\t\t\t\t<p>{description}</p>\n\t\t\t\t\t{more && (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<ExternalLink to={link}>\n\t\t\t\t\t\t\t\tRead the full description on{' '}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvimeo: 'Vimeo',\n\t\t\t\t\t\t\t\t\t\tyoutube: 'YouTube',\n\t\t\t\t\t\t\t\t\t}[contentType]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</main>\n\t);\n};\nexport const ScreenshotContent = ({body, link, contentType, extraData}) => {\n\tlet innerContent;\n\tswitch (contentType) {\n\t\tcase 'photo':\n\t\t\t// TODO: If embeds are turned off, make innerContent something like:\n\t\t\t// <ExternalLink to={link}>See ${extraData[2]} images</ExternalLink>\n\t\t\tinnerContent = (\n\t\t\t\t<>\n\t\t\t\t\t<ExternalLink className=\"image-link\" to={link}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\theight={extraData[1]}\n\t\t\t\t\t\t\tsrc={body}\n\t\t\t\t\t\t\twidth={extraData[0]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t{extraData[2] > 1 && (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<ExternalLink to={link}>\n\t\t\t\t\t\t\t\t+ {extraData[2] - 1} more images\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'video':\n\t\t\tinnerContent = (\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tcontrols\n\t\t\t\t\theight={extraData[1] || 'auto'}\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\tsrc={body}\n\t\t\t\t\twidth={extraData[0]}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'audio':\n\t\t\tinnerContent = <audio controls preload=\"none\" src={body} />;\n\t\t\tbreak;\n\t}\n\treturn <main className=\"screenshot-content\">{innerContent}</main>;\n};\n\nexport default {\n\tdoodle: {\n\t\treadableType: 'Doodle',\n\t},\n\tdweet: {\n\t\tclassName: 'span-5',\n\t\treadableType: 'Dweet',\n\t\tInner: DweetContent,\n\t},\n\tpatch: {\n\t\tclassName: 'span-4',\n\t\treadableType: 'Patchstorage module',\n\t\tshortType: 'Patch',\n\t\tInner: PatchContent,\n\t},\n\tproject: {\n\t\tclassName: 'span-4',\n\t\treadableType: 'Project',\n\t\tInner: ProjectContent,\n\t},\n\tpost: {\n\t\tclassName: 'span-6',\n\t\treadableType: 'Blog post',\n\t\tInner: PostContent,\n\t},\n\tarenaChannel: {\n\t\tclassName: 'span-3',\n\t\treadableType: 'Are.na channel',\n\t\tInner: ArenaChannelContent,\n\t},\n\ticon: {\n\t\tclassName: 'span-3',\n\t\treadableType: 'Icon',\n\t\tInner: IconContent,\n\t},\n\tcommit: {\n\t\tclassName: 'span-6',\n\t\treadableType: 'Commit blog post',\n\t\tInner: PostContent,\n\t},\n\ttumblr: {\n\t\tclassName: 'span-6',\n\t\treadableType: 'SFPC blog post',\n\t\tInner: PostContent,\n\t},\n\tscreenshotsTumblr: {\n\t\tclassName: 'span-3',\n\t\treadableType: 'Screenshot',\n\t\tInner: ScreenshotContent,\n\t},\n\tsong: {\n\t\tclassName: 'span-5',\n\t\treadableType: 'Song',\n\t\tInner: SongContent,\n\t},\n\tvideo: {\n\t\tclassName: 'span-4',\n\t\treadableType: 'Video',\n\t\tInner: VideoContent,\n\t},\n};\n","const formatters = {\n\tpost: function formatPost(node) {\n\t\t// Move all `fields` properties to the top level and sort tags.\n\t\tconst {\n\t\t\tfields: {slug, ...fields},\n\t\t\tfrontmatter,\n\t\t\t...rest\n\t\t} = node;\n\t\treturn {\n\t\t\t...fields,\n\t\t\t...rest,\n\t\t\tfrontmatter: {\n\t\t\t\t...frontmatter,\n\t\t\t\ttags: [...(frontmatter.tags ?? [])].sort(),\n\t\t\t},\n\t\t\ttype: 'post',\n\t\t\tlink: slug,\n\t\t\ttags: ['instructional'],\n\t\t};\n\t},\n};\n\nexport default function formatProps(props) {\n\tconst formatter = formatters[props.type];\n\treturn formatter ? formatter(props) : props;\n}\n","import formatProps from './format-props.mjs';\nimport {useStaticQuery, graphql} from 'gatsby';\n\nexport function format({\n\tallMdx: {nodes: posts} = {nodes: []},\n\tallCombinedProjectsJson: {nodes: projects} = {nodes: []},\n}) {\n\treturn [\n\t\t...posts.map(p => ({\n\t\t\t...p,\n\t\t\ttype: 'post',\n\t\t})),\n\t\t...projects,\n\t].map(formatProps);\n}\n\nexport default () =>\n\tformat(\n\t\tuseStaticQuery(graphql`{\n\tallMdx(\n\t\tfilter: {internal: {contentFilePath: {regex: \"//data/markdown/posts/.*\\\\.mdx?$/\"}}}\n\t\tsort: {fields: {date: DESC}}\n\t) {\n\t\tnodes {\n\t\t\tmore\n\t\t\tdescription\n\t\t\tfrontmatter {\n\t\t\t\tlayout\n\t\t\t\ttags\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tuid\n\t\t\t\tslug\n\t\t\t\ttitle\n\t\t\t\tdate(formatString: \"YYYY-MM-DD\")\n\t\t\t}\n\t\t}\n\t}\n\tallCombinedProjectsJson {\n\t\tnodes {\n\t\t\tuid\n\t\t\ttype\n\t\t\ttitle\n\t\t\tcoolness\n\t\t\tdate\n\t\t\tlink\n\t\t\tdescription\n\t\t\tdescriptionList\n\t\t\ttags\n\t\t\trepo\n\t\t\tupdatedAt\n\t\t\tlength\n\t\t\tcontentType\n\t\t\tbody\n\t\t\timage {\n\t\t\t\theight\n\t\t\t\twidth\n\t\t\t\turl\n\t\t\t}\n\t\t\tmore\n\t\t\textraData\n\t\t}\n\t}\n}`),\n\t);\n","export function shuffle(nodes) {\n\tconst shuffled = [...nodes];\n\tfor (let i = shuffled.length - 1; i > 0; --i) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n\t}\n\treturn shuffled;\n}\n\nexport function sortByCoolness(nodes) {\n\treturn [...nodes].sort(({coolness: a = -1}, {coolness: b = -1}) => b - a);\n}\n\nexport function sortByDate(nodes) {\n\treturn [...nodes].sort((a, b) => b.date.localeCompare(a.date));\n}\n\nexport function sortByName(nodes) {\n\treturn [...nodes].sort((a, b) => a.title.localeCompare(b.title));\n}\n\nexport default [\n\t{\n\t\ttitle: 'date',\n\t\tsortFn: sortByDate,\n\t},\n\t{\n\t\ttitle: 'name',\n\t\tsortFn: sortByName,\n\t},\n\t{\n\t\ttitle: 'coolness',\n\t\tsortFn: sortByCoolness,\n\t},\n];\n"],"names":["props","React","Object","assign","xmlns","viewBox","width","height","fill","d","_ref","quoteId","showRefreshButton","allCombinedQuotesJson","nodes","quotes","useStaticQuery","shuffledQuotes","useState","shuffle","quoteIndex","setQuoteIndex","Math","max","findIndex","_ref2","uid","quote","content","cite","source","author","AutoLink","to","lines","split","className","id","map","line","i","key","href","onClick","prevIndex","length","Repeat","ref","El","type","title","date","link","repo","tags","Doodle","masonry","hidden","contentType","contentTypes","readableType","shortType","Inner","innerRef","innerRect","span","useRect","ceil","cn","join","toLowerCase","style","gridRowEnd","dangerouslySetInnerHTML","__html","dateTime","replace","ExternalLink","tag","hiddenNodes","lazyLoadRef","theme","blockEmbeds","useContext","SettingsContext","node","ContentNode","mergeRefs","_len","arguments","refs","Array","_key","filteredRefs","filter","Boolean","el","forEach","current","passedRef","children","text","ms","size","classPrefix","OuterElement","rest","xSize","ySize","n","index","setIndex","inView","useViewport","useInterval","TextGrid","from","_","floor","pow","CycleText","window","scrollTo","document","getElementById","focus","preventScroll","display","gridTemplate","letter","thirdThings","Head","SEO","IndexPage","featuredProjects","AboutIntro","Link","ContentGrid","BigQuote","GoUp","sortByDate","allProjectsQuery","project","_project$coolness","coolness","slice","BlockEmbedButton","PostContent","_ref3","description","more","doodle","dweet","_ref6","showEmbed","setShowEmbed","frameBorder","src","allowFullScreen","patch","_ref7","descriptionList","post","arenaChannel","_ref4","updatedAt","icon","_ref5","image","url","alt","commit","tumblr","screenshotsTumblr","_ref10","innerContent","body","extraData","autoPlay","controls","loop","muted","preload","song","_ref8","scrolling","indexOf","video","_ref9","vimeo","youtube","backgroundImage","position","top","left","right","bottom","backgroundSize","backgroundPosition","formatters","_frontmatter$tags","fields","slug","frontmatter","sort","formatProps","formatter","allMdx","posts","allCombinedProjectsJson","projects","p","format","shuffled","j","random","a","b","localeCompare","sortFn"],"sourceRoot":""}