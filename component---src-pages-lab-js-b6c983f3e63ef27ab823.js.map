{"version":3,"sources":["webpack:///./src/util/util.js","webpack:///./src/components/doodles/background-generator.js","webpack:///./src/components/grid-doodles.js","webpack:///./src/components/project-explorer.js","webpack:///./src/pages/lab.js"],"names":["randSequence","minLength","maxLength","bias","Array","from","length","Math","floor","random","lcm","a","b","min","gcd","t","max","defaultProps","width","zoom","dark","light","themeBias","seamless","getState","props","size","height","sequence","canvas","document","createElement","tiledCanvas","maxTiles","ctx","getContext","tiledCtx","i","x","y","fillStyle","fillRect","nTiles","offset","drawImage","BackgroundGenerator","ref","useState","setState","clicked","setClicked","useEffect","onClick","className","style","background","toDataURL","React","forwardRef","split","map","letter","key","animationDelay","classPrefix","OuterElement","ms","month","Date","getMonth","today","getDate","Component","chance","fn","SAVED_PROPERTIES","ProjectExplorer","getNodeTypes","state","nodeTypes","refreshDisplayNodes","window","forEach","localStorage","setItem","JSON","stringify","nodes","getDisplayNodes","shuffleDisplayNodes","shuffle","handleSortMethodChange","sortIdx","handleFilterTypeChange","e","filterType","target","value","handleTypeStateChange","typeIdx","checked","typeStates","updatedTypeStates","handleClearTypesClick","fill","handleTagStateChange","tagIdx","tagStates","updatedTagStates","handleClearTagsClick","tags","handleAscendingChange","ascending","Set","n","type","sort","localeCompare","initialState","drawerOpen","getItem","join","savedValue","parse","removeItem","sortFn","sortingMethods","checkedTypeNames","this","filter","_","checkedTagNames","tag","name","node","includes","reduce","partitions","push","doodles","filteredByType","sorted","tagName","ordered","reverse","doodle","shouldRender","splice","render","id","onChange","htmlFor","contentTypes","readableType","title","toUpperCase","slice","LazyGrid","setIsFullyLoaded","PureComponent","renderLimit","setRenderLimit","useInView","inView","entry","boundingClientRect","bottom","l","useStaticQuery","allTagsJson","allProjectsQuery","concat","gridDoodles","uid","Doodle","LabPage","location","isFullyLoaded","fromPage","quoteId"],"mappings":"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","file":"component---src-pages-lab-js-b6c983f3e63ef27ab823.js","sourcesContent":["// Returns a random bit array within a specified length range, with\n// configurable bias towards 0 or 1.\nexport function randSequence(minLength, maxLength, bias = 0.5) {\n\treturn Array.from(\n\t\t{\n\t\t\tlength: Math.floor(\n\t\t\t\tMath.random() * (maxLength - minLength + 1) + minLength\n\t\t\t),\n\t\t},\n\t\t() => Math.floor(Math.random() + bias)\n\t);\n}\n// Greatest common denominator of all time.\nexport function gcd(a, b) {\n\tif (a < b) [a, b] = [b, a];\n\tconst t = a % b;\n\treturn t ? gcd(b, t) : b;\n}\n// Lowest common multiple.\nexport function lcm(a, b) {\n\tif (!Math.min(a, b)) return Math.max(a, b);\n\treturn (a / gcd(a, b)) * b;\n}\n","import React, {useState, useEffect} from 'react';\nimport {randSequence, lcm} from '../../util/util';\n\nconst minWidth = 100; // Tiling width. Height is calculated dynamically.\nconst maxWidth = 200;\nconst minSequenceLength = 20; // Bigger numbers = more complex patterns.\nconst maxSequenceLength = 200;\n\n// For these backgrounds to tile properly, each subsequent column needs to be\n// shifted up by 1px. CSS doesn't currently support that, so we do it in\n// canvas. A max canvas width is set here so we don't go completely out of\n// control when there's a tall repeating pattern. \"Seamless\" mode can be set\n// to ensure a height over maxTiles is never reached, so it ensures a\n// perfectly tiling pattern.\nconst maxTiledWidth = 10000;\n\nconst defaultProps = {\n\twidth: minWidth + Math.floor(Math.random() * (maxWidth - minWidth) + 1),\n\tzoom: 6, // I think it looks better a bit chunky like this.\n\tdark: '#000',\n\tlight: '#fff',\n\tthemeBias: 0.65, // 0: light | 1: dark.\n\tseamless: true,\n};\n\n// TODO: Only run the createElements once.\nconst getState = props => {\n\tconst {width, dark, light, themeBias, seamless} = {\n\t\t...defaultProps,\n\t\t...props,\n\t};\n\tconst canvas = document.createElement('canvas');\n\tconst tiledCanvas = document.createElement('canvas');\n\n\tlet size, height, sequence;\n\tdo {\n\t\tsequence = randSequence(\n\t\t\tminSequenceLength,\n\t\t\tmaxSequenceLength,\n\t\t\tthemeBias\n\t\t);\n\t\tsize = lcm(width, sequence.length);\n\t\theight = size / width;\n\t} while (seamless && height > maxTiles);\n\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst maxTiles = Math.floor(maxTiledWidth / width);\n\n\tconst ctx = canvas.getContext('2d');\n\tconst tiledCtx = tiledCanvas.getContext('2d');\n\n\t// Create a single tile on the canvas.\n\tfor (let i = 0; i < size; ++i) {\n\t\tconst x = i % width;\n\t\tconst y = Math.floor(i / width);\n\t\tctx.fillStyle = sequence[i % sequence.length] ? dark : light;\n\t\tctx.fillRect(x, y, 1, 1);\n\t}\n\n\t// Tile the initial canvas onto a wider canvas to ensure x-axis tiling.\n\tconst nTiles = Math.min(maxTiles, height);\n\ttiledCanvas.width = width * nTiles;\n\ttiledCanvas.height = height;\n\tfor (let i = 0; i < nTiles; ++i) {\n\t\tlet offset = -i;\n\t\tdo {\n\t\t\ttiledCtx.drawImage(canvas, i * width, offset);\n\t\t\toffset += height;\n\t\t} while (offset <= height);\n\t}\n\n\treturn [tiledCanvas, nTiles, height];\n};\n\nexport default function BackgroundGenerator(props, ref) {\n\tconst [[tiledCanvas, nTiles, height], setState] = useState([]);\n\tconst [clicked, setClicked] = useState(false);\n\tuseEffect(() => {\n\t\tsetState(getState(props));\n\t}, []);\n\tconst {width, zoom, dark, light, themeBias} = {...defaultProps, ...props};\n\t// Apply the wide, tileable canvas as a repeating background.\n\treturn (\n\t\t<li\n\t\t\tonClick={() => {\n\t\t\t\tsetState(getState(props));\n\t\t\t\tif (!clicked) setClicked(true);\n\t\t\t}}\n\t\t\tclassName=\"content-node doodle doodle-background-generator\"\n\t\t\tstyle={\n\t\t\t\ttiledCanvas && {\n\t\t\t\t\tbackground: `${themeBias > 0.5 ? dark : light} left top/${\n\t\t\t\t\t\twidth * nTiles * zoom\n\t\t\t\t\t}px ${height * zoom}px url(${tiledCanvas.toDataURL()}`,\n\t\t\t\t}\n\t\t\t}\n\t\t\tref={ref}\n\t\t>\n\t\t\t{clicked || <span>Click?</span>}\n\t\t</li>\n\t);\n}\n","import React from 'react';\n\nimport TextGrid from './text-grid';\nimport CycleText from './cycle-text';\nimport BackgroundGenerator from './doodles/background-generator';\n\nimport './grid-doodles.css';\n\nexport default [\n\t[React.forwardRef(BackgroundGenerator), 0.8],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<li className=\"doodle wavytext\" ref={ref}>\n\t\t\t\t{'@rileyjshaw'.split('').map((letter, i, {length}) => (\n\t\t\t\t\t<span\n\t\t\t\t\t\tkey={`wavytext-${i}`}\n\t\t\t\t\t\tstyle={{animationDelay: `${(i - length) * 0.2}s`}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{letter}\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t</li>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<TextGrid\n\t\t\t\tsize={[3, 3]}\n\t\t\t\tclassPrefix=\"doingreat\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\tDOINGREAT\n\t\t\t</TextGrid>\n\t\t)),\n\t\t0.1,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"wavebump\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={50}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t▁▂▃▅▆▇▇▆▅▃▂▁\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.3,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"droplet\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={150}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t⊙⊚⦾⊛\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"circles\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={100}\n\t\t\t\tsize={[2, 2]}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t◯⦿◉◎\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<li className=\"content-node snowman doodle\" {...props} ref={ref}>\n\t\t\t\t☃\n\t\t\t</li>\n\t\t)),\n\t\t0.3,\n\t\t() => {\n\t\t\tconst month = new Date().getMonth();\n\t\t\treturn month < 4 || month === 11;\n\t\t},\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"wavebump\"\n\t\t\t\tclassName=\"content-node tall doodle\"\n\t\t\t\tms={400}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\tHail Santa!\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.05,\n\t\t() => {\n\t\t\tconst today = new Date();\n\t\t\treturn today.getMonth() === 11 && today.getDate() === 25;\n\t\t},\n\t],\n].map(([Component, chance, fn]) => [\n\tComponent,\n\tfn ? () => fn() || Math.random() < chance : () => Math.random() < chance,\n]);\n","// TODO(RILEY): https://tympanus.net/Development/TiltHoverEffects/index.html\nimport React, {Fragment, useState, useEffect} from 'react';\nimport {useStaticQuery, graphql} from 'gatsby';\n\nimport sortingMethods, {shuffle} from '../util/sorting-methods';\nimport allProjectsQuery from '../util/all-projects-query';\nimport contentTypes from '../util/content-types';\nimport {useInView} from '../util/hooks';\n\nimport gridDoodles from './grid-doodles';\nimport ContentGrid from './content-grid';\n\nimport './project-explorer.css';\n\n// TODO(riley): Get rid of the class component, switch to useStickyState.\nconst SAVED_PROPERTIES = [\n\t'typeStates',\n\t'sortIdx',\n\t'ascending',\n\t'filterType',\n\t'tagStates',\n];\nclass ProjectExplorer extends React.PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst nodeTypes = Array.from(\n\t\t\tnew Set(this.props.nodes.map(n => n.type))\n\t\t).sort((a, b) => a.localeCompare(b));\n\n\t\tconst initialState = {\n\t\t\tnodeTypes,\n\t\t\ttypeStates: Array.from(nodeTypes).fill(true),\n\t\t\tsortIdx: 0,\n\t\t\tascending: false,\n\t\t\tfilterType: 'any',\n\t\t\ttagStates: Array.from(props.tags).fill(false),\n\t\t\tdrawerOpen: false,\n\t\t};\n\n\t\tif (typeof window !== 'undefined') {\n\t\t\tif (\n\t\t\t\twindow.localStorage.getItem('LAB_V1_nodeTypes') ===\n\t\t\t\tinitialState.nodeTypes.join('')\n\t\t\t) {\n\t\t\t\tSAVED_PROPERTIES.forEach(key => {\n\t\t\t\t\tconst savedValue = JSON.parse(\n\t\t\t\t\t\twindow.localStorage.getItem(`LAB_V1_${key}`)\n\t\t\t\t\t);\n\t\t\t\t\tif (savedValue != null) initialState[key] = savedValue;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twindow.localStorage.setItem(\n\t\t\t\t\t'LAB_V1_nodeTypes',\n\t\t\t\t\tinitialState.nodeTypes.join('')\n\t\t\t\t);\n\t\t\t\tSAVED_PROPERTIES.forEach(key =>\n\t\t\t\t\twindow.localStorage.removeItem(`LAB_V1_${key}`)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.state = {\n\t\t\t...initialState,\n\t\t\tnodes: this.getDisplayNodes(initialState, props),\n\t\t};\n\t}\n\n\t// HACK(riley): Better to not use state and memoize this on `props.nodes`.\n\tgetNodeTypes = (state = this.state) => state.nodeTypes;\n\n\tgetDisplayNodes(state, {tags, nodes}) {\n\t\tconst {sortFn} = sortingMethods[state.sortIdx];\n\t\tconst checkedTypeNames = this.getNodeTypes(state).filter(\n\t\t\t(_, i) => state.typeStates[i]\n\t\t);\n\t\tconst checkedTagNames = tags\n\t\t\t.filter((_, i) => state.tagStates[i])\n\t\t\t.map(tag => tag.name);\n\t\tconst [doodles, filteredByType] = (checkedTypeNames.length\n\t\t\t? nodes.filter(node => checkedTypeNames.includes(node.type))\n\t\t\t: nodes\n\t\t).reduce(\n\t\t\t(partitions, node) => {\n\t\t\t\tpartitions[node.type === 'doodle' ? 0 : 1].push(node);\n\t\t\t\treturn partitions;\n\t\t\t},\n\t\t\t[[], []]\n\t\t);\n\t\tconst filtered = checkedTagNames.length\n\t\t\t? filteredByType.filter(node =>\n\t\t\t\t\tcheckedTagNames[\n\t\t\t\t\t\tstate.filterType === 'any' ? 'some' : 'every'\n\t\t\t\t\t](tagName => node.tags && node.tags.includes(tagName))\n\t\t\t  )\n\t\t\t: filteredByType;\n\t\tconst sorted = sortFn(filtered);\n\t\tconst ordered = state.ascending ? sorted.reverse() : sorted;\n\t\t// Insert a few doodles into a random position.\n\t\tdoodles\n\t\t\t.filter(doodle => doodle.shouldRender())\n\t\t\t.forEach(doodle => {\n\t\t\t\tordered.splice(\n\t\t\t\t\tMath.floor(Math.random() * ordered.length),\n\t\t\t\t\t0,\n\t\t\t\t\tdoodle\n\t\t\t\t);\n\t\t\t});\n\t\treturn ordered;\n\t}\n\n\trefreshDisplayNodes = () => {\n\t\tthis.setState((state, props) => {\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tSAVED_PROPERTIES.forEach(key =>\n\t\t\t\t\twindow.localStorage.setItem(\n\t\t\t\t\t\t`LAB_V1_${key}`,\n\t\t\t\t\t\tJSON.stringify(state[key])\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tnodes: this.getDisplayNodes(state, props),\n\t\t\t};\n\t\t});\n\t};\n\n\tshuffleDisplayNodes = () => {\n\t\tthis.setState(({nodes}) => {\n\t\t\treturn {nodes: shuffle(nodes)};\n\t\t});\n\t};\n\n\thandleSortMethodChange = sortIdx => {\n\t\tthis.setState({sortIdx}, this.refreshDisplayNodes);\n\t};\n\n\thandleFilterTypeChange = e => {\n\t\tthis.setState({filterType: e.target.value}, this.refreshDisplayNodes);\n\t};\n\n\thandleTypeStateChange = (e, typeIdx) => {\n\t\tconst {checked} = e.target;\n\t\tthis.setState(({typeStates}) => {\n\t\t\tconst updatedTypeStates = [...typeStates];\n\t\t\tupdatedTypeStates[typeIdx] = checked;\n\t\t\treturn {typeStates: updatedTypeStates};\n\t\t}, this.refreshDisplayNodes);\n\t};\n\n\thandleClearTypesClick = () => {\n\t\tthis.setState(\n\t\t\t{typeStates: new Array(this.getNodeTypes().length).fill(false)},\n\t\t\tthis.refreshDisplayNodes\n\t\t);\n\t};\n\n\thandleTagStateChange = (e, tagIdx) => {\n\t\tconst {checked} = e.target;\n\t\tthis.setState(({tagStates}) => {\n\t\t\tconst updatedTagStates = [...tagStates];\n\t\t\tupdatedTagStates[tagIdx] = checked;\n\t\t\treturn {tagStates: updatedTagStates};\n\t\t}, this.refreshDisplayNodes);\n\t};\n\n\thandleClearTagsClick = () => {\n\t\tthis.setState(\n\t\t\t{tagStates: new Array(this.props.tags.length).fill(false)},\n\t\t\tthis.refreshDisplayNodes\n\t\t);\n\t};\n\n\thandleAscendingChange = e => {\n\t\tthis.setState({ascending: e.target.checked}, this.refreshDisplayNodes);\n\t};\n\n\trender() {\n\t\t// const {tags} = this.props;\n\t\tconst {nodes} = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"project-explorer\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"project-explorer-hide-filters\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tthis.setState(({drawerOpen}) => ({\n\t\t\t\t\t\t\tdrawerOpen: !drawerOpen,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{this.state.drawerOpen\n\t\t\t\t\t\t? 'Hide filters ▲'\n\t\t\t\t\t\t: 'Show filters ▼'}\n\t\t\t\t</button>\n\t\t\t\t<div className=\"filters\">\n\t\t\t\t\t{this.state.drawerOpen && (\n\t\t\t\t\t\t/* TODO(riley): Once display: contents or display:\n\t\t\t\t\t\tsubgrid have good support, replace <p.legend> with\n\t\t\t\t\t\t<legend>, get rid of the .inputs wrappers, and nest\n\t\t\t\t\t\t<fieldset>s (display: contents) around each <legend> /\n\t\t\t\t\t\t.inputs / button set. Until then, the children need to\n\t\t\t\t\t\tbe direct descendents of the grid, and a11y takes a\n\t\t\t\t\t\thit. */\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<p className=\"legend\">Show:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t{this.getNodeTypes().map((type, i) => (\n\t\t\t\t\t\t\t\t\t<Fragment key={type}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname={`labs-types-${type}`}\n\t\t\t\t\t\t\t\t\t\t\tid={`labs-types-${type}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={type}\n\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.typeStates[i]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleTypeStateChange(\n\t\t\t\t\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t\t\t\t\t\ti\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={`labs-types-${type}`}>\n\t\t\t\t\t\t\t\t\t\t\t{contentTypes[type].readableType}s\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"labs-clear labs-clear-types\"\n\t\t\t\t\t\t\t\tonClick={this.handleClearTypesClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tX\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<p className=\"legend\">Sort by:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t{sortingMethods.map(({title}, i) => (\n\t\t\t\t\t\t\t\t\t<Fragment key={title}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\tname={`labs-sort-${title}`}\n\t\t\t\t\t\t\t\t\t\t\tid={`labs-sort-${title}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.sortIdx === i}\n\t\t\t\t\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleSortMethodChange(i)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={`labs-sort-${title}`}>\n\t\t\t\t\t\t\t\t\t\t\t{title.toUpperCase().slice(0, 1) +\n\t\t\t\t\t\t\t\t\t\t\t\ttitle.slice(1)}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"legend\">Order:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"labs-order\"\n\t\t\t\t\t\t\t\t\tid=\"labs-order\"\n\t\t\t\t\t\t\t\t\tvalue=\"ascending\"\n\t\t\t\t\t\t\t\t\tchecked={this.state.ascending}\n\t\t\t\t\t\t\t\t\tonChange={this.handleAscendingChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"labs-order\">Reverse</label>\n\t\t\t\t\t\t\t\t<button onClick={this.shuffleDisplayNodes}>\n\t\t\t\t\t\t\t\t\tShuffle\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/* <p className=\"legend\">Match:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"labs-filter-any\"\n\t\t\t\t\t\t\t\t\tid=\"labs-filter-any\"\n\t\t\t\t\t\t\t\t\tvalue=\"any\"\n\t\t\t\t\t\t\t\t\tchecked={this.state.filterType === 'any'}\n\t\t\t\t\t\t\t\t\tonChange={this.handleFilterTypeChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"labs-filter-any\">Any</label>\n\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"labs-filter-all\"\n\t\t\t\t\t\t\t\t\tid=\"labs-filter-all\"\n\t\t\t\t\t\t\t\t\tvalue=\"all\"\n\t\t\t\t\t\t\t\t\tchecked={this.state.filterType === 'all'}\n\t\t\t\t\t\t\t\t\tonChange={this.handleFilterTypeChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"labs-filter-all\">All</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"legend\">Of:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t{tags.map((tag, i) => (\n\t\t\t\t\t\t\t\t\t<Fragment key={tag.name}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname={`labs-tags-${tag.name}`}\n\t\t\t\t\t\t\t\t\t\t\tid={`labs-tags-${tag.name}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={tag.name}\n\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.tagStates[i]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleTagStateChange(e, i)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\thtmlFor={`labs-tags-${tag.name}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{tag.readable}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"labs-clear labs-clear-tags\"\n\t\t\t\t\t\t\t\tonClick={this.handleClearTagsClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tX\n\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<p className=\"result-details\">\n\t\t\t\t\tFound <strong>{nodes.length}</strong> entries from{' '}\n\t\t\t\t\t<strong>\n\t\t\t\t\t\t{this.state.typeStates.reduce((a, b) => a + b) ||\n\t\t\t\t\t\t\tthis.state.typeStates.length}\n\t\t\t\t\t</strong>{' '}\n\t\t\t\t\tsources:\n\t\t\t\t</p>\n\t\t\t\t<LazyGrid\n\t\t\t\t\tnodes={nodes}\n\t\t\t\t\tsetIsFullyLoaded={this.props.setIsFullyLoaded}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// TODO(riley): Ensure this lazy-loading works with a screen reader.\nfunction LazyGrid({nodes, setIsFullyLoaded}) {\n\tconst [renderLimit, setRenderLimit] = useState(20);\n\tconst [ref, inView, entry] = useInView();\n\t// If the last node is on or above the viewport, load the next 20 nodes.\n\t// Note that the “last” node might be higher up on the page, eg. if it has\n\t// a small footprint and squeezes into some top row masonry. Hence the on\n\t// *or above* the viewport check.\n\tuseEffect(() => {\n\t\tif (\n\t\t\t(inView || (entry?.boundingClientRect?.bottom ?? 1) <= 0) &&\n\t\t\trenderLimit < nodes.length\n\t\t) {\n\t\t\tsetRenderLimit(l => l + 20);\n\t\t}\n\t}, [inView, entry?.boundingClientRect?.bottom]);\n\tuseEffect(() => {\n\t\tsetRenderLimit(20);\n\t}, [nodes.length]);\n\tuseEffect(() => {\n\t\tsetIsFullyLoaded && setIsFullyLoaded(renderLimit >= nodes.length);\n\t}, [nodes.length, renderLimit]);\n\n\treturn <ContentGrid nodes={nodes.slice(0, renderLimit)} ref={ref} />;\n}\n\nexport default props => {\n\tconst {\n\t\tallTagsJson: {nodes: tags},\n\t} = useStaticQuery(graphql`\n\t\t{\n\t\t\tallTagsJson {\n\t\t\t\tnodes {\n\t\t\t\t\tname\n\t\t\t\t\treadable\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\tconst nodes = allProjectsQuery().concat(\n\t\tgridDoodles.map(([Doodle, shouldRender], i) => ({\n\t\t\tuid: `DOODLE_${i}`,\n\t\t\ttype: 'doodle',\n\t\t\tDoodle,\n\t\t\tshouldRender,\n\t\t}))\n\t);\n\n\treturn <ProjectExplorer nodes={nodes} tags={tags} {...props} />;\n};\n","import React, {useState} from 'react';\n\nimport BigQuote from '../components/big-quote';\nimport GoUp from '../components/go-up';\nimport Layout from '../components/layout';\nimport PageHeader from '../components/page-header';\nimport ProjectExplorer from '../components/project-explorer';\nimport SEO from '../components/seo';\n\nconst LabPage = ({location}) => {\n\tconst [isFullyLoaded, setIsFullyLoaded] = useState(false);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title=\"Lab\" />\n\t\t\t<PageHeader fromPage={location?.state?.fromPage}>Lab</PageHeader>\n\t\t\t<ProjectExplorer setIsFullyLoaded={setIsFullyLoaded} />\n\t\t\t{isFullyLoaded && (\n\t\t\t\t<>\n\t\t\t\t\t<BigQuote quoteId=\"VOLTAIRE_BORING\" />\n\t\t\t\t\t<GoUp />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Layout>\n\t);\n};\n\nexport default LabPage;\n"],"sourceRoot":""}