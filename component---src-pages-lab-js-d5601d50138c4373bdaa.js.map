{"version":3,"file":"component---src-pages-lab-js-d5601d50138c4373bdaa.js","mappings":"wWASA,EAAe,CACd,CACCA,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3BF,EAAAA,cAACG,EAAAA,EAAmB,CAACC,GAAG,KAAKF,IAAKA,GAAO,IAE1C,IAED,CACCF,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3BF,EAAAA,cAACK,EAAAA,EAAsB,CAACD,GAAG,KAAKF,IAAKA,GAAO,IAE7C,IAED,CAACF,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAAKF,EAAAA,cAACM,EAAAA,EAAQ,CAACJ,IAAKA,GAAO,IAAG,IAC3D,CAACF,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAAKF,EAAAA,cAACO,EAAAA,EAAI,CAACL,IAAKA,GAAO,IAAG,IACvD,CACCF,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3BF,EAAAA,cAAA,MAAIQ,UAAU,kBAAkBN,IAAKA,GACnC,aAAaO,MAAM,IAAIC,KAAI,SAACC,EAAQC,EAACC,GAAA,IAAGC,EAAMD,EAANC,OAAM,OAC9Cd,EAAAA,cAAA,QACCe,IAAKH,EACLI,MAAO,CAACC,eAAkC,IAAdL,EAAIE,GAAa,MAE5CH,EACK,IAEJ,IAEN,IAED,CACCX,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3BF,EAAAA,cAACkB,EAAAA,EAAQ,CACRC,KAAM,CAAC,EAAG,GACVC,YAAY,YACZZ,UAAU,sBACVa,aAAa,KACbnB,IAAKA,GACL,YAEU,IAEZ,IAED,CACCF,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3BF,EAAAA,cAACsB,EAAAA,EAAS,CACTF,YAAY,WACZZ,UAAU,sBACVe,GAAI,GACJF,aAAa,KACbnB,IAAKA,GACL,eAEW,IAEb,IAED,CACCF,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3BF,EAAAA,cAACsB,EAAAA,EAAS,CACTF,YAAY,UACZZ,UAAU,sBACVe,GAAI,IACJF,aAAa,KACbnB,IAAKA,GACL,OAEW,IAEb,IAED,CACCF,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3BF,EAAAA,cAACsB,EAAAA,EAAS,CACTF,YAAY,UACZZ,UAAU,sBACVe,GAAI,IACJJ,KAAM,CAAC,EAAG,GACVE,aAAa,KACbnB,IAAKA,GACL,OAEW,IAEb,IAED,CACCF,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3BF,EAAAA,cAAA,MAAIQ,UAAU,8BAA8BN,IAAKA,GAAK,IAEjD,IAEN,GACA,WACC,IAAMsB,GAAQ,IAAIC,MAAOC,WACzB,OAAOF,EAAQ,GAAe,KAAVA,CACrB,GAED,CACCxB,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3BF,EAAAA,cAACsB,EAAAA,EAAS,CACTF,YAAY,WACZZ,UAAU,2BACVe,GAAI,IACJF,aAAa,KACbnB,IAAKA,GACL,kBAEW,IAEb,IACA,WACC,IAAMyB,EAAQ,IAAIF,KAClB,OAA4B,KAArBE,EAAMD,YAAyC,KAApBC,EAAMC,SACzC,IAEAlB,KAAI,SAAAmB,GAAA,IAAEC,EAASD,EAAA,GAAEE,EAAMF,EAAA,GAAEG,EAAEH,EAAA,SAAM,CAClCC,EACAE,EAAK,kBAAMA,KAAQC,KAAKC,SAAWH,CAAM,EAAG,kBAAME,KAAKC,SAAWH,CAAM,EACxE,I,6BCrHKI,EAAkBnC,EAAAA,MAAW,SAAyBC,GAC3D,IAAAmC,GAA6BC,EAAAA,EAAAA,UAAQ,WACpC,IAAMC,EAAYC,MAAMC,KACvB,IAAIC,IAAIxC,EAAMyC,MAAMhC,KAAI,SAAAiC,GAAC,OAAIA,EAAEC,IAAI,MAClCC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,IACnC,MAAO,CAACT,EAAU,GAAIA,EAAUW,KAAK,IAAMC,EAAAA,GAAAA,OAC5C,GAAG,CAACjD,EAAMyC,QALHJ,EAASF,EAAA,GAAEe,EAAOf,EAAA,GAOzBgB,GAAoCC,EAAAA,EAAAA,WAAS,GAAtCC,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAkCC,EAAAA,EAAAA,KACjC,EACAC,EAAAA,EAAAA,aACA,CAACP,QAAAA,IAHKQ,EAASH,EAAA,GAAEI,EAAYJ,EAAA,GAK9BK,GAA8BJ,EAAAA,EAAAA,IAAe,EAAGC,EAAAA,EAAAA,WAAyB,CACxEP,QAAAA,IADMW,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAG1BG,GAAoCP,EAAAA,EAAAA,KACnC,kBAAMlB,MAAMC,KAAKF,GAAW2B,MAAK,EAAK,GACtCP,EAAAA,EAAAA,cACA,CAACP,QAAAA,EAASe,YAAa,KAHjBC,EAAUH,EAAA,GAAEI,EAAaJ,EAAA,GAM1BK,EACLF,EAAWG,QAAO,SAACxB,EAAGC,GAAC,OAAKD,EAAIC,CAAC,GAAE,IAAMoB,EAAWrD,OAE/C4B,GAAQL,EAAAA,EAAAA,UAAQ,WACrB,IAAK8B,EAAWrD,OAAQ,OAAO,KAC/B,IAAOyD,EAAUrB,EAAAA,GAAeY,GAAzBS,OACDC,EAAmBlC,EAAUmC,QAAO,SAACC,EAAG9D,GAAC,OAAKuD,EAAWvD,EAAE,IACjE+D,GACCH,EAAiB1D,OACdb,EAAMyC,MAAM+B,QAAO,SAAAG,GAAI,OACvBJ,EAAiBK,SAASD,EAAKhC,KAAK,IAEpC3C,EAAMyC,OACR4B,QACD,SAACQ,EAAYF,GAEZ,OADAE,EAAyB,WAAdF,EAAKhC,KAAoB,EAAI,GAAGmC,KAAKH,GACzCE,CACR,GACA,CAAC,GAAI,KAXCE,EAAOL,EAAA,GAaRM,EAASV,EAbSI,EAAA,IAclBO,EAAUvB,EAAYsB,EAAOE,UAAYF,EAY/C,OAVAD,EAAQI,SAAQ,SAAAC,GACf,IAAOC,EAAyBD,EAAzBC,aAAiBC,GAAIC,EAAAA,EAAAA,GAAIH,EAAMI,GAClCH,KACHJ,EAAQQ,OACPzD,KAAK0D,MAAM1D,KAAKC,SAAWgD,EAAQpE,QACnC,EACAyE,EAGH,IACOL,CACR,GAAG,CAACvB,EAAWG,EAASK,EAAYlE,EAAMyC,QAE1C,OACCA,GACC1C,EAAAA,cAAA,OAAKQ,UAAU,oBACdR,EAAAA,cAAA,UACCQ,UAAU,gCACVoF,QAAS,kBAAMrC,GAAc,SAAAsC,GAAS,OAAKA,CAAS,GAAC,GAEpDvC,EAAa,iBAAmB,kBAElCtD,EAAAA,cAAA,OAAKQ,UAAU,WACb8C,GAQAtD,EAAAA,cAAA,OAAKQ,UAAU,YACdR,EAAAA,cAAA,KAAGQ,UAAU,UAAS,SACtBR,EAAAA,cAAA,OAAKQ,UAAU,UACb8B,EAAU5B,KAAI,SAACkC,EAAMhC,GAAC,OACtBZ,EAAAA,cAAC8F,EAAAA,SAAQ,CAAC/E,IAAK6B,GACd5C,EAAAA,cAAA,SACCQ,UAAU,kBACVoC,KAAK,WACLmD,KAAI,cAAgBnD,EACpBoD,GAAE,cAAgBpD,EAClBqD,MAAOrD,EACPsD,QAAS/B,EAAWvD,GACpBuF,SAAU,SAAAC,GACT,IAAOF,EAAWE,EAAEC,OAAbH,QACP9B,GACC,SAAAkC,GACC,IAAMC,EACL,IACID,GAIL,OAFAC,EAAkB3F,GACjBsF,EACMK,CACR,GAEF,IAEDvG,EAAAA,cAAA,SAAOwG,QAAO,cAAgB5D,GAC5B6D,EAAAA,GAAa7D,GAAM8D,aAAa,KAExB,KAGb1G,EAAAA,cAAA,UACCQ,UAAU,8BACVoF,QAAS,kBACRxB,EACC,IAAI7B,MAAMD,EAAUxB,QAAQmD,MAAK,GACjC,GAEF,KAGDjE,EAAAA,cAAA,KAAGQ,UAAU,UAAS,YACtBR,EAAAA,cAAA,OAAKQ,UAAU,UACb0C,EAAAA,GAAAA,KAAmB,SAAArC,EAAUD,GAAC,IAAT+F,EAAK9F,EAAL8F,MAAK,OAC1B3G,EAAAA,cAAC8F,EAAAA,SAAQ,CAAC/E,IAAK4F,GACd3G,EAAAA,cAAA,SACCQ,UAAU,kBACVoC,KAAK,QACLmD,KAAI,aAAeY,EACnBX,GAAE,aAAeW,EACjBV,MAAOU,EACPT,QAASpC,IAAYlD,EACrBuF,SAAU,kBAAMpC,EAAWnD,EAAE,IAE9BZ,EAAAA,cAAA,SAAOwG,QAAO,aAAeG,GAC3BA,EAAMC,cAAcC,MAAM,EAAG,GAC7BF,EAAME,MAAM,IAEJ,KAGb7G,EAAAA,cAAA,KAAGQ,UAAU,UAAS,UACtBR,EAAAA,cAAA,OAAKQ,UAAU,UACdR,EAAAA,cAAA,SACCQ,UAAU,kBACVoC,KAAK,WACLmD,KAAK,aACLC,GAAG,aACHC,MAAM,YACNC,QAASvC,EACTwC,SAAU,SAAAC,GAAC,OACVxC,EAAawC,EAAEC,OAAOH,QAAQ,IAGhClG,EAAAA,cAAA,SAAOwG,QAAQ,cAAa,cAUhCxG,EAAAA,cAAA,KAAGQ,UAAU,kBAAiB,SACvBR,EAAAA,cAAA,cAAS0C,EAAM5B,QAAgB,gBAAc,IACnDd,EAAAA,cAAA,cAASqE,GAAkB,UACb,IAAbA,EAAiB,GAAK,IAAI,KAE5BrE,EAAAA,cAAC8G,EAAQ,CACRpE,MAAOA,EACPqE,iBAAkB9G,EAAM8G,mBAK7B,IAEMD,EAAW9G,EAAAA,MAAW,SAAA6B,GAAgC,IAA9Ba,EAAKb,EAALa,MAAOqE,EAAgBlF,EAAhBkF,iBACpCC,GAAsC3D,EAAAA,EAAAA,UAAS,IAAxC4D,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA0CC,EAAAA,EAAAA,MAAnClH,EAAGiH,EAAA,GAAEE,EAAMF,EAAA,GAAEG,EAAkBH,EAAA,GAuBtC,OAjBAI,EAAAA,EAAAA,YAAU,YAEPF,IAAUC,aAAkB,EAAlBA,EAAoBE,SAAU,IACzCP,EAAcvE,EAAM5B,QAEpBoG,GAAe,SAAAO,GAAC,OAAIA,EAAI,EAAE,GAE5B,GAAG,CAACJ,EAAQC,KAEZC,EAAAA,EAAAA,YAAU,WACTL,EAAe,GAChB,GAAG,CAACxE,KAEJ6E,EAAAA,EAAAA,YAAU,WACTR,GAAoBA,EAAiBE,GAAevE,EAAM5B,OAC3D,GAAG,CAAC4B,EAAM5B,OAAQmG,IAGjBjH,EAAAA,cAAC0H,EAAAA,EAAW,CACXC,SAAO,EACPjF,MAAOA,EAAMmE,MAAM,EAAGI,GACtBW,YAAalF,EAAMmE,MAAMI,GACzBY,YAAa3H,GAGhB,IAgCA,EA9B+BF,EAAAA,MAAW,SAAAC,GACzC,IACsB6H,GAClBC,EAAAA,EAAAA,gBAAe,cADlBC,YAActF,MAWTuF,GAAcC,EAAAA,EAAAA,KACdxF,GAAQL,EAAAA,EAAAA,UACb,kBACC4F,EAAYE,OACXC,EAAAA,KAAgB,SAAAC,EAAyBzH,GAAH,MAAU,CAC/C0H,IAAI,UAAW1H,EACfgC,KAAM,SACN2F,OAHuBF,EAAA,GAIvB/C,aAJqC+C,EAAA,GAKrC,IACD,GACF,CAACJ,IAGF,OAAOjI,EAAAA,cAACmC,EAAeqG,OAAAC,OAAA,CAAC/F,MAAOA,EAAOoF,KAAMA,GAAU7H,GACvD,I,UCtPO,SAASyI,EAAKzI,GACpB,OAAOD,EAAAA,cAAC2I,EAAAA,EAAGH,OAAAC,OAAA,GAAKxI,EAAK,CAAE0G,MAAM,QAC9B,CAEA,IAgBA,EAhBgB,WACf,IAAAvD,GAA0CC,EAAAA,EAAAA,WAAS,GAA5CuF,EAAaxF,EAAA,GAAE2D,EAAgB3D,EAAA,GAEtC,OACCpD,EAAAA,cAAAA,EAAAA,SAAA,KACCA,EAAAA,cAACmC,EAAe,CAAC4E,iBAAkBA,IAClC6B,GACA5I,EAAAA,cAAAA,EAAAA,SAAA,KACCA,EAAAA,cAAC6I,EAAAA,EAAQ,CAACC,QAAQ,oBAClB9I,EAAAA,cAAC+I,EAAAA,EAAI,OAKV,C","sources":["webpack://rileyjshaw.com/./src/components/grid-doodles.js","webpack://rileyjshaw.com/./src/components/project-explorer.js","webpack://rileyjshaw.com/./src/pages/lab.js"],"sourcesContent":["import CycleText from './cycle-text';\nimport BackgroundGenerator from './doodles/background-generator';\nimport CircleConstrainedLines from './doodles/circle-constrained-lines';\nimport GameOver from './doodles/game-over';\nimport Riot from './doodles/riot';\nimport './grid-doodles.css';\nimport TextGrid from './text-grid';\nimport React from 'react';\n\nexport default [\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<BackgroundGenerator El=\"li\" ref={ref} />\n\t\t)),\n\t\t0.8,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CircleConstrainedLines El=\"li\" ref={ref} />\n\t\t)),\n\t\t0.8,\n\t],\n\t[React.forwardRef((props, ref) => <GameOver ref={ref} />), 0.8],\n\t[React.forwardRef((props, ref) => <Riot ref={ref} />), 0.7],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<li className=\"doodle wavytext\" ref={ref}>\n\t\t\t\t{'rileyjshaw'.split('').map((letter, i, {length}) => (\n\t\t\t\t\t<span\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tstyle={{animationDelay: `${(i - length) * 0.2}s`}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{letter}\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t</li>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<TextGrid\n\t\t\t\tsize={[3, 3]}\n\t\t\t\tclassPrefix=\"doingreat\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\tDOINGREAT\n\t\t\t</TextGrid>\n\t\t)),\n\t\t0.1,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"wavebump\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={50}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t▁▂▃▅▆▇▇▆▅▃▂▁\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.3,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"droplet\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={150}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t⊙⊚⦾⊛\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"circles\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={100}\n\t\t\t\tsize={[2, 2]}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t◯⦿◉◎\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<li className=\"content-node snowman doodle\" ref={ref}>\n\t\t\t\t☃\n\t\t\t</li>\n\t\t)),\n\t\t0.3,\n\t\t() => {\n\t\t\tconst month = new Date().getMonth();\n\t\t\treturn month < 4 || month === 11;\n\t\t},\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"wavebump\"\n\t\t\t\tclassName=\"content-node tall doodle\"\n\t\t\t\tms={400}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\tSecret message!\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.05,\n\t\t() => {\n\t\t\tconst today = new Date();\n\t\t\treturn today.getMonth() === 11 && today.getDate() === 25;\n\t\t},\n\t],\n].map(([Component, chance, fn]) => [\n\tComponent,\n\tfn ? () => fn() || Math.random() < chance : () => Math.random() < chance,\n]);\n","// TODO(RILEY): https://tympanus.net/Development/TiltHoverEffects/index.html\nimport allProjectsQuery from '../util/all-projects-query';\nimport {STORAGE_KEYS} from '../util/constants';\nimport contentTypes from '../util/content-types';\nimport {useViewport, useStickyState} from '../util/hooks';\nimport sortingMethods, {shuffle} from '../util/sorting-methods';\nimport ContentGrid from './content-grid';\nimport gridDoodles from './grid-doodles';\nimport './project-explorer.css';\nimport {useStaticQuery, graphql} from 'gatsby';\nimport React, {Fragment, useState, useEffect, useMemo} from 'react';\n\nconst ProjectExplorer = React.memo(function ProjectExplorer(props) {\n\tconst [nodeTypes, version] = useMemo(() => {\n\t\tconst nodeTypes = Array.from(\n\t\t\tnew Set(props.nodes.map(n => n.type))\n\t\t).sort((a, b) => a.localeCompare(b));\n\t\treturn [nodeTypes, `${nodeTypes.join('')}${sortingMethods.length}`];\n\t}, [props.nodes]);\n\n\tconst [drawerOpen, setDrawerOpen] = useState(false);\n\tconst [ascending, setAscending] = useStickyState(\n\t\tfalse,\n\t\tSTORAGE_KEYS.labAscending,\n\t\t{version}\n\t);\n\tconst [sortIdx, setSortIdx] = useStickyState(0, STORAGE_KEYS.labSortIdx, {\n\t\tversion,\n\t});\n\tconst [typeStates, setTypeStates] = useStickyState(\n\t\t() => Array.from(nodeTypes).fill(true),\n\t\tSTORAGE_KEYS.labTypeStates,\n\t\t{version, serverState: []}\n\t);\n\n\tconst nSources =\n\t\ttypeStates.reduce((a, b) => a + b, 0) || typeStates.length;\n\n\tconst nodes = useMemo(() => {\n\t\tif (!typeStates.length) return null;\n\t\tconst {sortFn} = sortingMethods[sortIdx];\n\t\tconst checkedTypeNames = nodeTypes.filter((_, i) => typeStates[i]);\n\t\tconst [doodles, filtered] = (\n\t\t\tcheckedTypeNames.length\n\t\t\t\t? props.nodes.filter(node =>\n\t\t\t\t\t\tcheckedTypeNames.includes(node.type)\n\t\t\t\t  )\n\t\t\t\t: props.nodes\n\t\t).reduce(\n\t\t\t(partitions, node) => {\n\t\t\t\tpartitions[node.type === 'doodle' ? 0 : 1].push(node);\n\t\t\t\treturn partitions;\n\t\t\t},\n\t\t\t[[], []]\n\t\t);\n\t\tconst sorted = sortFn(filtered);\n\t\tconst ordered = ascending ? sorted.reverse() : sorted;\n\t\t// Insert a few doodles into a random position.\n\t\tdoodles.forEach(doodle => {\n\t\t\tconst {shouldRender, ...rest} = doodle;\n\t\t\tif (shouldRender()) {\n\t\t\t\tordered.splice(\n\t\t\t\t\tMath.floor(Math.random() * ordered.length),\n\t\t\t\t\t0,\n\t\t\t\t\trest\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn ordered;\n\t}, [ascending, sortIdx, typeStates, props.nodes]);\n\n\treturn (\n\t\tnodes && (\n\t\t\t<div className=\"project-explorer\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"project-explorer-hide-filters\"\n\t\t\t\t\tonClick={() => setDrawerOpen(openState => !openState)}\n\t\t\t\t>\n\t\t\t\t\t{drawerOpen ? 'Hide filters ▲' : 'Show filters ▼'}\n\t\t\t\t</button>\n\t\t\t\t<div className=\"filters\">\n\t\t\t\t\t{drawerOpen && (\n\t\t\t\t\t\t/* TODO(riley): Once display: contents or display:\n\t\t\t\tsubgrid have good support, replace <p.legend> with\n\t\t\t\t<legend>, get rid of the .inputs wrappers, and nest\n\t\t\t\t<fieldset>s (display: contents) around each <legend> /\n\t\t\t\t.inputs / button set. Until then, the children need to\n\t\t\t\tbe direct descendents of the grid, and a11y takes a\n\t\t\t\thit. */\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<p className=\"legend\">Show:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t{nodeTypes.map((type, i) => (\n\t\t\t\t\t\t\t\t\t<Fragment key={type}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname={`labs-types-${type}`}\n\t\t\t\t\t\t\t\t\t\t\tid={`labs-types-${type}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={type}\n\t\t\t\t\t\t\t\t\t\t\tchecked={typeStates[i]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst {checked} = e.target;\n\t\t\t\t\t\t\t\t\t\t\t\tsetTypeStates(\n\t\t\t\t\t\t\t\t\t\t\t\t\tprevTypeStates => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedTypeStates =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevTypeStates,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedTypeStates[i] =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn updatedTypeStates;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={`labs-types-${type}`}>\n\t\t\t\t\t\t\t\t\t\t\t{contentTypes[type].readableType}s\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"labs-clear labs-clear-types\"\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tsetTypeStates(\n\t\t\t\t\t\t\t\t\t\tnew Array(nodeTypes.length).fill(false)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t✖\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<p className=\"legend\">Sort by:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t{sortingMethods.map(({title}, i) => (\n\t\t\t\t\t\t\t\t\t<Fragment key={title}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\tname={`labs-sort-${title}`}\n\t\t\t\t\t\t\t\t\t\t\tid={`labs-sort-${title}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\t\t\tchecked={sortIdx === i}\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => setSortIdx(i)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={`labs-sort-${title}`}>\n\t\t\t\t\t\t\t\t\t\t\t{title.toUpperCase().slice(0, 1) +\n\t\t\t\t\t\t\t\t\t\t\t\ttitle.slice(1)}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"legend\">Order:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"labs-order\"\n\t\t\t\t\t\t\t\t\tid=\"labs-order\"\n\t\t\t\t\t\t\t\t\tvalue=\"ascending\"\n\t\t\t\t\t\t\t\t\tchecked={ascending}\n\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\tsetAscending(e.target.checked)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"labs-order\">Reverse</label>\n\t\t\t\t\t\t\t\t{/* TODO: Add the shuffle button back here!\n\n\t\t\t\t\t\t\t<button onClick={this.shuffleDisplayNodes}>\n\t\t\t\t\t\t\t\tShuffle\n\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<p className=\"result-details\">\n\t\t\t\t\tFound <strong>{nodes.length}</strong> entries from{' '}\n\t\t\t\t\t<strong>{nSources}</strong> source\n\t\t\t\t\t{nSources === 1 ? '' : 's'}:\n\t\t\t\t</p>\n\t\t\t\t<LazyGrid\n\t\t\t\t\tnodes={nodes}\n\t\t\t\t\tsetIsFullyLoaded={props.setIsFullyLoaded}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t);\n});\n\nconst LazyGrid = React.memo(({nodes, setIsFullyLoaded}) => {\n\tconst [renderLimit, setRenderLimit] = useState(20);\n\tconst [ref, inView, boundingClientRect] = useViewport();\n\n\t// If the last node is on or above the viewport, load the next 20 nodes.\n\t// Note that the “last” node might be higher up on the page, eg. if it has\n\t// a small footprint and squeezes into some top row masonry. Hence the on\n\t// *or above* the viewport check.\n\tuseEffect(() => {\n\t\tif (\n\t\t\t(inView || boundingClientRect?.bottom <= 0) &&\n\t\t\trenderLimit < nodes.length\n\t\t) {\n\t\t\tsetRenderLimit(l => l + 20);\n\t\t}\n\t}, [inView, boundingClientRect]);\n\n\tuseEffect(() => {\n\t\tsetRenderLimit(20);\n\t}, [nodes]);\n\n\tuseEffect(() => {\n\t\tsetIsFullyLoaded && setIsFullyLoaded(renderLimit >= nodes.length);\n\t}, [nodes.length, renderLimit]);\n\n\treturn (\n\t\t<ContentGrid\n\t\t\tmasonry\n\t\t\tnodes={nodes.slice(0, renderLimit)}\n\t\t\thiddenNodes={nodes.slice(renderLimit)}\n\t\t\tlazyLoadRef={ref}\n\t\t/>\n\t);\n});\n\nconst ProjectExplorerWrapper = React.memo(props => {\n\tconst {\n\t\tallTagsJson: {nodes: tags},\n\t} = useStaticQuery(graphql`\n\t\t{\n\t\t\tallTagsJson {\n\t\t\t\tnodes {\n\t\t\t\t\tname\n\t\t\t\t\treadable\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\tconst allProjects = allProjectsQuery();\n\tconst nodes = useMemo(\n\t\t() =>\n\t\t\tallProjects.concat(\n\t\t\t\tgridDoodles.map(([Doodle, shouldRender], i) => ({\n\t\t\t\t\tuid: `DOODLE_${i}`,\n\t\t\t\t\ttype: 'doodle',\n\t\t\t\t\tDoodle,\n\t\t\t\t\tshouldRender,\n\t\t\t\t}))\n\t\t\t),\n\t\t[allProjects]\n\t);\n\n\treturn <ProjectExplorer nodes={nodes} tags={tags} {...props} />;\n});\n\nexport default ProjectExplorerWrapper;\n\n/* Big TODO: Once tags are established and applied to each content node (lots\n   of manual work required before that happens), get filtering by tag back into\n   the component. Here’s an old snippet:\n\n\t\tconst filtered = checkedTagNames.length\n\t\t\t? filteredByType.filter(node =>\n\t\t\t\t\tcheckedTagNames[\n\t\t\t\t\t\tstate.filterType === 'any' ? 'some' : 'every'\n\t\t\t\t\t](tagName => node.tags && node.tags.includes(tagName))\n\t\t\t  )\n\t\t\t: filteredByType;\n\n\t\t// …\n\t\t// …then for the render:\n\t\t// …\n\n\t\t<p className=\"legend\">Match:</p>\n\t\t<div className=\"inputs\">\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname=\"labs-filter-any\"\n\t\t\t\tid=\"labs-filter-any\"\n\t\t\t\tvalue=\"any\"\n\t\t\t\tchecked={this.state.filterType === 'any'}\n\t\t\t\tonChange={this.handleFilterTypeChange}\n\t\t\t/>\n\t\t\t<label htmlFor=\"labs-filter-any\">Any</label>\n\t\t\t|\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname=\"labs-filter-all\"\n\t\t\t\tid=\"labs-filter-all\"\n\t\t\t\tvalue=\"all\"\n\t\t\t\tchecked={this.state.filterType === 'all'}\n\t\t\t\tonChange={this.handleFilterTypeChange}\n\t\t\t/>\n\t\t\t<label htmlFor=\"labs-filter-all\">All</label>\n\t\t</div>\n\t\t<p className=\"legend\">Of:</p>\n\t\t<div className=\"inputs\">\n\t\t\t{tags.map((tag, i) => (\n\t\t\t\t<Fragment key={tag.name}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname={`labs-tags-${tag.name}`}\n\t\t\t\t\t\tid={`labs-tags-${tag.name}`}\n\t\t\t\t\t\tvalue={tag.name}\n\t\t\t\t\t\tchecked={this.state.tagStates[i]}\n\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\tthis.handleTagStateChange(e, i)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor={`labs-tags-${tag.name}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{tag.readable}\n\t\t\t\t\t</label>\n\t\t\t\t</Fragment>\n\t\t\t))}\n\t\t</div>\n\t\t<button\n\t\t\tclassName=\"labs-clear labs-clear-tags\"\n\t\t\tonClick={this.handleClearTagsClick}\n\t\t>\n\t\t\t✖\n\t\t</button>\n*/\n","import BigQuote from '../components/big-quote';\nimport GoUp from '../components/go-up';\nimport ProjectExplorer from '../components/project-explorer';\nimport SEO from '../components/seo';\nimport React, {useState} from 'react';\n\nexport function Head(props) {\n\treturn <SEO {...props} title=\"Lab\" />;\n}\n\nconst LabPage = () => {\n\tconst [isFullyLoaded, setIsFullyLoaded] = useState(false);\n\n\treturn (\n\t\t<>\n\t\t\t<ProjectExplorer setIsFullyLoaded={setIsFullyLoaded} />\n\t\t\t{isFullyLoaded && (\n\t\t\t\t<>\n\t\t\t\t\t<BigQuote quoteId=\"VOLTAIRE_BORING\" />\n\t\t\t\t\t<GoUp />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default LabPage;\n"],"names":["React","props","ref","BackgroundGenerator","El","CircleConstrainedLines","GameOver","Riot","className","split","map","letter","i","_ref","length","key","style","animationDelay","TextGrid","size","classPrefix","OuterElement","CycleText","ms","month","Date","getMonth","today","getDate","_ref2","Component","chance","fn","Math","random","ProjectExplorer","_useMemo","useMemo","nodeTypes","Array","from","Set","nodes","n","type","sort","a","b","localeCompare","join","sortingMethods","version","_useState","useState","drawerOpen","setDrawerOpen","_useStickyState","useStickyState","STORAGE_KEYS","ascending","setAscending","_useStickyState2","sortIdx","setSortIdx","_useStickyState3","fill","serverState","typeStates","setTypeStates","nSources","reduce","sortFn","checkedTypeNames","filter","_","_reduce","node","includes","partitions","push","doodles","sorted","ordered","reverse","forEach","doodle","shouldRender","rest","_objectWithoutPropertiesLoose","_excluded","splice","floor","onClick","openState","Fragment","name","id","value","checked","onChange","e","target","prevTypeStates","updatedTypeStates","htmlFor","contentTypes","readableType","title","toUpperCase","slice","LazyGrid","setIsFullyLoaded","_useState2","renderLimit","setRenderLimit","_useViewport","useViewport","inView","boundingClientRect","useEffect","bottom","l","ContentGrid","masonry","hiddenNodes","lazyLoadRef","tags","useStaticQuery","allTagsJson","allProjects","allProjectsQuery","concat","gridDoodles","_ref3","uid","Doodle","Object","assign","Head","SEO","isFullyLoaded","BigQuote","quoteId","GoUp"],"sourceRoot":""}