{"version":3,"file":"component---src-pages-lab-jsx-427962f18881738c2f61.js","mappings":"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","sources":["webpack://rileyjshaw.com/./src/icons/Repeat.jsx","webpack://rileyjshaw.com/./src/components/BigQuote.jsx","webpack://rileyjshaw.com/./src/components/ContentNode.jsx","webpack://rileyjshaw.com/./src/components/ContentGrid.jsx","webpack://rileyjshaw.com/./src/components/CycleText.jsx","webpack://rileyjshaw.com/./src/components/GoUp.jsx","webpack://rileyjshaw.com/./src/components/TextGrid.jsx","webpack://rileyjshaw.com/./src/components/doodles/BackgroundGenerator.jsx","webpack://rileyjshaw.com/./src/components/doodles/CircleConstrainedLines.jsx","webpack://rileyjshaw.com/./src/components/doodles/GameOver.jsx","webpack://rileyjshaw.com/./src/components/doodles/Riot.jsx","webpack://rileyjshaw.com/./src/components/GridDoodles.jsx","webpack://rileyjshaw.com/./src/components/ProjectExplorer.jsx","webpack://rileyjshaw.com/./src/pages/lab.jsx","webpack://rileyjshaw.com/./src/util/ContentTypes.jsx","webpack://rileyjshaw.com/./src/util/format-props.mjs","webpack://rileyjshaw.com/./src/util/all-projects-query.mjs","webpack://rileyjshaw.com/./src/util/sorting-methods.js"],"sourcesContent":["import * as React from 'react';\n\nconst SvgRepeat = props => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 100 100\"\n\t\twidth=\"1em\"\n\t\theight=\"1em\"\n\t\tfill=\"currentColor\"\n\t\t{...props}\n\t>\n\t\t<path d=\"M93.748 50.034c0-.039.007-.076.007-.114h-.012C93.659 27.442 75.352 9.18 52.852 9.18v17.683c12.79 0 23.194 10.391 23.216 23.17-.059 12.558-10.144 22.769-22.643 23.078-11.699-.287-21.277-9.273-22.483-20.742h9.335L22.015 34.114 3.755 52.369h9.494c1.254 21.028 18.419 37.801 39.603 38.392v.06c.192 0 .381-.026.573-.03.193.004.38.03.573.03v-.06c21.971-.613 39.664-18.595 39.75-40.687h.003c0-.014-.003-.028-.003-.04z\" />\n\t</svg>\n);\nexport default SvgRepeat;\n","import Repeat from '../icons/Repeat';\nimport {shuffle} from '../util/sorting-methods';\nimport AutoLink from './AutoLink';\nimport './BigQuote.css';\nimport {graphql, useStaticQuery} from 'gatsby';\nimport React, {useState} from 'react';\n\nfunction BigQuote({quoteId, showRefreshButton = true}) {\n\tconst {\n\t\tallCombinedQuotesJson: {nodes: quotes},\n\t} = useStaticQuery(graphql`\n\t\t{\n\t\t\tallCombinedQuotesJson {\n\t\t\t\tnodes {\n\t\t\t\t\tuid\n\t\t\t\t\tcontent\n\t\t\t\t\tauthor\n\t\t\t\t\tsource\n\t\t\t\t\tcite\n\t\t\t\t\trelatedLink\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\tconst [shuffledQuotes] = useState(shuffle(quotes));\n\tconst [quoteIndex, setQuoteIndex] = useState(\n\t\tMath.max(\n\t\t\t0,\n\t\t\tshuffledQuotes.findIndex(({uid}) => uid === quoteId),\n\t\t),\n\t);\n\tconst quote = shuffledQuotes[quoteIndex];\n\tconst {content, cite} = quote;\n\tlet {source, author} = quote;\n\tif (source) {\n\t\tsource = (\n\t\t\t<>\n\t\t\t\t“<cite>{source}</cite>”\n\t\t\t</>\n\t\t);\n\t\tif (cite) {\n\t\t\tsource = <AutoLink to={cite}>{source}</AutoLink>;\n\t\t}\n\t\tif (author) {\n\t\t\tsource = (\n\t\t\t\t<>\n\t\t\t\t\t– {author}, {source}\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t} else if (author) {\n\t\tif (cite) {\n\t\t\tauthor = <AutoLink to={cite}>{author}</AutoLink>;\n\t\t}\n\t\tsource = <>– {author}</>;\n\t}\n\tconst lines = content.split('\\n');\n\treturn (\n\t\t<div\n\t\t\tclassName={`big-quote ${showRefreshButton ? '' : 'no-refresh'}`}\n\t\t\tid={showRefreshButton && 'big-quote'}\n\t\t>\n\t\t\t<blockquote cite={cite}>\n\t\t\t\t{lines.map((line, i) => (\n\t\t\t\t\t<p key={i}>{line}</p>\n\t\t\t\t))}\n\t\t\t\t{source && <footer>{source}</footer>}\n\t\t\t</blockquote>\n\t\t\t{showRefreshButton && (\n\t\t\t\t<a\n\t\t\t\t\thref=\"#big-quote\"\n\t\t\t\t\taria-label=\"Load new quote\"\n\t\t\t\t\tclassName=\"refresh\"\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetQuoteIndex(\n\t\t\t\t\t\t\tprevIndex => (prevIndex + 1) % quotes.length,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Repeat />\n\t\t\t\t</a>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default BigQuote;\n","import contentTypes from '../util/ContentTypes';\nimport {useRect} from '../util/hooks';\nimport AutoLink, {ExternalLink} from './AutoLink';\nimport './ContentNode.css';\nimport cn from 'cnz';\nimport React from 'react';\n\n// TODO: Break this component and the grid fitting component out into separate\n//       files.\n// Each content type needs:\n//   \"uid\":\n//   \"type\":\n//   \"title\":\n//   \"date\":\nexport default React.memo(\n\tReact.forwardRef(function ContentNode(props, ref) {\n\t\tconst {\n\t\t\tEl = 'div',\n\t\t\ttype,\n\t\t\ttitle,\n\t\t\tdate,\n\t\t\tlink,\n\t\t\trepo,\n\t\t\tuid,\n\t\t\ttags,\n\t\t\tDoodle,\n\t\t\t// Warning: `masonry` cannot change within the component’s lifetime.\n\t\t\tmasonry,\n\t\t\thidden,\n\t\t} = props;\n\n\t\tif (type === 'doodle') return <Doodle ref={ref} {...props} />;\n\n\t\tconst contentType = contentTypes[type];\n\t\tif (!contentType) return null;\n\t\tconst {className = '', readableType, shortType, Inner} = contentType;\n\n\t\tlet innerRef, innerRect, span;\n\t\tif (masonry) {\n\t\t\t[innerRef, innerRect] = useRect();\n\t\t\t// Inner: Math.ceil((height + 27) / (27 * 2))\n\t\t\t//                            ^ \"+ 27\" accounts for height falling within gap.\n\t\t\t//     (27 * 2) is the row + gap height ^\n\t\t\t// With outer padding: Math.ceil((height + 27 + 46) / (27 * 2))\n\t\t\t//                    = Math.ceil(height / 54) + 1\n\t\t\t// TODO(riley): Was this with the new design system.\n\t\t\t// const span = height && Math.ceil((height + 19) / 54) + 1;\n\t\t\tspan = innerRect && Math.ceil((innerRect.height + 82) / 130);\n\t\t}\n\n\t\treturn (\n\t\t\t<El\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'content-node',\n\t\t\t\t\tclassName,\n\t\t\t\t\ttype\n\t\t\t\t\t\t.split(/(?=[A-Z])/)\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase(),\n\t\t\t\t\tmasonry && (innerRect ? 'measured' : 'transparent'),\n\t\t\t\t\thidden && 'visually-hidden',\n\t\t\t\t)}\n\t\t\t\tkey={uid}\n\t\t\t\tref={ref}\n\t\t\t\tstyle={span && masonry ? {gridRowEnd: `span ${span}`} : null}\n\t\t\t>\n\t\t\t\t{/* Note: might be able to make this more semantic. Sources:\n\t\t\thttps://stackoverflow.com/questions/12866008/html5-semantic-markup-for-blog-post-tags-and-categories\n\t\t\thttps://html.spec.whatwg.org/multipage/links.html#link-type-tag */}\n\t\t\t\t<div className=\"inner\" ref={innerRef}>\n\t\t\t\t\t<div className=\"content-type\">\n\t\t\t\t\t\t{shortType ?? readableType}\n\t\t\t\t\t</div>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t{link ? (\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t<AutoLink\n\t\t\t\t\t\t\t\t\tto={link}\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{__html: title}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h1 dangerouslySetInnerHTML={{__html: title}} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"subheading\">\n\t\t\t\t\t\t\t<time dateTime={date}>\n\t\t\t\t\t\t\t\t{date.replace(/-/g, '.')}\n\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t{repo && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t• From repository{' '}\n\t\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\t\tto={`https://github.com/${repo}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{repo}\n\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t\t<Inner {...props} />\n\t\t\t\t\t{tags && (\n\t\t\t\t\t\t<footer>\n\t\t\t\t\t\t\t<ul className=\"tags\">\n\t\t\t\t\t\t\t\t{tags.map(tag => (\n\t\t\t\t\t\t\t\t\t<li key={tag}>{tag}</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</footer>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</El>\n\t\t);\n\t}),\n);\n\n/*\ncase 'project':\n\tif (node.tags.includes('starred')) className = 'span-2';\n*/\n","import './ContentGrid.css';\nimport ContentNode from './ContentNode';\nimport {SettingsContext} from './SettingsProvider';\nimport React, {useContext} from 'react';\n\nexport default React.memo(\n\t({nodes, hiddenNodes = [], masonry, lazyLoadRef}) => {\n\t\tconst {theme, blockEmbeds} = useContext(SettingsContext);\n\t\treturn (\n\t\t\t<ul className={`content-grid${masonry ? ' masonry' : ''}`}>\n\t\t\t\t{nodes.map((node, i, {length}) => (\n\t\t\t\t\t<ContentNode\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\tEl=\"li\"\n\t\t\t\t\t\tblockEmbeds={blockEmbeds}\n\t\t\t\t\t\tmasonry={masonry}\n\t\t\t\t\t\tref={i === length - 1 ? lazyLoadRef : null}\n\t\t\t\t\t\tkey={node.uid}\n\t\t\t\t\t\t{...node}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t{hiddenNodes.map(node => (\n\t\t\t\t\t<ContentNode\n\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\tEl=\"li\"\n\t\t\t\t\t\tblockEmbeds={blockEmbeds}\n\t\t\t\t\t\thidden={true}\n\t\t\t\t\t\tkey={node.uid}\n\t\t\t\t\t\t{...node}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t},\n);\n","import {useInterval, useViewport} from '../util/hooks';\nimport TextGrid from './TextGrid';\nimport React, {useState} from 'react';\n\n/* Fun strings:\n▁▂▃▅▆▇▇▆▅▃▂▁\n➬➱➯➫–\n◯⦿◉◎\n○⊙⊚⦾⊛◌ ◌\n▙▛▜▟\n*/\n\n// HACK(riley): We potentially have two different useViewport refs on this\n//              component: one for pausing the animation, and one for checking\n//              scroll position for lazy loading. I'm attaching both to the\n//              root element for now, but there's gotta be a nicer way to do\n//              this.\nconst mergeRefs = (...refs) => {\n\tconst filteredRefs = refs.filter(Boolean);\n\tif (!filteredRefs.length) return null;\n\tif (filteredRefs.length === 1) return filteredRefs[0];\n\treturn el => {\n\t\tfilteredRefs.forEach(ref => {\n\t\t\tif (typeof ref === 'function') {\n\t\t\t\tref(el);\n\t\t\t} else {\n\t\t\t\tref.current = el;\n\t\t\t}\n\t\t});\n\t};\n};\n\nexport default React.forwardRef(\n\t(\n\t\t{\n\t\t\tchildren: text,\n\t\t\tms = 300,\n\t\t\tsize = [1, 1],\n\t\t\tclassPrefix = 'cycle-text',\n\t\t\tclassName = '',\n\t\t\tOuterElement = 'div',\n\t\t\t...rest\n\t\t},\n\t\tpassedRef,\n\t) => {\n\t\tconst [xSize, ySize] = size;\n\t\tconst n = xSize * ySize;\n\t\tconst [index, setIndex] = useState(0);\n\t\tconst [ref, inView] = useViewport();\n\t\tuseInterval(() => setIndex(index + 1), inView ? ms : null);\n\n\t\tif (n === 1)\n\t\t\treturn (\n\t\t\t\t<OuterElement\n\t\t\t\t\tref={mergeRefs(passedRef, ref)}\n\t\t\t\t\tclassName={`${className} ${classPrefix}-item`}\n\t\t\t\t\t{...rest}\n\t\t\t\t>\n\t\t\t\t\t{text[index % text.length]}\n\t\t\t\t</OuterElement>\n\t\t\t);\n\n\t\treturn (\n\t\t\t<TextGrid\n\t\t\t\tsize={size}\n\t\t\t\tclassPrefix={classPrefix}\n\t\t\t\tclassName={className}\n\t\t\t\tref={mergeRefs(passedRef, ref)}\n\t\t\t\tOuterElement={OuterElement}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{Array.from(\n\t\t\t\t\t{length: n},\n\t\t\t\t\t(_, i) =>\n\t\t\t\t\t\ttext[\n\t\t\t\t\t\t\tMath.floor(index / Math.pow(text.length, i)) %\n\t\t\t\t\t\t\t\ttext.length\n\t\t\t\t\t\t],\n\t\t\t\t).join('')}\n\t\t\t</TextGrid>\n\t\t);\n\t},\n);\n","import CycleText from '../components/CycleText';\nimport './GoUp.css';\nimport React from 'react';\n\nexport default () => (\n\t<div className=\"go-up\">\n\t\t<CycleText\n\t\t\tms={150}\n\t\t\tOuterElement=\"span\"\n\t\t\tonClick={() => {\n\t\t\t\twindow.scrollTo(0, 0);\n\t\t\t\tconst title = document.getElementById('page-header');\n\t\t\t\ttitle.focus({preventScroll: true});\n\t\t\t}}\n\t\t>\n\t\t\t➫➯➱➬–\n\t\t</CycleText>\n\t</div>\n);\n","import React from 'react';\n\nexport default React.forwardRef(\n\t(\n\t\t{\n\t\t\tchildren,\n\t\t\tsize: [xSize, ySize],\n\t\t\tclassPrefix = 'text-grid',\n\t\t\tclassName = '',\n\t\t\tOuterElement = 'div',\n\t\t\t...rest\n\t\t},\n\t\tref,\n\t) => (\n\t\t<OuterElement\n\t\t\tclassName={`${className} ${classPrefix}-grid`}\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'grid',\n\t\t\t\tgridTemplate: `repeat(${ySize}, 1fr) / repeat(${xSize}, 1fr)`,\n\t\t\t}}\n\t\t\t{...rest}\n\t\t\tref={ref}\n\t\t>\n\t\t\t{children.split('').map((letter, i) => (\n\t\t\t\t<span\n\t\t\t\t\tclassName={`${classPrefix}-item`}\n\t\t\t\t\tkey={`${children}-${i}`}\n\t\t\t\t>\n\t\t\t\t\t{letter}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</OuterElement>\n\t),\n);\n","import {getThemeColor, randSequence, lcm} from '../../util/util';\nimport {withSettings} from '../SettingsProvider';\nimport './BackgroundGenerator.css';\nimport React, {useState, useEffect, useMemo} from 'react';\n\nconst minWidth = 100; // Tiling width. Height is calculated dynamically.\nconst maxWidth = 200;\nconst minSequenceLength = 20; // Bigger numbers = more complex patterns.\nconst maxSequenceLength = 200;\n\n// For these backgrounds to tile properly, each subsequent column needs to be\n// shifted up by 1px. CSS doesn't currently support that, so we do it in\n// canvas. A max canvas width is set here so we don't go completely out of\n// control when there's a tall repeating pattern. \"Seamless\" mode can be set\n// to ensure a height over maxTiles is never reached, so it ensures a\n// perfectly tiling pattern.\nconst maxTiledWidth = 10000;\n\nconst defaultProps = {\n\twidth: minWidth + Math.floor(Math.random() * (maxWidth - minWidth) + 1),\n\tzoom: 6, // I think it looks better a bit chunky like this.\n\tdark: 'fg',\n\tlight: 'bg',\n\tseamless: true,\n\tEl: 'div',\n};\n\nconst getState = (\n\tprops,\n\tcDark,\n\tcLight,\n\tthemeBias,\n\tcanvas = document.createElement('canvas'),\n\ttiledCanvas = document.createElement('canvas'),\n) => {\n\tconst {width, seamless} = {\n\t\t...defaultProps,\n\t\t...props,\n\t};\n\tconst maxTiles = Math.floor(maxTiledWidth / width);\n\n\tlet size, height, sequence;\n\tdo {\n\t\tsequence = randSequence(\n\t\t\tminSequenceLength,\n\t\t\tmaxSequenceLength,\n\t\t\tthemeBias,\n\t\t);\n\t\tsize = lcm(width, sequence.length);\n\t\theight = size / width;\n\t} while (seamless && height > maxTiles);\n\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst ctx = canvas.getContext('2d');\n\tconst tiledCtx = tiledCanvas.getContext('2d');\n\n\t// Create a single tile on the canvas.\n\tfor (let i = 0; i < size; ++i) {\n\t\tconst x = i % width;\n\t\tconst y = Math.floor(i / width);\n\t\tctx.fillStyle = sequence[i % sequence.length] ? cDark : cLight;\n\t\tctx.fillRect(x, y, 1, 1);\n\t}\n\n\t// Tile the initial canvas onto a wider canvas to ensure x-axis tiling.\n\tconst nTiles = Math.min(maxTiles, height);\n\ttiledCanvas.width = width * nTiles;\n\ttiledCanvas.height = height;\n\tfor (let i = 0; i < nTiles; ++i) {\n\t\tlet offset = -i;\n\t\tdo {\n\t\t\ttiledCtx.drawImage(canvas, i * width, offset);\n\t\t\toffset += height;\n\t\t} while (offset <= height);\n\t}\n\n\treturn [canvas, tiledCanvas, nTiles, height];\n};\n\nconst BackgroundGenerator = React.forwardRef(function BackgroundGenerator(\n\t{settings: {theme}, ...props},\n\tref,\n) {\n\tconst {width, zoom, dark, light, El, className} = {\n\t\t...defaultProps,\n\t\t...props,\n\t};\n\tconst themeBias = theme === 'light' ? 0.65 : 0.45; // 0: light | 1: dark\n\tconst cDark = useMemo(() => getThemeColor(theme)(dark)(), [dark, theme]);\n\tconst cLight = useMemo(\n\t\t() => getThemeColor(theme)(light)(),\n\t\t[light, theme],\n\t);\n\tconst [[canvas, tiledCanvas, nTiles, height], setState] = useState([]);\n\tconst [clicked, setClicked] = useState(false);\n\tuseEffect(() => {\n\t\tsetState(\n\t\t\tgetState(props, cDark, cLight, themeBias, canvas, tiledCanvas),\n\t\t);\n\t}, [cDark, cLight]);\n\n\t// Apply the wide, tileable canvas as a repeating background.\n\treturn (\n\t\t<El\n\t\t\tonClick={() => {\n\t\t\t\tsetState(\n\t\t\t\t\tgetState(\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\tcDark,\n\t\t\t\t\t\tcLight,\n\t\t\t\t\t\tthemeBias,\n\t\t\t\t\t\tcanvas,\n\t\t\t\t\t\ttiledCanvas,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (!clicked) setClicked(true);\n\t\t\t}}\n\t\t\tclassName={`content-node doodle doodle-background-generator${\n\t\t\t\tclassName ? ` ${className}` : ''\n\t\t\t}`}\n\t\t\tstyle={\n\t\t\t\ttiledCanvas && {\n\t\t\t\t\tbackground: `${\n\t\t\t\t\t\tthemeBias > 0.5 ? cDark : cLight\n\t\t\t\t\t} left top/${width * nTiles * zoom}px ${\n\t\t\t\t\t\theight * zoom\n\t\t\t\t\t}px url(${tiledCanvas.toDataURL()}`,\n\t\t\t\t}\n\t\t\t}\n\t\t\t{...(ref?.hasOwnProperty('current') ? {ref} : {})}\n\t\t>\n\t\t\t{clicked || <span className=\"default-button\">Click?</span>}\n\t\t</El>\n\t);\n});\n\nexport default withSettings(BackgroundGenerator);\n","import {getThemeColor} from '../../util/util';\nimport {withSettings} from '../SettingsProvider';\nimport './CircleConstrainedLines.css';\nimport React, {useRef, useState, useEffect, useContext, useMemo} from 'react';\n\nconst {PI, cos, sin, pow} = Math;\nconst L = 800;\nconst R = L / 3;\n\n// Derived.\nconst C = L / 2;\n\nconst variants = [\n\t{\n\t\tgetOffset: (i, nLines) =>\n\t\t\tsin((i / nLines) * PI * 2) * cos((i / nLines) * PI * 2) * PI * 10,\n\t\tnLines: 800,\n\t\tlineWidth: 1,\n\t\tglobalCompositeOperation: 'overlay',\n\t},\n\t{\n\t\tgetOffset: (i, nLines) =>\n\t\t\tpow(sin((i / nLines) * 2 * PI) * cos((i / nLines) * 2 * PI), 2) *\n\t\t\t2 *\n\t\t\tPI *\n\t\t\t2,\n\t\tnLines: 800,\n\t\tlineWidth: 1,\n\t\tglobalCompositeOperation: 'overlay',\n\t},\n\t{\n\t\tgetOffset: (i, nLines) => (i / nLines) * 2 * PI * 1.5,\n\t\tnLines: 100,\n\t\tlineWidth: 2,\n\t\tglobalCompositeOperation: 'source-over',\n\t},\n];\n\nconst CircleConstrainedLines = React.forwardRef(\n\tfunction CircleConstrainedLines({El = 'div', settings: {theme}}, ref) {\n\t\tconst canvasRef = useRef(null);\n\t\tconst [variant, setVariant] = useState(\n\t\t\tMath.floor(Math.random() * variants.length),\n\t\t);\n\t\tconst getColor = useMemo(() => getThemeColor(theme), [theme]);\n\t\tuseEffect(() => {\n\t\t\tconst canvas = canvasRef.current;\n\t\t\tif (!canvas) return;\n\n\t\t\tconst {getOffset, nLines, lineWidth, globalCompositeOperation} =\n\t\t\t\tvariants[variant];\n\n\t\t\tconst angleStep = (2 * PI) / nLines;\n\t\t\tconst ctx = canvas.getContext('2d');\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\tctx.beginPath();\n\t\t\tctx.globalCompositeOperation = globalCompositeOperation;\n\t\t\tctx.lineWidth = lineWidth;\n\t\t\tctx.strokeStyle = getColor('fg')();\n\t\t\tctx.fillStyle = getColor('bg', 'mute')();\n\t\t\tctx.arc(C, C, R * 1.03, 0, 2 * PI);\n\t\t\tctx.fill();\n\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(C, C, R, 0, 2 * PI);\n\t\t\tctx.stroke();\n\n\t\t\tfor (let i = 0; i < nLines; ++i) {\n\t\t\t\tconst offset = getOffset(i, nLines);\n\t\t\t\tconst angle = i * angleStep;\n\t\t\t\tconst x1 = cos(angle) * R;\n\t\t\t\tconst y1 = sin(angle) * R;\n\t\t\t\tconst x2 = cos(angle + offset) * R;\n\t\t\t\tconst y2 = sin(angle + offset) * R;\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(C + x1, C + y1);\n\t\t\t\tctx.lineTo(C + x2, C + y2);\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}, [variant, theme]);\n\t\treturn (\n\t\t\t<El\n\t\t\t\t{...(ref?.hasOwnProperty('current') ? {ref} : {})}\n\t\t\t\tclassName=\"content-node doodle doodle-constrained-lines\"\n\t\t\t>\n\t\t\t\t<canvas\n\t\t\t\t\theight={L}\n\t\t\t\t\twidth={L}\n\t\t\t\t\tref={canvasRef}\n\t\t\t\t\tonClick={() => setVariant(v => (v + 1) % variants.length)}\n\t\t\t\t/>\n\t\t\t</El>\n\t\t);\n\t},\n);\n\nexport default withSettings(CircleConstrainedLines);\n","import {useKeyPresses, useTypedText} from '../../util/hooks';\nimport './GameOver.css';\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\n\nconst textOptions = {\n\tloading: 'Loading…',\n\twin: 'You win',\n};\n\nfunction GameOver(_, ref) {\n\tconst activeTimeout = useRef(null);\n\tconst [gameState, setGameState] = useState('game-over');\n\tconst mainText =\n\t\tuseTypedText(textOptions[gameState] ?? 'Game over', {delay: 30}) ||\n\t\t'\\u00A0';\n\tuseEffect(() => {\n\t\tactiveTimeout.current = setTimeout(() => {\n\t\t\tsetGameState('play-again');\n\t\t}, 1800);\n\t\treturn () => clearTimeout(activeTimeout.current);\n\t}, []);\n\tconst clickYes = useCallback(() => {\n\t\tsetGameState('loading');\n\t\tclearTimeout(activeTimeout.current);\n\t\tactiveTimeout.current = setTimeout(() => {\n\t\t\tsetGameState('game-over');\n\t\t\tactiveTimeout.current = setTimeout(\n\t\t\t\t() => setGameState('play-again'),\n\t\t\t\t1800,\n\t\t\t);\n\t\t}, 2400);\n\t}, []);\n\tconst clickNo = useCallback(() => {\n\t\tclearTimeout(activeTimeout.current);\n\t\tsetGameState('win');\n\t}, []);\n\tuseKeyPresses({y: {onDown: clickYes}, n: {onDown: clickNo}});\n\tconst playAgain = gameState === 'play-again';\n\treturn (\n\t\t<div\n\t\t\t{...(ref?.hasOwnProperty('current') ? {ref} : {})}\n\t\t\tclassName=\"content-node doodle doodle-game-over\"\n\t\t>\n\t\t\t<p className=\"main-text\">{mainText}</p>\n\t\t\t<p\n\t\t\t\taria-hidden={!playAgain}\n\t\t\t\tclassName={`play-again${playAgain ? ' show' : ''}`}\n\t\t\t>\n\t\t\t\tPlay again?{' '}\n\t\t\t\t<button disabled={!playAgain} onClick={clickYes}>\n\t\t\t\t\tY\n\t\t\t\t</button>\n\t\t\t\t{' / '}\n\t\t\t\t<button disabled={!playAgain} onClick={clickNo}>\n\t\t\t\t\tN\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default GameOver;\n","import {useViewport, useRect} from '../../util/hooks';\nimport './Riot.css';\nimport React, {useMemo} from 'react';\n\nfunction Riot(_, ref) {\n\tconst [riotRef, _inView, boundingClientRect, windowHeight = 0] =\n\t\tuseViewport({updateOnScroll: true});\n\tconst [oRef, oBoundingClientRect] = useRect();\n\tlet factor = boundingClientRect\n\t\t? (1 -\n\t\t\t\tboundingClientRect.top /\n\t\t\t\t\t(windowHeight - boundingClientRect.height) -\n\t\t\t\t0.5) *\n\t\t  2\n\t\t: 0;\n\tif (factor) factor *= Math.sqrt(Math.abs(factor));\n\n\tconst transformOrigin = useMemo(\n\t\t() =>\n\t\t\toBoundingClientRect\n\t\t\t\t? [\n\t\t\t\t\t\t(oBoundingClientRect.left +\n\t\t\t\t\t\t\toBoundingClientRect.width / 2 -\n\t\t\t\t\t\t\tboundingClientRect.left) /\n\t\t\t\t\t\t\tboundingClientRect.width,\n\t\t\t\t\t\t(oBoundingClientRect.top +\n\t\t\t\t\t\t\toBoundingClientRect.height / 2 -\n\t\t\t\t\t\t\tboundingClientRect.top) /\n\t\t\t\t\t\t\tboundingClientRect.height,\n\t\t\t\t  ]\n\t\t\t\t: [0.5, 0.5],\n\t\t[oBoundingClientRect],\n\t);\n\n\treturn (\n\t\t<div\n\t\t\t{...(ref?.hasOwnProperty('current') ? {ref} : {})}\n\t\t\tclassName=\"content-node doodle doodle-riot\"\n\t\t>\n\t\t\t{Array.from({length: 6}, (_, i) => (\n\t\t\t\t<p\n\t\t\t\t\tref={i ? null : riotRef}\n\t\t\t\t\tkey={`riot-${i}`}\n\t\t\t\t\tclassName=\"riot-overlay\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransformOrigin: transformOrigin\n\t\t\t\t\t\t\t.map(p => `${p * 100}%`)\n\t\t\t\t\t\t\t.join(' '),\n\t\t\t\t\t\ttransform: `translate(-50%, -50%) rotate(${\n\t\t\t\t\t\t\ti * factor * 30\n\t\t\t\t\t\t}deg)`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tRI<span ref={i ? null : oRef}>O</span>T!\n\t\t\t\t</p>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default Riot;\n","import CycleText from './CycleText';\nimport BackgroundGenerator from './doodles/BackgroundGenerator';\nimport CircleConstrainedLines from './doodles/CircleConstrainedLines';\nimport GameOver from './doodles/GameOver';\nimport Riot from './doodles/Riot';\nimport './GridDoodles.css';\nimport TextGrid from './TextGrid';\nimport React from 'react';\n\nexport default [\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<BackgroundGenerator El=\"li\" ref={ref} />\n\t\t)),\n\t\t0.8,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CircleConstrainedLines El=\"li\" ref={ref} />\n\t\t)),\n\t\t0.8,\n\t],\n\t[React.forwardRef((props, ref) => <GameOver ref={ref} />), 0.8],\n\t[React.forwardRef((props, ref) => <Riot ref={ref} />), 0.7],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<li className=\"doodle wavytext\" ref={ref}>\n\t\t\t\t{'rileyjshaw'.split('').map((letter, i, {length}) => (\n\t\t\t\t\t<span\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tstyle={{animationDelay: `${(i - length) * 0.2}s`}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{letter}\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t</li>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<TextGrid\n\t\t\t\tsize={[3, 3]}\n\t\t\t\tclassPrefix=\"doingreat\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\tDOINGREAT\n\t\t\t</TextGrid>\n\t\t)),\n\t\t0.1,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"wavebump\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={50}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t▁▂▃▅▆▇▇▆▅▃▂▁\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.3,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"droplet\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={150}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t⊙⊚⦾⊛\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"circles\"\n\t\t\t\tclassName=\"content-node doodle\"\n\t\t\t\tms={100}\n\t\t\t\tsize={[2, 2]}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\t◯⦿◉◎\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.2,\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<li className=\"content-node snowman doodle\" ref={ref}>\n\t\t\t\t☃\n\t\t\t</li>\n\t\t)),\n\t\t0.3,\n\t\t() => {\n\t\t\tconst month = new Date().getMonth();\n\t\t\treturn month < 4 || month === 11;\n\t\t},\n\t],\n\t[\n\t\tReact.forwardRef((props, ref) => (\n\t\t\t<CycleText\n\t\t\t\tclassPrefix=\"wavebump\"\n\t\t\t\tclassName=\"content-node tall doodle\"\n\t\t\t\tms={400}\n\t\t\t\tOuterElement=\"li\"\n\t\t\t\tref={ref}\n\t\t\t>\n\t\t\t\tSecret message!\n\t\t\t</CycleText>\n\t\t)),\n\t\t0.05,\n\t\t() => {\n\t\t\tconst today = new Date();\n\t\t\treturn today.getMonth() === 11 && today.getDate() === 25;\n\t\t},\n\t],\n].map(([Component, chance, fn]) => [\n\tComponent,\n\tfn ? () => fn() || Math.random() < chance : () => Math.random() < chance,\n]);\n","// TODO(RILEY): https://tympanus.net/Development/TiltHoverEffects/index.html\nimport allProjectsQuery from '../util/all-projects-query';\nimport {STORAGE_KEYS} from '../util/constants';\nimport contentTypes from '../util/ContentTypes';\nimport {capitalize} from '../util/util';\nimport {useViewport, useStickyState} from '../util/hooks';\nimport sortingMethods, {shuffle} from '../util/sorting-methods';\nimport ContentGrid from './ContentGrid';\nimport gridDoodles from './GridDoodles';\nimport './ProjectExplorer.css';\nimport {useStaticQuery, graphql} from 'gatsby';\nimport React, {Fragment, useState, useEffect, useMemo} from 'react';\n\nconst ProjectExplorer = React.memo(function ProjectExplorer(props) {\n\tconst [nodeTypes, version] = useMemo(() => {\n\t\tconst nodeTypes = Array.from(\n\t\t\tnew Set(props.nodes.map(n => n.type)),\n\t\t).sort((a, b) => a.localeCompare(b));\n\t\treturn [nodeTypes, `${nodeTypes.join('')}${sortingMethods.length}`];\n\t}, [props.nodes]);\n\n\tconst [drawerOpen, setDrawerOpen] = useState(false);\n\tconst [ascending, setAscending] = useStickyState(\n\t\tfalse,\n\t\tSTORAGE_KEYS.labAscending,\n\t\t{version},\n\t);\n\tconst [sortIdx, setSortIdx] = useStickyState(0, STORAGE_KEYS.labSortIdx, {\n\t\tversion,\n\t});\n\tconst [typeStates, setTypeStates] = useStickyState(\n\t\t() => Array.from(nodeTypes).fill(true),\n\t\tSTORAGE_KEYS.labTypeStates,\n\t\t{version, serverState: []},\n\t);\n\n\tconst nSources =\n\t\ttypeStates.reduce((a, b) => a + b, 0) || typeStates.length;\n\n\tconst nodes = useMemo(() => {\n\t\tif (!typeStates.length) return null;\n\t\tconst {sortFn} = sortingMethods[sortIdx];\n\t\tconst checkedTypeNames = nodeTypes.filter((_, i) => typeStates[i]);\n\t\tconst [doodles, filtered] = (\n\t\t\tcheckedTypeNames.length\n\t\t\t\t? props.nodes.filter(node =>\n\t\t\t\t\t\tcheckedTypeNames.includes(node.type),\n\t\t\t\t  )\n\t\t\t\t: props.nodes\n\t\t).reduce(\n\t\t\t(partitions, node) => {\n\t\t\t\tpartitions[node.type === 'doodle' ? 0 : 1].push(node);\n\t\t\t\treturn partitions;\n\t\t\t},\n\t\t\t[[], []],\n\t\t);\n\t\tconst sorted = sortFn(filtered);\n\t\tconst ordered = ascending ? sorted.reverse() : sorted;\n\t\t// Insert a few doodles into a random position.\n\t\tdoodles.forEach(doodle => {\n\t\t\tconst {shouldRender, ...rest} = doodle;\n\t\t\tif (shouldRender()) {\n\t\t\t\tordered.splice(\n\t\t\t\t\tMath.floor(Math.random() * ordered.length),\n\t\t\t\t\t0,\n\t\t\t\t\trest,\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn ordered;\n\t}, [ascending, sortIdx, typeStates, props.nodes]);\n\n\treturn (\n\t\tnodes && (\n\t\t\t<div className=\"project-explorer\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"project-explorer-hide-filters\"\n\t\t\t\t\tonClick={() => setDrawerOpen(openState => !openState)}\n\t\t\t\t>\n\t\t\t\t\t{drawerOpen ? 'Hide filters ▲' : 'Show filters ▼'}\n\t\t\t\t</button>\n\t\t\t\t<div className=\"filters\">\n\t\t\t\t\t{drawerOpen && (\n\t\t\t\t\t\t/* TODO(riley): Once display: contents or display:\n\t\t\t\tsubgrid have good support, replace <p.legend> with\n\t\t\t\t<legend>, get rid of the .inputs wrappers, and nest\n\t\t\t\t<fieldset>s (display: contents) around each <legend> /\n\t\t\t\t.inputs / button set. Until then, the children need to\n\t\t\t\tbe direct descendents of the grid, and a11y takes a\n\t\t\t\thit. */\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<p className=\"legend\">Show:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t{nodeTypes.map((type, i) => (\n\t\t\t\t\t\t\t\t\t<Fragment key={type}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname={`labs-types-${type}`}\n\t\t\t\t\t\t\t\t\t\t\tid={`labs-types-${type}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={type}\n\t\t\t\t\t\t\t\t\t\t\tchecked={typeStates[i]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst {checked} = e.target;\n\t\t\t\t\t\t\t\t\t\t\t\tsetTypeStates(\n\t\t\t\t\t\t\t\t\t\t\t\t\tprevTypeStates => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedTypeStates =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevTypeStates,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedTypeStates[i] =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn updatedTypeStates;\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={`labs-types-${type}`}>\n\t\t\t\t\t\t\t\t\t\t\t{contentTypes[type].readableType}s\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"labs-clear labs-clear-types\"\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tsetTypeStates(\n\t\t\t\t\t\t\t\t\t\tnew Array(nodeTypes.length).fill(\n\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t✖\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<p className=\"legend\">Sort by:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t{sortingMethods.map(({title}, i) => (\n\t\t\t\t\t\t\t\t\t<Fragment key={title}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\tname={`labs-sort-${title}`}\n\t\t\t\t\t\t\t\t\t\t\tid={`labs-sort-${title}`}\n\t\t\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\t\t\tchecked={sortIdx === i}\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => setSortIdx(i)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={`labs-sort-${title}`}>\n\t\t\t\t\t\t\t\t\t\t\t{capitalize(title)}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"legend\">Order:</p>\n\t\t\t\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"visually-hidden\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"labs-order\"\n\t\t\t\t\t\t\t\t\tid=\"labs-order\"\n\t\t\t\t\t\t\t\t\tvalue=\"ascending\"\n\t\t\t\t\t\t\t\t\tchecked={ascending}\n\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\tsetAscending(e.target.checked)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"labs-order\">Reverse</label>\n\t\t\t\t\t\t\t\t{/* TODO: Add the shuffle button back here!\n\n\t\t\t\t\t\t\t<button onClick={this.shuffleDisplayNodes}>\n\t\t\t\t\t\t\t\tShuffle\n\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<p className=\"result-details\">\n\t\t\t\t\tFound <strong>{nodes.length}</strong> entries from{' '}\n\t\t\t\t\t<strong>{nSources}</strong> source\n\t\t\t\t\t{nSources === 1 ? '' : 's'}:\n\t\t\t\t</p>\n\t\t\t\t<LazyGrid\n\t\t\t\t\tnodes={nodes}\n\t\t\t\t\tsetIsFullyLoaded={props.setIsFullyLoaded}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t);\n});\n\nconst LazyGrid = React.memo(({nodes, setIsFullyLoaded}) => {\n\tconst [renderLimit, setRenderLimit] = useState(20);\n\tconst [ref, inView, boundingClientRect] = useViewport();\n\n\t// If the last node is on or above the viewport, load the next 20 nodes.\n\t// Note that the “last” node might be higher up on the page, eg. if it has\n\t// a small footprint and squeezes into some top row masonry. Hence the on\n\t// *or above* the viewport check.\n\tuseEffect(() => {\n\t\tif (\n\t\t\t(inView || boundingClientRect?.bottom <= 0) &&\n\t\t\trenderLimit < nodes.length\n\t\t) {\n\t\t\tsetRenderLimit(l => l + 20);\n\t\t}\n\t}, [inView, boundingClientRect]);\n\n\tuseEffect(() => {\n\t\tsetRenderLimit(20);\n\t}, [nodes]);\n\n\tuseEffect(() => {\n\t\tsetIsFullyLoaded && setIsFullyLoaded(renderLimit >= nodes.length);\n\t}, [nodes.length, renderLimit]);\n\n\treturn (\n\t\t<ContentGrid\n\t\t\tmasonry\n\t\t\tnodes={nodes.slice(0, renderLimit)}\n\t\t\thiddenNodes={nodes.slice(renderLimit)}\n\t\t\tlazyLoadRef={ref}\n\t\t/>\n\t);\n});\n\nconst ProjectExplorerWrapper = React.memo(props => {\n\tconst {\n\t\tallTagsJson: {nodes: tags},\n\t} = useStaticQuery(graphql`\n\t\t{\n\t\t\tallTagsJson {\n\t\t\t\tnodes {\n\t\t\t\t\tname\n\t\t\t\t\treadable\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\tconst allProjects = allProjectsQuery();\n\tconst nodes = useMemo(\n\t\t() =>\n\t\t\tallProjects.concat(\n\t\t\t\tgridDoodles.map(([Doodle, shouldRender], i) => ({\n\t\t\t\t\tuid: `DOODLE_${i}`,\n\t\t\t\t\ttype: 'doodle',\n\t\t\t\t\tDoodle,\n\t\t\t\t\tshouldRender,\n\t\t\t\t})),\n\t\t\t),\n\t\t[allProjects],\n\t);\n\n\treturn <ProjectExplorer nodes={nodes} tags={tags} {...props} />;\n});\n\nexport default ProjectExplorerWrapper;\n\n/* Big TODO: Once tags are established and applied to each content node (lots\n   of manual work required before that happens), get filtering by tag back into\n   the component. Here’s an old snippet:\n\n\t\tconst filtered = checkedTagNames.length\n\t\t\t? filteredByType.filter(node =>\n\t\t\t\t\tcheckedTagNames[\n\t\t\t\t\t\tstate.filterType === 'any' ? 'some' : 'every'\n\t\t\t\t\t](tagName => node.tags && node.tags.includes(tagName))\n\t\t\t  )\n\t\t\t: filteredByType;\n\n\t\t// …\n\t\t// …then for the render:\n\t\t// …\n\n\t\t<p className=\"legend\">Match:</p>\n\t\t<div className=\"inputs\">\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname=\"labs-filter-any\"\n\t\t\t\tid=\"labs-filter-any\"\n\t\t\t\tvalue=\"any\"\n\t\t\t\tchecked={this.state.filterType === 'any'}\n\t\t\t\tonChange={this.handleFilterTypeChange}\n\t\t\t/>\n\t\t\t<label htmlFor=\"labs-filter-any\">Any</label>\n\t\t\t|\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname=\"labs-filter-all\"\n\t\t\t\tid=\"labs-filter-all\"\n\t\t\t\tvalue=\"all\"\n\t\t\t\tchecked={this.state.filterType === 'all'}\n\t\t\t\tonChange={this.handleFilterTypeChange}\n\t\t\t/>\n\t\t\t<label htmlFor=\"labs-filter-all\">All</label>\n\t\t</div>\n\t\t<p className=\"legend\">Of:</p>\n\t\t<div className=\"inputs\">\n\t\t\t{tags.map((tag, i) => (\n\t\t\t\t<Fragment key={tag.name}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname={`labs-tags-${tag.name}`}\n\t\t\t\t\t\tid={`labs-tags-${tag.name}`}\n\t\t\t\t\t\tvalue={tag.name}\n\t\t\t\t\t\tchecked={this.state.tagStates[i]}\n\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\tthis.handleTagStateChange(e, i)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor={`labs-tags-${tag.name}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{tag.readable}\n\t\t\t\t\t</label>\n\t\t\t\t</Fragment>\n\t\t\t))}\n\t\t</div>\n\t\t<button\n\t\t\tclassName=\"labs-clear labs-clear-tags\"\n\t\t\tonClick={this.handleClearTagsClick}\n\t\t>\n\t\t\t✖\n\t\t</button>\n*/\n","import BigQuote from '../components/BigQuote';\nimport GoUp from '../components/GoUp';\nimport ProjectExplorer from '../components/ProjectExplorer';\nimport SEO from '../components/SEO';\nimport React, {useState} from 'react';\n\nexport function Head(props) {\n\treturn <SEO {...props} title=\"Lab\" />;\n}\n\nconst LabPage = () => {\n\tconst [isFullyLoaded, setIsFullyLoaded] = useState(false);\n\n\treturn (\n\t\t<>\n\t\t\t<ProjectExplorer setIsFullyLoaded={setIsFullyLoaded} />\n\t\t\t{isFullyLoaded && (\n\t\t\t\t<>\n\t\t\t\t\t<BigQuote quoteId=\"VOLTAIRE_BORING\" />\n\t\t\t\t\t<GoUp />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default LabPage;\n","import AutoLink, {ExternalLink} from '../components/AutoLink';\nimport React, {useState} from 'react';\n\nconst BlockEmbedButton = ({type, onClick}) => (\n\t<button className=\"block-embed-button default-button\" onClick={onClick}>\n\t\tLoad embedded media{type ? ` (${type})` : ''}\n\t</button>\n);\n\nexport const TitleOnly = () => null;\nexport const ProjectContent = ({descriptionList}) =>\n\tdescriptionList && (\n\t\t<main>\n\t\t\t{descriptionList.map((d, i) => (\n\t\t\t\t<p key={i} dangerouslySetInnerHTML={{__html: d}} />\n\t\t\t))}\n\t\t</main>\n\t);\nexport const PostContent = ({description, link, more}) =>\n\tdescription ? (\n\t\t<main>\n\t\t\t<div\n\t\t\t\tclassName={more ? 'excerpt' : null}\n\t\t\t\tdangerouslySetInnerHTML={{__html: description}}\n\t\t\t/>\n\t\t\t{more && (\n\t\t\t\t<p className=\"continue-reading\">\n\t\t\t\t\t<AutoLink to={link}>Continue reading</AutoLink>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</main>\n\t) : null;\nexport const ArenaChannelContent = ({description, length, updatedAt}) => (\n\t<main>\n\t\t{description && <p>{description}</p>}\n\t\t<p>\n\t\t\tAn Are.na channel with {length} blocks. Last updated{' '}\n\t\t\t{updatedAt.slice(0, 10)}.\n\t\t</p>\n\t</main>\n);\nexport const IconContent = ({image, title}) => (\n\t<main>\n\t\t<img\n\t\t\tsrc={image.url}\n\t\t\twidth={image.width}\n\t\t\theight={image.height}\n\t\t\talt={`${title} icon`}\n\t\t/>\n\t</main>\n);\nexport const DweetContent = ({title, blockEmbeds}) => {\n\tconst [showEmbed, setShowEmbed] = useState(false);\n\n\treturn (\n\t\t<div className=\"dweet-content\">\n\t\t\t{!blockEmbeds || showEmbed ? (\n\t\t\t\t<iframe\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"100%\"\n\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\tsrc={`https://www.dwitter.net/e/${title.slice(1)}`}\n\t\t\t\t\tallowFullScreen=\"true\"\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<BlockEmbedButton\n\t\t\t\t\ttype=\"Dwitter\"\n\t\t\t\t\tonClick={() => setShowEmbed(true)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\nexport const PatchContent = ({description, link}) => (\n\t<main>\n\t\t{description?.slice(-3) === '...' ? (\n\t\t\t<p>\n\t\t\t\t{description}{' '}\n\t\t\t\t<ExternalLink to={link}>\n\t\t\t\t\tread the full description on Patchstorage\n\t\t\t\t</ExternalLink>\n\t\t\t</p>\n\t\t) : (\n\t\t\t<p>{description}</p>\n\t\t)}\n\t</main>\n);\nexport const SongContent = ({title, uid, blockEmbeds}) => {\n\tconst [showEmbed, setShowEmbed] = useState(false);\n\n\treturn (\n\t\t<div className=\"song-content\">\n\t\t\t{!blockEmbeds || showEmbed ? (\n\t\t\t\t<iframe\n\t\t\t\t\ttitle={`An embedded song called \"${title}\"`}\n\t\t\t\t\tclassName=\"soundcloud\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"100\"\n\t\t\t\t\tscrolling=\"no\"\n\t\t\t\t\tframeBorder=\"no\"\n\t\t\t\t\tsrc={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${uid.slice(\n\t\t\t\t\t\tuid.indexOf('_') + 1,\n\t\t\t\t\t)}&color=%23000000&auto_play=false&hide_related=true&show_comments=false&show_user=false&show_reposts=false&show_teaser=true`}\n\t\t\t\t></iframe>\n\t\t\t) : (\n\t\t\t\t<BlockEmbedButton\n\t\t\t\t\ttype=\"SoundCloud\"\n\t\t\t\t\tonClick={() => setShowEmbed(true)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\nexport const VideoContent = ({\n\tblockEmbeds,\n\tbody,\n\tcontentType,\n\tdescription,\n\ttitle,\n\timage,\n\tlink,\n\tmore,\n}) => {\n\tconst [showEmbed, setShowEmbed] = useState(false);\n\n\treturn (\n\t\t<main>\n\t\t\t<div className=\"video-embed\">\n\t\t\t\t{!blockEmbeds || showEmbed ? (\n\t\t\t\t\t{\n\t\t\t\t\t\tvimeo: body && (\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{__html: body}} />\n\t\t\t\t\t\t),\n\t\t\t\t\t\tyoutube: (\n\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\ttitle={`An embedded video called \"${title}\"`}\n\t\t\t\t\t\t\t\tallowFullScreen\n\t\t\t\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\t\t\t\tsrc={`https://www.youtube-nocookie.com/embed/${body}`}\n\t\t\t\t\t\t\t></iframe>\n\t\t\t\t\t\t),\n\t\t\t\t\t}[contentType]\n\t\t\t\t) : (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${image.url})`,\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t\t\tbackgroundPosition: 'center',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockEmbedButton\n\t\t\t\t\t\t\ttype={\n\t\t\t\t\t\t\t\tcontentType === 'vimeo' ? 'Vimeo' : 'YouTube'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={() => setShowEmbed(true)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{description && (\n\t\t\t\t<>\n\t\t\t\t\t<p>{description}</p>\n\t\t\t\t\t{more && (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<ExternalLink to={link}>\n\t\t\t\t\t\t\t\tRead the full description on{' '}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvimeo: 'Vimeo',\n\t\t\t\t\t\t\t\t\t\tyoutube: 'YouTube',\n\t\t\t\t\t\t\t\t\t}[contentType]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</main>\n\t);\n};\nexport const ScreenshotContent = ({body, link, contentType, extraData}) => {\n\tlet innerContent;\n\tswitch (contentType) {\n\t\tcase 'photo':\n\t\t\t// TODO: If embeds are turned off, make innerContent something like:\n\t\t\t// <ExternalLink to={link}>See ${extraData[2]} images</ExternalLink>\n\t\t\tinnerContent = (\n\t\t\t\t<>\n\t\t\t\t\t<ExternalLink className=\"image-link\" to={link}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\theight={extraData[1]}\n\t\t\t\t\t\t\tsrc={body}\n\t\t\t\t\t\t\twidth={extraData[0]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t{extraData[2] > 1 && (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<ExternalLink to={link}>\n\t\t\t\t\t\t\t\t+ {extraData[2] - 1} more images\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'video':\n\t\t\tinnerContent = (\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tcontrols\n\t\t\t\t\theight={extraData[1] || 'auto'}\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\tsrc={body}\n\t\t\t\t\twidth={extraData[0]}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'audio':\n\t\t\tinnerContent = <audio controls preload=\"none\" src={body} />;\n\t\t\tbreak;\n\t}\n\treturn <main className=\"screenshot-content\">{innerContent}</main>;\n};\n\nexport default {\n\tdoodle: {\n\t\treadableType: 'Doodle',\n\t},\n\tdweet: {\n\t\tclassName: 'span-5',\n\t\treadableType: 'Dweet',\n\t\tInner: DweetContent,\n\t},\n\tpatch: {\n\t\tclassName: 'span-4',\n\t\treadableType: 'Patchstorage module',\n\t\tshortType: 'Patch',\n\t\tInner: PatchContent,\n\t},\n\tproject: {\n\t\tclassName: 'span-4',\n\t\treadableType: 'Project',\n\t\tInner: ProjectContent,\n\t},\n\tpost: {\n\t\tclassName: 'span-6',\n\t\treadableType: 'Blog post',\n\t\tInner: PostContent,\n\t},\n\tarenaChannel: {\n\t\tclassName: 'span-3',\n\t\treadableType: 'Are.na channel',\n\t\tInner: ArenaChannelContent,\n\t},\n\ticon: {\n\t\tclassName: 'span-3',\n\t\treadableType: 'Icon',\n\t\tInner: IconContent,\n\t},\n\tcommit: {\n\t\tclassName: 'span-6',\n\t\treadableType: 'Commit blog post',\n\t\tInner: PostContent,\n\t},\n\ttumblr: {\n\t\tclassName: 'span-6',\n\t\treadableType: 'SFPC blog post',\n\t\tInner: PostContent,\n\t},\n\tscreenshotsTumblr: {\n\t\tclassName: 'span-3',\n\t\treadableType: 'Screenshot',\n\t\tInner: ScreenshotContent,\n\t},\n\tsong: {\n\t\tclassName: 'span-5',\n\t\treadableType: 'Song',\n\t\tInner: SongContent,\n\t},\n\tvideo: {\n\t\tclassName: 'span-4',\n\t\treadableType: 'Video',\n\t\tInner: VideoContent,\n\t},\n};\n","const formatters = {\n\tpost: function formatPost(node) {\n\t\t// Move all `fields` properties to the top level and sort tags.\n\t\tconst {\n\t\t\tfields: {slug, ...fields},\n\t\t\tfrontmatter,\n\t\t\t...rest\n\t\t} = node;\n\t\treturn {\n\t\t\t...fields,\n\t\t\t...rest,\n\t\t\tfrontmatter: {\n\t\t\t\t...frontmatter,\n\t\t\t\ttags: [...(frontmatter.tags ?? [])].sort(),\n\t\t\t},\n\t\t\ttype: 'post',\n\t\t\tlink: slug,\n\t\t\ttags: ['instructional'],\n\t\t};\n\t},\n};\n\nexport default function formatProps(props) {\n\tconst formatter = formatters[props.type];\n\treturn formatter ? formatter(props) : props;\n}\n","import formatProps from './format-props.mjs';\nimport {useStaticQuery, graphql} from 'gatsby';\n\nexport function format({\n\tallMdx: {nodes: posts} = {nodes: []},\n\tallCombinedProjectsJson: {nodes: projects} = {nodes: []},\n}) {\n\treturn [\n\t\t...posts.map(p => ({\n\t\t\t...p,\n\t\t\ttype: 'post',\n\t\t})),\n\t\t...projects,\n\t].map(formatProps);\n}\n\nexport default () =>\n\tformat(\n\t\tuseStaticQuery(graphql`{\n\tallMdx(\n\t\tfilter: {internal: {contentFilePath: {regex: \"//data/markdown/posts/.*\\\\.mdx?$/\"}}}\n\t\tsort: {fields: {date: DESC}}\n\t) {\n\t\tnodes {\n\t\t\tmore\n\t\t\tdescription\n\t\t\tfrontmatter {\n\t\t\t\tlayout\n\t\t\t\ttags\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tuid\n\t\t\t\tslug\n\t\t\t\ttitle\n\t\t\t\tdate(formatString: \"YYYY-MM-DD\")\n\t\t\t}\n\t\t}\n\t}\n\tallCombinedProjectsJson {\n\t\tnodes {\n\t\t\tuid\n\t\t\ttype\n\t\t\ttitle\n\t\t\tcoolness\n\t\t\tdate\n\t\t\tlink\n\t\t\tdescription\n\t\t\tdescriptionList\n\t\t\ttags\n\t\t\trepo\n\t\t\tupdatedAt\n\t\t\tlength\n\t\t\tcontentType\n\t\t\tbody\n\t\t\timage {\n\t\t\t\theight\n\t\t\t\twidth\n\t\t\t\turl\n\t\t\t}\n\t\t\tmore\n\t\t\textraData\n\t\t}\n\t}\n}`),\n\t);\n","export function shuffle(nodes) {\n\tconst shuffled = [...nodes];\n\tfor (let i = shuffled.length - 1; i > 0; --i) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n\t}\n\treturn shuffled;\n}\n\nexport function sortByCoolness(nodes) {\n\treturn [...nodes].sort(({coolness: a = -1}, {coolness: b = -1}) => b - a);\n}\n\nexport function sortByDate(nodes) {\n\treturn [...nodes].sort((a, b) => b.date.localeCompare(a.date));\n}\n\nexport function sortByName(nodes) {\n\treturn [...nodes].sort((a, b) => a.title.localeCompare(b.title));\n}\n\nexport default [\n\t{\n\t\ttitle: 'date',\n\t\tsortFn: sortByDate,\n\t},\n\t{\n\t\ttitle: 'name',\n\t\tsortFn: sortByName,\n\t},\n\t{\n\t\ttitle: 'coolness',\n\t\tsortFn: sortByCoolness,\n\t},\n];\n"],"names":["props","React","Object","assign","xmlns","viewBox","width","height","fill","d","_ref","quoteId","showRefreshButton","allCombinedQuotesJson","nodes","quotes","useStaticQuery","shuffledQuotes","useState","shuffle","quoteIndex","setQuoteIndex","Math","max","findIndex","_ref2","uid","quote","content","cite","source","author","AutoLink","to","lines","split","className","id","map","line","i","key","href","onClick","prevIndex","length","Repeat","ref","El","type","title","date","link","repo","tags","Doodle","masonry","hidden","contentType","contentTypes","readableType","shortType","Inner","innerRef","innerRect","span","useRect","ceil","cn","join","toLowerCase","style","gridRowEnd","dangerouslySetInnerHTML","__html","dateTime","replace","ExternalLink","tag","hiddenNodes","lazyLoadRef","theme","blockEmbeds","useContext","SettingsContext","node","ContentNode","mergeRefs","_len","arguments","refs","Array","_key","filteredRefs","filter","Boolean","el","forEach","current","passedRef","children","text","ms","size","classPrefix","OuterElement","rest","xSize","ySize","n","index","setIndex","inView","useViewport","useInterval","TextGrid","from","_","floor","pow","CycleText","window","scrollTo","document","getElementById","focus","preventScroll","display","gridTemplate","letter","defaultProps","random","zoom","dark","light","seamless","getState","cDark","cLight","themeBias","canvas","tiledCanvas","createElement","maxTiles","sequence","randSequence","lcm","ctx","getContext","tiledCtx","x","y","fillStyle","fillRect","nTiles","min","offset","drawImage","BackgroundGenerator","settings","useMemo","getThemeColor","setState","clicked","setClicked","useEffect","background","toDataURL","hasOwnProperty","withSettings","PI","cos","sin","L","R","C","variants","getOffset","nLines","lineWidth","globalCompositeOperation","CircleConstrainedLines","canvasRef","useRef","variant","setVariant","getColor","angleStep","clearRect","beginPath","strokeStyle","arc","stroke","angle","x1","y1","x2","y2","moveTo","lineTo","v","textOptions","loading","win","_textOptions$gameStat","activeTimeout","gameState","setGameState","mainText","useTypedText","delay","setTimeout","clearTimeout","clickYes","useCallback","clickNo","useKeyPresses","onDown","playAgain","disabled","riotRef","_inView","boundingClientRect","windowHeight","updateOnScroll","oRef","oBoundingClientRect","factor","top","sqrt","abs","transformOrigin","left","p","transform","GameOver","Riot","animationDelay","month","Date","getMonth","today","getDate","Component","chance","fn","ProjectExplorer","nodeTypes","version","Set","sort","a","b","localeCompare","sortingMethods","drawerOpen","setDrawerOpen","ascending","setAscending","useStickyState","STORAGE_KEYS","labAscending","sortIdx","setSortIdx","labSortIdx","typeStates","setTypeStates","labTypeStates","serverState","nSources","reduce","sortFn","checkedTypeNames","doodles","filtered","includes","partitions","push","sorted","ordered","reverse","doodle","shouldRender","splice","openState","Fragment","name","value","checked","onChange","e","target","prevTypeStates","updatedTypeStates","htmlFor","capitalize","LazyGrid","setIsFullyLoaded","renderLimit","setRenderLimit","bottom","l","ContentGrid","slice","allTagsJson","allProjects","allProjectsQuery","concat","gridDoodles","_ref3","Head","SEO","LabPage","isFullyLoaded","BigQuote","GoUp","BlockEmbedButton","PostContent","description","more","dweet","_ref6","showEmbed","setShowEmbed","frameBorder","src","allowFullScreen","patch","_ref7","project","descriptionList","post","arenaChannel","_ref4","updatedAt","icon","_ref5","image","url","alt","commit","tumblr","screenshotsTumblr","_ref10","innerContent","body","extraData","autoPlay","controls","loop","muted","preload","song","_ref8","scrolling","indexOf","video","_ref9","vimeo","youtube","backgroundImage","position","right","backgroundSize","backgroundPosition","formatters","_frontmatter$tags","fields","slug","frontmatter","formatProps","formatter","allMdx","posts","allCombinedProjectsJson","projects","format","shuffled","j","sortByDate","coolness"],"sourceRoot":""}