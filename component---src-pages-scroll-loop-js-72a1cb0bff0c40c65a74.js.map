{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.date.to-string.js","webpack:///./src/pages/scroll-loop.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.object.define-property.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/react-intersection-observer/react-intersection-observer.esm.js"],"names":["DateProto","Date","prototype","$toString","getTime","NaN","value","call","this","Page","page","className","Quote","children","onChange","threshold","inView","entry","isIntersecting","boundingClientRect","y","FullPage","useState","height","setHeight","ref","useRef","useLayoutEffect","current","clientHeight","args","setPage","handlePageChange","p","Array","from","length","_","i","key","$export","S","F","defineProperty","f","condition","message","Error","_defineProperty","obj","Object","enumerable","configurable","writable","_extends","assign","target","arguments","source","hasOwnProperty","apply","_assertThisInitialized","self","ReferenceError","INSTANCE_MAP","Map","OBSERVER_MAP","ROOT_IDS","consecutiveRootId","observe","element","callback","options","_options","root","rootMargin","has","observerId","get","set","toString","getRootId","observerInstance","IntersectionObserver","instance","observer","thresholds","isArray","unobserve","itemsLeft","rootObserved","forEach","item","disconnect","changes","intersection","intersectionRatio","some","undefined","_React$Component","subClass","superClass","InView","_this","_len","_key","concat","node","props","triggerOnce","setState","observeNode","state","create","constructor","__proto__","_proto","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","_this$props","handleChange","render","_this$state","isPlainChildren","handleNode","_this$props2","as","tag","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","initialState","useInView","_React$useState","setRef"],"mappings":"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","file":"component---src-pages-scroll-loop-js-72a1cb0bff0c40c65a74.js","sourcesContent":["var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","// Some initial work at trying to get an infinite scroll page going.\n\nimport React, {useState, useLayoutEffect, useRef} from 'react';\nimport {InView} from 'react-intersection-observer';\n\nimport './scroll-loop.css';\n\nconst Page = ({page}) => (\n\t<div className=\"fullscreen plus\">\n\t\t<p>Page {page}</p>\n\t</div>\n);\n\nconst Quote = ({children, onChange}) => {\n\treturn (\n\t\t<InView\n\t\t\tthreshold={0.3}\n\t\t\tclassName=\"fullscreen\"\n\t\t\tonChange={(inView, entry) => {\n\t\t\t\tif (\n\t\t\t\t\tentry.isIntersecting &&\n\t\t\t\t\tentry.boundingClientRect.y > 0 &&\n\t\t\t\t\tinView\n\t\t\t\t)\n\t\t\t\t\tonChange(inView);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</InView>\n\t);\n};\n\nconst FullPage = ({page, onChange}) => {\n\tconst [height, setHeight] = useState(0);\n\tconst ref = useRef(null);\n\n\tuseLayoutEffect(() => {\n\t\tsetHeight(ref.current.clientHeight);\n\t});\n\n\treturn (\n\t\t<div ref={ref}>\n\t\t\t<Page page={page} />\n\t\t\t<Quote onChange={(...args) => onChange(height, ...args)}>\n\t\t\t\t<p>\"Quote {page}\"</p>\n\t\t\t</Quote>\n\t\t</div>\n\t);\n};\n\nexport default () => {\n\tconst [page, setPage] = useState(1);\n\tconst [[topPage, bottomPage], setPages] = useState([]);\n\t/*\n\n\tPage content\n\tFullscreen quote\n\tPage content\n\tFullscreen quote\n\tEtc.\n\n\tWhen you scroll into the quote with +ve Y, bottomPage becomes topPage,\n\tdestroy old topPage, create new bottomPage.\n\n\tIf you scroll out of the quote with +ve Y, topPage becomes bottomPage,\n\tdestroy old bottomPage, create new topPage.\n\n\t*/\n\n\tfunction handlePageChange(height, inView) {\n\t\tif (inView) {\n\t\t\tsetPage(p => p + 1);\n\t\t\t// window.scrollBy(0, -height);\n\t\t} else {\n\t\t\tsetPage(p => p - 1);\n\t\t\t// window.scrollBy(0, height);\n\t\t}\n\t}\n\treturn (\n\t\t<div className=\"scroll-container\">\n\t\t\t{Array.from(\n\t\t\t\t{length: 1000},\n\t\t\t\t(_, i) =>\n\t\t\t\t\tpage + 1 > i && (\n\t\t\t\t\t\t<FullPage\n\t\t\t\t\t\t\tpage={`${i + 1} / ${page}`}\n\t\t\t\t\t\t\tonChange={handlePageChange}\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\n\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  }\n\n  throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;","import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.define-property\";\nimport { createElement, Component, useRef, useState, useCallback, useEffect } from 'react';\nimport invariant from 'tiny-invariant';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar INSTANCE_MAP = new Map();\nvar OBSERVER_MAP = new Map();\nvar ROOT_IDS = new Map();\nvar consecutiveRootId = 0;\n/**\n * Generate a unique ID for the root element\n * @param root\n */\n\nfunction getRootId(root) {\n  if (!root) return '';\n  if (ROOT_IDS.has(root)) return ROOT_IDS.get(root);\n  consecutiveRootId += 1;\n  ROOT_IDS.set(root, consecutiveRootId.toString());\n  return ROOT_IDS.get(root) + '_';\n}\n/**\n * Monitor element, and trigger callback when element becomes inView\n * @param element {HTMLElement}\n * @param callback {Function} Called with inView\n * @param options {Object} InterSection observer options\n * @param options.threshold {Number} Number between 0 and 1, indicating how much of the element should be inView before triggering\n * @param options.root {HTMLElement}\n * @param options.rootMargin {String} The CSS margin to apply to the root element.\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  } // IntersectionObserver needs a threshold to trigger, so set it to 0 if it's not defined.\n  // Modify the options object, since it's used in the onChange handler.\n\n\n  if (!options.threshold) options.threshold = 0;\n  var _options = options,\n      root = _options.root,\n      rootMargin = _options.rootMargin,\n      threshold = _options.threshold; // Validate that the element is not being used in another <Observer />\n\n  !!INSTANCE_MAP.has(element) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: Trying to observe %s, but it's already being observed by another instance.\\nMake sure the `ref` is only used by a single <Observer /> instance.\\n\\n%s\") : invariant(false) : void 0;\n  /* istanbul ignore if */\n\n  if (!element) return; // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  // An observer with the same options can be reused, so lets use this fact\n\n  var observerId = getRootId(root) + (rootMargin ? threshold.toString() + \"_\" + rootMargin : threshold.toString());\n  var observerInstance = OBSERVER_MAP.get(observerId);\n\n  if (!observerInstance) {\n    observerInstance = new IntersectionObserver(onChange, options);\n    /* istanbul ignore else  */\n\n    if (observerId) OBSERVER_MAP.set(observerId, observerInstance);\n  }\n\n  var instance = {\n    callback: callback,\n    element: element,\n    inView: false,\n    observerId: observerId,\n    observer: observerInstance,\n    // Make sure we have the thresholds value. It's undefined on a browser like Chrome 51.\n    thresholds: observerInstance.thresholds || (Array.isArray(threshold) ? threshold : [threshold])\n  };\n  INSTANCE_MAP.set(element, instance);\n  observerInstance.observe(element);\n  return instance;\n}\n/**\n * Stop observing an element. If an element is removed from the DOM or otherwise destroyed,\n * make sure to call this method.\n * @param element {Element}\n */\n\n\nfunction unobserve(element) {\n  if (!element) return;\n  var instance = INSTANCE_MAP.get(element);\n\n  if (instance) {\n    var observerId = instance.observerId,\n        observer = instance.observer;\n    var root = observer.root;\n    observer.unobserve(element); // Check if we are still observing any elements with the same threshold.\n\n    var itemsLeft = false; // Check if we still have observers configured with the same root.\n\n    var rootObserved = false;\n    /* istanbul ignore else  */\n\n    if (observerId) {\n      INSTANCE_MAP.forEach(function (item, key) {\n        if (key !== element) {\n          if (item.observerId === observerId) {\n            itemsLeft = true;\n            rootObserved = true;\n          }\n\n          if (item.observer.root === root) {\n            rootObserved = true;\n          }\n        }\n      });\n    }\n\n    if (!rootObserved && root) ROOT_IDS[\"delete\"](root);\n\n    if (observer && !itemsLeft) {\n      // No more elements to observe for threshold, disconnect observer\n      observer.disconnect();\n    } // Remove reference to element\n\n\n    INSTANCE_MAP[\"delete\"](element);\n  }\n}\n\nfunction onChange(changes) {\n  changes.forEach(function (intersection) {\n    var isIntersecting = intersection.isIntersecting,\n        intersectionRatio = intersection.intersectionRatio,\n        target = intersection.target;\n    var instance = INSTANCE_MAP.get(target); // Firefox can report a negative intersectionRatio when scrolling.\n\n    /* istanbul ignore else */\n\n    if (instance && intersectionRatio >= 0) {\n      // If threshold is an array, check if any of them intersects. This just triggers the onChange event multiple times.\n      var inView = instance.thresholds.some(function (threshold) {\n        return instance.inView ? intersectionRatio > threshold : intersectionRatio >= threshold;\n      });\n\n      if (isIntersecting !== undefined) {\n        // If isIntersecting is defined, ensure that the element is actually intersecting.\n        // Otherwise it reports a threshold of 0\n        inView = inView && isIntersecting;\n      }\n\n      instance.inView = inView;\n      instance.callback(inView, intersection);\n    }\n  });\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\n * Monitors scroll, and triggers the children function with updated props\n *\n <InView>\n {({inView, ref}) => (\n   <h1 ref={ref}>{`${inView}`}</h1>\n )}\n </InView>\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      inView: false,\n      entry: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"node\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNode\", function (node) {\n      if (_this.node) {\n        unobserve(_this.node);\n\n        if (!node && !_this.props.triggerOnce) {\n          _this.setState({\n            inView: false,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (inView, entry) {\n      // Only trigger a state update if inView has changed.\n      // This prevents an unnecessary extra state update during mount, when the element stats outside the viewport\n      if (inView !== _this.state.inView || inView) {\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !this.node ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: No DOM node found. Make sure you forward \\\"ref\\\" to the root DOM element you want to observe.\") : invariant(false) : void 0;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold) {\n      unobserve(this.node);\n      this.observeNode();\n    }\n\n    if (prevState.inView !== this.state.inView) {\n      if (this.state.inView && this.props.triggerOnce) {\n        unobserve(this.node);\n        this.node = null;\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.node) {\n      unobserve(this.node);\n      this.node = null;\n    }\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin;\n    observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$state = this.state,\n        inView = _this$state.inView,\n        entry = _this$state.entry;\n\n    if (!isPlainChildren(this.props)) {\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        triggerOnce = _this$props2.triggerOnce,\n        threshold = _this$props2.threshold,\n        root = _this$props2.root,\n        rootMargin = _this$props2.rootMargin,\n        onChange = _this$props2.onChange,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\"]);\n\n    return createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\n\n_defineProperty(InView, \"displayName\", 'InView');\n\n_defineProperty(InView, \"defaultProps\", {\n  threshold: 0,\n  triggerOnce: false\n});\n/* eslint-disable react-hooks/exhaustive-deps */\n\n\nvar initialState = {\n  inView: false,\n  entry: undefined\n};\n\nfunction useInView(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ref = useRef();\n\n  var _React$useState = useState(initialState),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (ref.current) {\n      unobserve(ref.current);\n    }\n\n    if (node) {\n      observe(node, function (inView, intersection) {\n        setState({\n          inView: inView,\n          entry: intersection\n        });\n\n        if (inView && options.triggerOnce) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve(node);\n        }\n      }, options);\n    } // Store a reference to the node, so we can unobserve it later\n\n\n    ref.current = node;\n  }, [options.threshold, options.root, options.rootMargin, options.triggerOnce]);\n  useEffect(function () {\n    if (!ref.current && state !== initialState && !options.triggerOnce) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState(initialState);\n    }\n  });\n  return [setRef, state.inView, state.entry];\n}\n\nexport default InView;\nexport { InView, useInView };"],"sourceRoot":""}