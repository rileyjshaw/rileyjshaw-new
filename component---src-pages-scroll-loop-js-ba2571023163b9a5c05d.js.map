{"version":3,"sources":["webpack:///./src/pages/scroll-loop.js"],"names":["Page","page","className","Quote","children","onChange","threshold","inView","entry","isIntersecting","boundingClientRect","y","FullPage","useState","height","setHeight","ref","useRef","useLayoutEffect","current","clientHeight","args","ScrollLoop","setPage","handlePageChange","p","Array","from","length","_","i","key"],"mappings":"qHAAA,sDAKMA,EAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACZ,yBAAKC,UAAU,mBACd,mCAASD,KAILE,EAAQ,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACzB,OACC,kBAAC,IAAD,CACCC,UAAW,GACXJ,UAAU,aACVG,SAAU,SAACE,EAAQC,GAEjBA,EAAMC,gBACND,EAAME,mBAAmBC,EAAI,GAC7BJ,GAEAF,EAASE,KAGVH,IAKEQ,EAAW,SAAC,GAAsB,IAArBX,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,SAAc,EACVQ,mBAAS,GAA9BC,EAD+B,KACvBC,EADuB,KAEhCC,EAAMC,iBAAO,MAMnB,OAJAC,2BAAgB,WACfH,EAAUC,EAAIG,QAAQC,iBAItB,yBAAKJ,IAAKA,GACT,kBAAChB,EAAD,CAAMC,KAAMA,IACZ,kBAACE,EAAD,CAAOE,SAAU,sCAAIgB,EAAJ,yBAAIA,EAAJ,uBAAahB,EAASS,KAAWO,KACjD,qCAAWpB,EAAX,QAmDWqB,UA7CI,WAAO,IAAD,EACAT,mBAAS,GAA1BZ,EADiB,KACXsB,EADW,OAEkBV,mBAAS,IAF3B,sBAmBxB,SAASW,EAAiBV,EAAQP,GAEhCgB,EADGhB,EACK,SAAAkB,GAAC,OAAIA,EAAI,GAGT,SAAAA,GAAC,OAAIA,EAAI,IAInB,OACC,yBAAKvB,UAAU,oBACbwB,MAAMC,KACN,CAACC,OAAQ,MACT,SAACC,EAAGC,GAAJ,OACC7B,EAAO,EAAI6B,GACV,kBAAClB,EAAD,CACCX,KAAS6B,EAAI,EAAT,MAAgB7B,EACpBI,SAAUmB,EACVO,IAAKD","file":"component---src-pages-scroll-loop-js-ba2571023163b9a5c05d.js","sourcesContent":["// Some initial work at trying to get an infinite scroll page going.\nimport './scroll-loop.css';\nimport React, {useState, useLayoutEffect, useRef} from 'react';\nimport {InView} from 'react-intersection-observer';\n\nconst Page = ({page}) => (\n\t<div className=\"fullscreen plus\">\n\t\t<p>Page {page}</p>\n\t</div>\n);\n\nconst Quote = ({children, onChange}) => {\n\treturn (\n\t\t<InView\n\t\t\tthreshold={0.3}\n\t\t\tclassName=\"fullscreen\"\n\t\t\tonChange={(inView, entry) => {\n\t\t\t\tif (\n\t\t\t\t\tentry.isIntersecting &&\n\t\t\t\t\tentry.boundingClientRect.y > 0 &&\n\t\t\t\t\tinView\n\t\t\t\t)\n\t\t\t\t\tonChange(inView);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</InView>\n\t);\n};\n\nconst FullPage = ({page, onChange}) => {\n\tconst [height, setHeight] = useState(0);\n\tconst ref = useRef(null);\n\n\tuseLayoutEffect(() => {\n\t\tsetHeight(ref.current.clientHeight);\n\t});\n\n\treturn (\n\t\t<div ref={ref}>\n\t\t\t<Page page={page} />\n\t\t\t<Quote onChange={(...args) => onChange(height, ...args)}>\n\t\t\t\t<p>\"Quote {page}\"</p>\n\t\t\t</Quote>\n\t\t</div>\n\t);\n};\n\nconst ScrollLoop = () => {\n\tconst [page, setPage] = useState(1);\n\tconst [[topPage, bottomPage], setPages] = useState([]);\n\t/*\n\n\tPage content\n\tFullscreen quote\n\tPage content\n\tFullscreen quote\n\tEtc.\n\n\tWhen you scroll into the quote with +ve Y, bottomPage becomes topPage,\n\tdestroy old topPage, create new bottomPage.\n\n\tIf you scroll out of the quote with +ve Y, topPage becomes bottomPage,\n\tdestroy old bottomPage, create new topPage.\n\n\t*/\n\n\tfunction handlePageChange(height, inView) {\n\t\tif (inView) {\n\t\t\tsetPage(p => p + 1);\n\t\t\t// window.scrollBy(0, -height);\n\t\t} else {\n\t\t\tsetPage(p => p - 1);\n\t\t\t// window.scrollBy(0, height);\n\t\t}\n\t}\n\treturn (\n\t\t<div className=\"scroll-container\">\n\t\t\t{Array.from(\n\t\t\t\t{length: 1000},\n\t\t\t\t(_, i) =>\n\t\t\t\t\tpage + 1 > i && (\n\t\t\t\t\t\t<FullPage\n\t\t\t\t\t\t\tpage={`${i + 1} / ${page}`}\n\t\t\t\t\t\t\tonChange={handlePageChange}\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ScrollLoop;\n"],"sourceRoot":""}