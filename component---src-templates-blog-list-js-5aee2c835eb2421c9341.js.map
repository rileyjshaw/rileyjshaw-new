{"version":3,"sources":["webpack:///./src/templates/blog-list.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["urlFrom","page","data","pageContext","currentPage","numPages","posts","allMarkdownRemark","edges","map","node","allCombinedProjectsJson","nodes","sort","a","b","Date","date","fields","isFirst","isLast","prevPage","nextPage","nearbyPages","Array","from","length","_","i","splice","Math","min","max","key","to","className","title","El","post","uid","link","slug","repo","more","dateTime","replace","dangerouslySetInnerHTML","__html","description","rel","blogListQuery","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","url","this"],"mappings":"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","file":"component---src-templates-blog-list-js-5aee2c835eb2421c9341.js","sourcesContent":["import React from 'react';\nimport {Link, graphql} from 'gatsby';\n\nimport AutoLink, {ExternalLink} from '../components/auto-link';\nimport Layout from '../components/layout';\nimport RgbSplitter from '../components/rgb-splitter';\nimport SEO from '../components/seo';\nimport Shard from '../components/shard';\n\nimport '../components/content-node.css';\nimport './post.css';\nimport './blog-list.css';\n\nconst urlFrom = page => `/blog${page === 1 ? '' : `/${page}`}`;\n\n// TODO(riley): Style with same stylesheet as blog posts.\nexport default ({data, pageContext: {currentPage, numPages}}) => {\n\t// TODO(riley): Unfortunate that we're re-sorting this client-side instead\n\t//              of collecting + sorting it with GraphQL.\n\tconst posts = [\n\t\t...data.allMarkdownRemark.edges.map(({node}) => node),\n\t\t...data.allCombinedProjectsJson.nodes,\n\t].sort(\n\t\t(a, b) =>\n\t\t\tnew Date(b.date || b.fields.date) -\n\t\t\tnew Date(a.date || a.fields.date)\n\t);\n\n\tconst isFirst = currentPage === 1;\n\tconst isLast = currentPage === numPages;\n\tconst prevPage = !isFirst && urlFrom(currentPage - 1);\n\tconst nextPage = !isLast && urlFrom(currentPage + 1);\n\tconst nearbyPages = Array.from({length: numPages}, (_, i) => i + 1)\n\t\t.splice(Math.min(Math.max(0, currentPage - 3), numPages - 5), 5)\n\t\t.map(page => (\n\t\t\t<Link\n\t\t\t\tkey={page}\n\t\t\t\tto={urlFrom(page)}\n\t\t\t\tclassName={page === currentPage ? 'current-page' : ''}\n\t\t\t>\n\t\t\t\t{page}\n\t\t\t</Link>\n\t\t));\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title=\"All posts\" />\n\t\t\t<header className=\"page-header blog-list-page-header\">\n\t\t\t\t<RgbSplitter El=\"h1\" className=\"title\">\n\t\t\t\t\t<Shard>Blog</Shard>\n\t\t\t\t</RgbSplitter>\n\t\t\t</header>\n\t\t\t<main className=\"blog-list\">\n\t\t\t\t<ul className=\"blog-posts\">\n\t\t\t\t\t{posts.map(post => {\n\t\t\t\t\t\tconst uid = post.uid || post.fields?.uid;\n\t\t\t\t\t\tconst title = post.title || post.fields?.title;\n\t\t\t\t\t\tconst link = post.link || post.fields?.slug;\n\t\t\t\t\t\tconst date = post.date || post.fields?.date;\n\t\t\t\t\t\tconst {repo} = post;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"blog-post content-node\" key={uid}>\n\t\t\t\t\t\t\t\t<article\n\t\t\t\t\t\t\t\t\tclassName={`blog-post-content${\n\t\t\t\t\t\t\t\t\t\tpost.more ? ' excerpt' : ''\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t\t\t<AutoLink to={link}>\n\t\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t\t</AutoLink>\n\t\t\t\t\t\t\t\t\t\t</h1>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"subheading\">\n\t\t\t\t\t\t\t\t\t\t\t<time dateTime={date}>\n\t\t\t\t\t\t\t\t\t\t\t\t{date.replace(/-/g, '.')}\n\t\t\t\t\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t\t\t\t\t{repo && (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t• From repository{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`https://github.com/${repo}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{repo}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t<section\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: post.description,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></section>\n\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t{/* TODO(riley): Consider replacing arrows with - and + in final design. */}\n\t\t\t\t<div className=\"page-navigation\">\n\t\t\t\t\t{!isFirst && (\n\t\t\t\t\t\t<Link to={prevPage} rel=\"prev\">\n\t\t\t\t\t\t\t⬅&#xFE0E;\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t\t{nearbyPages}\n\t\t\t\t\t{!isLast && (\n\t\t\t\t\t\t<Link to={nextPage} rel=\"next\">\n\t\t\t\t\t\t\t➡&#xFE0E;\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</Layout>\n\t);\n};\n\n// TODO(riley): Standardize this format.\nexport const blogListQuery = graphql`\n\tquery blogListQuery(\n\t\t$internalLimit: Int!\n\t\t$internalSkip: Int!\n\t\t$externalLimit: Int!\n\t\t$externalSkip: Int!\n\t) {\n\t\tallMarkdownRemark(\n\t\t\tfilter: {fileAbsolutePath: {regex: \"//posts/.*.md$/\"}}\n\t\t\tsort: {fields: [fields___date], order: DESC}\n\t\t\tlimit: $internalLimit\n\t\t\tskip: $internalSkip\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tdescription\n\t\t\t\t\tmore\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tlayout\n\t\t\t\t\t\ttags\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tuid\n\t\t\t\t\t\tslug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate(formatString: \"YYYY-MM-DD\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tallCombinedProjectsJson(\n\t\t\tfilter: {type: {in: [\"tumblr\", \"commit\"]}}\n\t\t\tsort: {fields: [date, title], order: DESC}\n\t\t\tlimit: $externalLimit\n\t\t\tskip: $externalSkip\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tuid\n\t\t\t\ttitle\n\t\t\t\tdate\n\t\t\t\tlink\n\t\t\t\trepo\n\t\t\t\tdescription\n\t\t\t\tmore\n\t\t\t}\n\t\t}\n\t}\n`;\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}