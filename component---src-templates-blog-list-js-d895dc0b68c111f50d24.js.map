{"version":3,"file":"component---src-templates-blog-list-js-d895dc0b68c111f50d24.js","mappings":"6IAwDA,IA/CA,SAAa,GAAiD,IAAD,IAA/CA,YAAAA,OAAW,MAAG,GAAE,EAASC,EAAS,EAAhBC,MAAkBC,EAAQ,EAARA,SAC1CC,GAAQC,EAAAA,EAAAA,gBAAe,cAAvBD,KAeDF,GAAWD,GAAaG,EAAKE,aAAaJ,OAAK,MACpDE,EAAKE,aAAaC,aAEbC,GAAeP,EAAeA,EAAS,MAAQ,IACpDG,EAAKE,aAAaJ,MAEbO,EAAkBT,GAAeI,EAAKE,aAAaN,YAEzD,OACC,gCACC,6BAAQE,GACR,wBAAMQ,KAAK,cAAcC,QAASF,IAClC,wBAAMC,KAAK,WAAWC,QAASH,IAC/B,wBAAME,KAAK,iBAAiBC,QAASF,IACrC,wBAAMC,KAAK,UAAUC,QAAQ,YAC7B,wBAAMD,KAAK,gBAAgBC,QAASH,IACpC,wBAAME,KAAK,sBAAsBC,QAASF,IAC1C,wBAAMC,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,QAASP,EAAKE,aAAaM,SAQvDT,EAGJ,C,6GC9CMU,EAAU,SAAAC,GAAI,eAAqB,IAATA,EAAa,GAAE,IAAOA,EAAM,EAErD,SAASC,EAAKC,GACpB,OAAO,gBAAC,IAAG,iBAAKA,EAAK,CAAEd,MAAM,cAC9B,CAqJA,UAlJiB,SAAH,GAAsD,IAAjDe,EAAI,EAAJA,KAAK,EAAD,EAAEC,YAAcC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAG7CC,EAAQ,IACVJ,EAAKK,OAAOC,SACZN,EAAKO,wBAAwBD,OAC/BE,MACD,SAACC,EAAGC,GAAC,OACJ,IAAIC,KAAKD,EAAEE,MAAQF,EAAEG,OAAOD,MAC5B,IAAID,KAAKF,EAAEG,MAAQH,EAAEI,OAAOD,KAAK,IAG7BE,EAA0B,IAAhBZ,EACVa,EAASb,IAAgBC,EACzBa,GAAYF,GAAWlB,EAAQM,EAAc,GAC7Ce,GAAYF,GAAUnB,EAAQM,EAAc,GAC5CgB,EAAcC,MAAMC,KAAK,CAACC,OAAQlB,IAAW,SAACmB,EAAGC,GAAC,OAAKA,EAAI,CAAC,IAChEC,OAAOC,KAAKC,IAAID,KAAKE,IAAI,EAAGzB,EAAc,GAAIC,EAAW,GAAI,GAC7DyB,KAAI,SAAA/B,GAAI,OACR,gBAAC,EAAAgC,KAAI,CACJC,IAAKjC,EACLkC,GAAInC,EAAQC,GACZmC,UAAWnC,IAASK,EAAc,eAAiB,IAElDL,EACK,IAGT,OACC,gCACC,wBAAMmC,UAAU,aACf,sBAAIA,UAAU,cACZ5B,EAAMwB,KAAI,SAAAK,GAAS,IAAD,QACZC,EAAMD,EAAKC,MAAkB,QAAf,EAAID,EAAKpB,cAAM,aAAX,EAAaqB,KAC/BjD,EAAQgD,EAAKhD,QAAoB,QAAf,EAAIgD,EAAKpB,cAAM,aAAX,EAAa5B,OACnCkD,EAAOF,EAAKE,OAAmB,QAAf,EAAIF,EAAKpB,cAAM,aAAX,EAAauB,MACjCxB,EAAOqB,EAAKrB,OAAmB,QAAf,EAAIqB,EAAKpB,cAAM,aAAX,EAAaD,MAChCyB,EAAQJ,EAARI,KAEP,OACC,sBAAIL,UAAU,yBAAyBF,IAAKI,GAC3C,2BAASF,UAAU,qBAClB,8BACC,0BACC,gBAAC,KAAQ,CAACD,GAAII,GACZlD,IAIH,uBAAK+C,UAAU,cACd,wBAAMM,SAAU1B,GACdA,EAAK2B,QAAQ,KAAM,MAEpBF,GACA,gCACE,IAAG,oBACc,IAClB,gBAAC,KAAY,CACZN,GAAE,sBAAwBM,GAEzBA,MAMN,2BACCL,UACCC,EAAKO,KAAO,UAAY,KAEzBC,wBAAyB,CACxBC,OAAQT,EAAKlD,eAGdkD,EAAKO,MACL,qBAAGR,UAAU,oBACZ,gBAAC,KAAQ,CAACD,GAAII,GAAK,sBAQzB,KAGD,uBAAKH,UAAU,oBACZlB,GACD,gBAAC,EAAAe,KAAI,CAACE,GAAIf,EAAU2B,IAAI,QAAM,MAI9BzB,GACCH,GACD,gBAAC,EAAAc,KAAI,CAACE,GAAId,EAAU0B,IAAI,QAAM,QAQpC,C","sources":["webpack://rileyjshaw.com/./src/components/seo.js","webpack://rileyjshaw.com/./src/templates/blog-list.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {useStaticQuery, graphql} from 'gatsby';\nimport React from 'react';\n\nfunction SEO({description = '', title: pageTitle, children}) {\n\tconst {site} = useStaticQuery(\n\t\tgraphql`\n\t\t\tquery {\n\t\t\t\tsite {\n\t\t\t\t\tsiteMetadata {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\ttitlePostfix\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tauthor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t);\n\n\tconst title = `${pageTitle || site.siteMetadata.title} · ${\n\t\tsite.siteMetadata.titlePostfix\n\t}`;\n\tconst metaTitle = `${pageTitle ? `${pageTitle} · ` : ''}${\n\t\tsite.siteMetadata.title\n\t}`;\n\tconst metaDescription = description || site.siteMetadata.description;\n\n\treturn (\n\t\t<>\n\t\t\t<title>{title}</title>\n\t\t\t<meta name=\"description\" content={metaDescription} />\n\t\t\t<meta name=\"og:title\" content={metaTitle} />\n\t\t\t<meta name=\"og:description\" content={metaDescription} />\n\t\t\t<meta name=\"og:type\" content=\"website\" />\n\t\t\t<meta name=\"twitter:title\" content={metaTitle} />\n\t\t\t<meta name=\"twitter:description\" content={metaDescription} />\n\t\t\t<meta name=\"twitter:card\" content=\"summary\" />\n\t\t\t<meta name=\"twitter:creator\" content={site.siteMetadata.author} />\n\t\t\t{/* TODO: Update properties to include:\n\n\t\t<meta name=\"image\" content={seo.image} />\n\t\t<meta name=\"twitter:url\" content={seo.url} />\n\t\t<meta name=\"twitter:image\" content={seo.image} />\n\n\t\t*/}\n\t\t\t{children}\n\t\t</>\n\t);\n}\n\nexport default SEO;\n","import AutoLink, {ExternalLink} from '../components/auto-link';\nimport '../components/content-node.css';\nimport SEO from '../components/seo';\nimport './blog-list.css';\nimport './post.css';\nimport {Link, graphql} from 'gatsby';\nimport React from 'react';\n\nconst urlFrom = page => `/blog${page === 1 ? '' : `/${page}`}`;\n\nexport function Head(props) {\n\treturn <SEO {...props} title=\"All posts\" />;\n}\n\n// TODO(riley): Style with same stylesheet as blog posts.\nconst BlogList = ({data, pageContext: {currentPage, numPages}}) => {\n\t// TODO(riley): Unfortunate that we're re-sorting this client-side instead\n\t//              of collecting + sorting it with GraphQL.\n\tconst posts = [\n\t\t...data.allMdx.nodes,\n\t\t...data.allCombinedProjectsJson.nodes,\n\t].sort(\n\t\t(a, b) =>\n\t\t\tnew Date(b.date || b.fields.date) -\n\t\t\tnew Date(a.date || a.fields.date)\n\t);\n\n\tconst isFirst = currentPage === 1;\n\tconst isLast = currentPage === numPages;\n\tconst prevPage = !isFirst && urlFrom(currentPage - 1);\n\tconst nextPage = !isLast && urlFrom(currentPage + 1);\n\tconst nearbyPages = Array.from({length: numPages}, (_, i) => i + 1)\n\t\t.splice(Math.min(Math.max(0, currentPage - 3), numPages - 5), 5)\n\t\t.map(page => (\n\t\t\t<Link\n\t\t\t\tkey={page}\n\t\t\t\tto={urlFrom(page)}\n\t\t\t\tclassName={page === currentPage ? 'current-page' : ''}\n\t\t\t>\n\t\t\t\t{page}\n\t\t\t</Link>\n\t\t));\n\n\treturn (\n\t\t<>\n\t\t\t<main className=\"blog-list\">\n\t\t\t\t<ul className=\"blog-posts\">\n\t\t\t\t\t{posts.map(post => {\n\t\t\t\t\t\tconst uid = post.uid || post.fields?.uid;\n\t\t\t\t\t\tconst title = post.title || post.fields?.title;\n\t\t\t\t\t\tconst link = post.link || post.fields?.slug;\n\t\t\t\t\t\tconst date = post.date || post.fields?.date;\n\t\t\t\t\t\tconst {repo} = post;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"blog-post content-node\" key={uid}>\n\t\t\t\t\t\t\t\t<article className=\"blog-post-content\">\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t\t\t<AutoLink to={link}>\n\t\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t\t</AutoLink>\n\t\t\t\t\t\t\t\t\t\t</h1>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"subheading\">\n\t\t\t\t\t\t\t\t\t\t\t<time dateTime={date}>\n\t\t\t\t\t\t\t\t\t\t\t\t{date.replace(/-/g, '.')}\n\t\t\t\t\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t\t\t\t\t{repo && (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t• From repository{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`https://github.com/${repo}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{repo}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t<section\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tpost.more ? 'excerpt' : null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: post.description,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{post.more && (\n\t\t\t\t\t\t\t\t\t\t<p className=\"continue-reading\">\n\t\t\t\t\t\t\t\t\t\t\t<AutoLink to={link}>\n\t\t\t\t\t\t\t\t\t\t\t\tContinue reading\n\t\t\t\t\t\t\t\t\t\t\t</AutoLink>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t{/* TODO(riley): Consider replacing arrows with - and + in final design. */}\n\t\t\t\t<div className=\"page-navigation\">\n\t\t\t\t\t{!isFirst && (\n\t\t\t\t\t\t<Link to={prevPage} rel=\"prev\">\n\t\t\t\t\t\t\t⬅&#xFE0E;\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t\t{nearbyPages}\n\t\t\t\t\t{!isLast && (\n\t\t\t\t\t\t<Link to={nextPage} rel=\"next\">\n\t\t\t\t\t\t\t➡&#xFE0E;\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</>\n\t);\n};\n\n// TODO(riley): Standardize this format.\nexport const blogListQuery = graphql`query blogListQuery($internalLimit: Int!, $internalSkip: Int!, $externalLimit: Int!, $externalSkip: Int!) {\n\tallMdx(\n\t\tfilter: {internal: {contentFilePath: {regex: \"//data/markdown/posts/.*\\\\.mdx?$/\"}}}\n\t\tsort: {fields: {date: DESC}}\n\t\tlimit: $internalLimit\n\t\tskip: $internalSkip\n\t) {\n\t\tnodes {\n\t\t\tdescription\n\t\t\tmore\n\t\t\tfrontmatter {\n\t\t\t\tlayout\n\t\t\t\ttags\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tuid\n\t\t\t\tslug\n\t\t\t\ttitle\n\t\t\t\tdate(formatString: \"YYYY-MM-DD\")\n\t\t\t}\n\t\t}\n\t}\n\tallCombinedProjectsJson(\n\t\tfilter: {type: {in: [\"tumblr\", \"commit\"]}}\n\t\tsort: [{date: DESC}, {title: ASC}]\n\t\tlimit: $externalLimit\n\t\tskip: $externalSkip\n\t) {\n\t\tnodes {\n\t\t\tuid\n\t\t\ttitle\n\t\t\tdate\n\t\t\tlink\n\t\t\trepo\n\t\t\tdescription\n\t\t\tmore\n\t\t}\n\t}\n}`;\n\nexport default BlogList;\n"],"names":["description","pageTitle","title","children","site","useStaticQuery","siteMetadata","titlePostfix","metaTitle","metaDescription","name","content","author","urlFrom","page","Head","props","data","pageContext","currentPage","numPages","posts","allMdx","nodes","allCombinedProjectsJson","sort","a","b","Date","date","fields","isFirst","isLast","prevPage","nextPage","nearbyPages","Array","from","length","_","i","splice","Math","min","max","map","Link","key","to","className","post","uid","link","slug","repo","dateTime","replace","more","dangerouslySetInnerHTML","__html","rel"],"sourceRoot":""}