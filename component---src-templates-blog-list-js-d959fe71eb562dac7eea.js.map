{"version":3,"sources":["webpack:///./src/templates/blog-list.js"],"names":["urlFrom","page","BlogList","data","pageContext","currentPage","numPages","posts","allMdx","edges","map","node","allCombinedProjectsJson","nodes","sort","a","b","Date","date","fields","isFirst","isLast","prevPage","nextPage","nearbyPages","Array","from","length","_","i","splice","Math","min","max","key","to","className","title","post","uid","link","slug","repo","dateTime","replace","more","dangerouslySetInnerHTML","__html","description","rel"],"mappings":"8IAAA,sGAQMA,EAAU,SAAAC,GAAI,eAAqB,IAATA,EAAa,GAAb,IAAsBA,IAgKvCC,UA7JE,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,KAAgD,IAA1CC,YAAcC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAG7CC,EAAQ,IACVJ,EAAKK,OAAOC,MAAMC,KAAI,qBAAEC,WACxBR,EAAKS,wBAAwBC,OAC/BC,MACD,SAACC,EAAGC,GAAJ,OACC,IAAIC,KAAKD,EAAEE,MAAQF,EAAEG,OAAOD,MAC5B,IAAID,KAAKF,EAAEG,MAAQH,EAAEI,OAAOD,SAGxBE,EAA0B,IAAhBf,EACVgB,EAAShB,IAAgBC,EACzBgB,GAAYF,GAAWpB,EAAQK,EAAc,GAC7CkB,GAAYF,GAAUrB,EAAQK,EAAc,GAC5CmB,EAAcC,MAAMC,KAAK,CAACC,OAAQrB,IAAW,SAACsB,EAAGC,GAAJ,OAAUA,EAAI,KAC/DC,OAAOC,KAAKC,IAAID,KAAKE,IAAI,EAAG5B,EAAc,GAAIC,EAAW,GAAI,GAC7DI,KAAI,SAAAT,GAAI,OACR,kBAAC,OAAD,CACCiC,IAAKjC,EACLkC,GAAInC,EAAQC,GACZmC,UAAWnC,IAASI,EAAc,eAAiB,IAElDJ,MAIJ,OACC,oCACC,kBAAC,IAAD,CAAKoC,MAAM,cACX,0BAAMD,UAAU,aACf,wBAAIA,UAAU,cACZ7B,EAAMG,KAAI,SAAA4B,GAAS,IAAD,QACZC,EAAMD,EAAKC,MAAL,UAAYD,EAAKnB,cAAjB,aAAY,EAAaoB,KAC/BF,EAAQC,EAAKD,QAAL,UAAcC,EAAKnB,cAAnB,aAAc,EAAakB,OACnCG,EAAOF,EAAKE,OAAL,UAAaF,EAAKnB,cAAlB,aAAa,EAAasB,MACjCvB,EAAOoB,EAAKpB,OAAL,UAAaoB,EAAKnB,cAAlB,aAAa,EAAaD,MAChCwB,EAAQJ,EAARI,KAEP,OACC,wBAAIN,UAAU,yBAAyBF,IAAKK,GAC3C,6BAASH,UAAU,qBAClB,gCACC,4BACC,kBAAC,IAAD,CAAUD,GAAIK,GACZH,IAIH,yBAAKD,UAAU,cACd,0BAAMO,SAAUzB,GACdA,EAAK0B,QAAQ,KAAM,MAEpBF,GACA,oCACE,IADF,oBAEmB,IAClB,kBAAC,IAAD,CACCP,GAAE,sBAAwBO,GAEzBA,MAMN,6BACCN,UACCE,EAAKO,KAAO,UAAY,KAEzBC,wBAAyB,CACxBC,OAAQT,EAAKU,eAGdV,EAAKO,MACL,uBAAGT,UAAU,oBACZ,kBAAC,IAAD,CAAUD,GAAIK,GAAd,2BAWP,yBAAKJ,UAAU,oBACZhB,GACD,kBAAC,OAAD,CAAMe,GAAIb,EAAU2B,IAAI,QAAxB,MAIAzB,GACCH,GACD,kBAAC,OAAD,CAAMc,GAAIZ,EAAU0B,IAAI,QAAxB,W","file":"component---src-templates-blog-list-js-d959fe71eb562dac7eea.js","sourcesContent":["import AutoLink, {ExternalLink} from '../components/auto-link';\nimport '../components/content-node.css';\nimport SEO from '../components/seo';\nimport './blog-list.css';\nimport './post.css';\nimport {Link, graphql} from 'gatsby';\nimport React from 'react';\n\nconst urlFrom = page => `/blog${page === 1 ? '' : `/${page}`}`;\n\n// TODO(riley): Style with same stylesheet as blog posts.\nconst BlogList = ({data, pageContext: {currentPage, numPages}}) => {\n\t// TODO(riley): Unfortunate that we're re-sorting this client-side instead\n\t//              of collecting + sorting it with GraphQL.\n\tconst posts = [\n\t\t...data.allMdx.edges.map(({node}) => node),\n\t\t...data.allCombinedProjectsJson.nodes,\n\t].sort(\n\t\t(a, b) =>\n\t\t\tnew Date(b.date || b.fields.date) -\n\t\t\tnew Date(a.date || a.fields.date)\n\t);\n\n\tconst isFirst = currentPage === 1;\n\tconst isLast = currentPage === numPages;\n\tconst prevPage = !isFirst && urlFrom(currentPage - 1);\n\tconst nextPage = !isLast && urlFrom(currentPage + 1);\n\tconst nearbyPages = Array.from({length: numPages}, (_, i) => i + 1)\n\t\t.splice(Math.min(Math.max(0, currentPage - 3), numPages - 5), 5)\n\t\t.map(page => (\n\t\t\t<Link\n\t\t\t\tkey={page}\n\t\t\t\tto={urlFrom(page)}\n\t\t\t\tclassName={page === currentPage ? 'current-page' : ''}\n\t\t\t>\n\t\t\t\t{page}\n\t\t\t</Link>\n\t\t));\n\n\treturn (\n\t\t<>\n\t\t\t<SEO title=\"All posts\" />\n\t\t\t<main className=\"blog-list\">\n\t\t\t\t<ul className=\"blog-posts\">\n\t\t\t\t\t{posts.map(post => {\n\t\t\t\t\t\tconst uid = post.uid || post.fields?.uid;\n\t\t\t\t\t\tconst title = post.title || post.fields?.title;\n\t\t\t\t\t\tconst link = post.link || post.fields?.slug;\n\t\t\t\t\t\tconst date = post.date || post.fields?.date;\n\t\t\t\t\t\tconst {repo} = post;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"blog-post content-node\" key={uid}>\n\t\t\t\t\t\t\t\t<article className=\"blog-post-content\">\n\t\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t\t\t<AutoLink to={link}>\n\t\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t\t</AutoLink>\n\t\t\t\t\t\t\t\t\t\t</h1>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"subheading\">\n\t\t\t\t\t\t\t\t\t\t\t<time dateTime={date}>\n\t\t\t\t\t\t\t\t\t\t\t\t{date.replace(/-/g, '.')}\n\t\t\t\t\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t\t\t\t\t{repo && (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t• From repository{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`https://github.com/${repo}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{repo}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t\t<section\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tpost.more ? 'excerpt' : null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: post.description,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{post.more && (\n\t\t\t\t\t\t\t\t\t\t<p className=\"continue-reading\">\n\t\t\t\t\t\t\t\t\t\t\t<AutoLink to={link}>\n\t\t\t\t\t\t\t\t\t\t\t\tContinue reading\n\t\t\t\t\t\t\t\t\t\t\t</AutoLink>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t{/* TODO(riley): Consider replacing arrows with - and + in final design. */}\n\t\t\t\t<div className=\"page-navigation\">\n\t\t\t\t\t{!isFirst && (\n\t\t\t\t\t\t<Link to={prevPage} rel=\"prev\">\n\t\t\t\t\t\t\t⬅&#xFE0E;\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t\t{nearbyPages}\n\t\t\t\t\t{!isLast && (\n\t\t\t\t\t\t<Link to={nextPage} rel=\"next\">\n\t\t\t\t\t\t\t➡&#xFE0E;\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</>\n\t);\n};\n\n// TODO(riley): Standardize this format.\nexport const blogListQuery = graphql`\n\tquery blogListQuery(\n\t\t$internalLimit: Int!\n\t\t$internalSkip: Int!\n\t\t$externalLimit: Int!\n\t\t$externalSkip: Int!\n\t) {\n\t\tallMdx(\n\t\t\tfilter: {fileAbsolutePath: {regex: \"//posts/.*.mdx?$/\"}}\n\t\t\tsort: {fields: [fields___date], order: DESC}\n\t\t\tlimit: $internalLimit\n\t\t\tskip: $internalSkip\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tdescription\n\t\t\t\t\tmore\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tlayout\n\t\t\t\t\t\ttags\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tuid\n\t\t\t\t\t\tslug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate(formatString: \"YYYY-MM-DD\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tallCombinedProjectsJson(\n\t\t\tfilter: {type: {in: [\"tumblr\", \"commit\"]}}\n\t\t\tsort: {fields: [date, title], order: DESC}\n\t\t\tlimit: $externalLimit\n\t\t\tskip: $externalSkip\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tuid\n\t\t\t\ttitle\n\t\t\t\tdate\n\t\t\t\tlink\n\t\t\t\trepo\n\t\t\t\tdescription\n\t\t\t\tmore\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default BlogList;\n"],"sourceRoot":""}