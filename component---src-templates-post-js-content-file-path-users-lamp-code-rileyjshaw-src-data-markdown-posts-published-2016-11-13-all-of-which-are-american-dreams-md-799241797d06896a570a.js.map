{"version":3,"file":"component---src-templates-post-js-content-file-path-users-lamp-code-rileyjshaw-src-data-markdown-posts-published-2016-11-13-all-of-which-are-american-dreams-md-799241797d06896a570a.js","mappings":"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","sources":["webpack://rileyjshaw.com/./src/data/markdown/posts/published/2016-11-13-all-of-which-are-american-dreams.md","webpack://rileyjshaw.com/./src/templates/post.js","webpack://rileyjshaw.com/./src/components/seo.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    div: \"div\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Title lifted from \", React.createElement(\"a\", {\n    href: \"https://youtu.be/4smim2MNvF8\",\n    rel: \"noopener noreferrer\",\n    target: \"_blank\"\n  }, \"“Know Your Enemy”\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"The results of the US presidential election last Tuesday shocked me. I checked Twitter to find that my entire feed felt the same. Again. Oops, I created a comfortable echo-chamber for myself.\"), \"\\n\", React.createElement(_components.p, null, \"Social news algorithms have been under intense scrutiny over the past week. I wanted to see what other people’s social media bubbles looked like, so I wrote a little shell script[^1].\"), \"\\n\", React.createElement(_components.p, null, \"I’m not interested in building empathy for racists. I \", React.createElement(_components.em, null, \"am\"), \" interested in improving my own awareness. This tool displaces me from the narrative I chose and delivers me from opinions I agree with. It’s helped me realize just how powerful a curated social feed can be as a tool of persuasion. Also, wow. People who follow Glenn Beck seem to follow a \", React.createElement(_components.em, null, \"lot\"), \" of porn. Who knew?\"), \"\\n\", React.createElement(_components.p, null, \"If you want to peer into someone else’s Twitter feed, the following might help[^2]:\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token shebang important\\\">#!/bin/bash</span>\\n\\n<span class=\\\"token comment\\\"># Create a private Twitter list out of someone else’s feed so you can read it.</span>\\n<span class=\\\"token comment\\\"># The name “ditter” is like “ditto” plus “Twitter” ha ha get it?</span>\\n<span class=\\\"token comment\\\">#</span>\\n<span class=\\\"token comment\\\"># Requires Python, GNU coreutils, and https://github.com/sferik/t</span>\\n<span class=\\\"token comment\\\">#</span>\\n<span class=\\\"token comment\\\"># Installation:</span>\\n<span class=\\\"token comment\\\">#</span>\\n<span class=\\\"token comment\\\">#     $ chmod 777 ditter.sh &amp;&amp; mv ditter.sh /usr/local/bin/ditter</span>\\n<span class=\\\"token comment\\\">#</span>\\n<span class=\\\"token comment\\\"># Usage:</span>\\n<span class=\\\"token comment\\\">#</span>\\n<span class=\\\"token comment\\\">#     $ ditter &lt;username> [&lt;list_name>]</span>\\n\\n<span class=\\\"token assign-left variable\\\">THEIR_USERNAME</span><span class=\\\"token operator\\\">=</span><span class=\\\"token variable\\\">${1}</span>\\n<span class=\\\"token assign-left variable\\\">MY_USERNAME</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>t <span class=\\\"token function\\\">whoami</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">grep</span> <span class=\\\"token string\\\">'^Screen name'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">grep</span> <span class=\\\"token parameter variable\\\">-o</span> <span class=\\\"token string\\\">'[^@]*$'</span><span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n<span class=\\\"token assign-left variable\\\">LIST_NAME</span><span class=\\\"token operator\\\">=</span><span class=\\\"token variable\\\">${2<span class=\\\"token operator\\\">:-</span>\\\"$THEIR_USERNAME-feed\\\"}</span>\\n\\nt list create <span class=\\\"token parameter variable\\\">--private</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$LIST_NAME</span>\\\"</span>\\n\\n<span class=\\\"token comment\\\"># I aliased GNU split to “gsplit” on my Mac. You may need to change this.</span>\\nt followings <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$THEIR_USERNAME</span>\\\"</span> <span class=\\\"token punctuation\\\">\\\\</span>\\n  <span class=\\\"token operator\\\">|</span> gsplit <span class=\\\"token parameter variable\\\">-l</span> <span class=\\\"token number\\\">100</span> <span class=\\\"token parameter variable\\\">--filter</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"xargs t list add <span class=\\\"token entity\\\" title=\\\"\\\\&quot;\\\">\\\\\\\"</span><span class=\\\"token variable\\\">$LIST_NAME</span><span class=\\\"token entity\\\" title=\\\"\\\\&quot;\\\">\\\\\\\"</span>\\\"</span>\\n\\npython <span class=\\\"token parameter variable\\\">-mwebbrowser</span> <span class=\\\"token string\\\">\\\"https://twitter.com/<span class=\\\"token variable\\\">$MY_USERNAME</span>/lists/<span class=\\\"token variable\\\">$LIST_NAME</span>\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"It’s not pretty, but it works for me[^3]. Here are some usage examples:\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># View the feed of a random person who follows the “FOX Files”.</span>\\n<span class=\\\"token comment\\\"># Warning: You’re about to view a complete stranger’s feed. NSFW.</span>\\nt followers foxfilesfnc <span class=\\\"token operator\\\">|</span> gshuf <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">head</span> <span class=\\\"token parameter variable\\\">-1</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">xargs</span> ditter\\n\\n<span class=\\\"token comment\\\"># View the feed of the last person to use the Make America Great Again hashtag.</span>\\nt search all <span class=\\\"token string\\\">\\\"#maga\\\"</span> <span class=\\\"token parameter variable\\\">-cn</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">tail</span> <span class=\\\"token parameter variable\\\">-1</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">cut</span> -d, <span class=\\\"token parameter variable\\\">-f3</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">xargs</span> ditter</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"I’m in the habit of quietly throwing projects like this onto my \", React.createElement(_components.a, {\n    href: \"/lab\"\n  }, \"lab\"), \" page, but enough people have expressed frustration in the past week to make this share-worthy. Hope it helps!\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"footnotes\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#footnotes\",\n    \"aria-label\": \"footnotes permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Footnotes\"), \"\\n\", React.createElement(_components.p, null, \"[^1]: Twitter used to actually offer this as part of their official client. They removed the functionality in 2013.\\n[^2]: MacOS comes loaded with BSD utils, so I grabbed the GNU equivalents with \", React.createElement(\"code\", {\n    className: \"language-javascript\"\n  }, \"brew install coreutils\"), \". That’s what \", React.createElement(\"code\", {\n    className: \"language-bash\"\n  }, \"gsplit\"), \" and \", React.createElement(\"code\", {\n    className: \"language-bash\"\n  }, \"gshuf\"), \" are.\\n[^3]: Restrictions apply:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Twitter has \", React.createElement(_components.a, {\n    href: \"https://twittercommunity.com/t/nondeterminstic-behavior-for-lists-members-create-all/53640/22\"\n  }, \"a longstanding issue\"), \" where bulk lists created through the API might be missing members. It’s nothing a little \", React.createElement(\"code\", {\n    className: \"language-bash\"\n  }, \"while\"), \" loop can’t fix, and even an incomplete list can be enough.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(\"code\", {\n    className: \"language-bash\"\n  }, \"t\"), \" has \", React.createElement(\"a\", {\n    href: \"https://github.com/sferik/t/issues/263\",\n    rel: \"noopener noreferrer\",\n    target: \"_blank\"\n  }, \"its own longstanding issue\"), \": it runs up against rate limits if you use it to fetch a large list of followers. This one probably requires a patch or PR.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/lamp/code/rileyjshaw/src/data/markdown/posts/published/2016-11-13-all-of-which-are-american-dreams.md\";\nimport SEO from '../components/seo';\nimport './post.css';\nimport {Link, graphql} from 'gatsby';\nimport React from 'react';\nexport function Head({data, ...props}) {\n  return React.createElement(SEO, Object.assign({}, props, {\n    title: data.mdx.fields.title\n  }));\n}\nfunction Template({data, children}) {\n  const {mdx} = data;\n  const {fields} = mdx;\n  return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n    className: \"top-nav\",\n    role: \"banner\"\n  }, React.createElement(\"nav\", {\n    role: \"navigation\"\n  }, React.createElement(\"h1\", null, React.createElement(Link, {\n    to: \"/\"\n  }, \"Riley Shaw\")), ' ', \" / \", React.createElement(Link, {\n    to: \"/blog\"\n  }, \"Blog\"), \" / \", fields.title)), React.createElement(\"main\", null, React.createElement(\"article\", {\n    className: \"blog-post-content\",\n    role: \"article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", null, fields.title), React.createElement(\"div\", {\n    className: \"subheading\"\n  }, React.createElement(\"time\", null, \"Posted \", fields.date))), React.createElement(\"div\", {\n    className: \"blog-post-markdown\"\n  }, children))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n\tquery PostTemplate($id: String!) {\n\t\tmdx(id: {eq: $id}) {\n\t\t\tfields {\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\tslug\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {useStaticQuery, graphql} from 'gatsby';\nimport React from 'react';\n\nfunction SEO({description = '', title: pageTitle, children}) {\n\tconst {site} = useStaticQuery(\n\t\tgraphql`\n\t\t\tquery {\n\t\t\t\tsite {\n\t\t\t\t\tsiteMetadata {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\ttitlePostfix\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tauthor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t);\n\n\tconst title = `${pageTitle || site.siteMetadata.title} · ${\n\t\tsite.siteMetadata.titlePostfix\n\t}`;\n\tconst metaTitle = `${pageTitle ? `${pageTitle} · ` : ''}${\n\t\tsite.siteMetadata.title\n\t}`;\n\tconst metaDescription = description || site.siteMetadata.description;\n\n\treturn (\n\t\t<>\n\t\t\t<title>{title}</title>\n\t\t\t<meta name=\"description\" content={metaDescription} />\n\t\t\t<meta name=\"og:title\" content={metaTitle} />\n\t\t\t<meta name=\"og:description\" content={metaDescription} />\n\t\t\t<meta name=\"og:type\" content=\"website\" />\n\t\t\t<meta name=\"twitter:title\" content={metaTitle} />\n\t\t\t<meta name=\"twitter:description\" content={metaDescription} />\n\t\t\t<meta name=\"twitter:card\" content=\"summary\" />\n\t\t\t<meta name=\"twitter:creator\" content={site.siteMetadata.author} />\n\t\t\t{/* TODO: Update properties to include:\n\n\t\t<meta name=\"image\" content={seo.image} />\n\t\t<meta name=\"twitter:url\" content={seo.url} />\n\t\t<meta name=\"twitter:image\" content={seo.image} />\n\n\t\t*/}\n\t\t\t{children}\n\t\t</>\n\t);\n}\n\nexport default SEO;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","div","a","h2","ul","li","_provideComponents","components","React","href","rel","target","dangerouslySetInnerHTML","__html","id","style","position","className","MDXLayout","wrapper","Head","data","SEO","title","mdx","fields","Template","children","role","Link","to","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","description","pageTitle","site","useStaticQuery","siteMetadata","titlePostfix","metaTitle","metaDescription","name","content","author"],"sourceRoot":""}