{"componentChunkName":"component---src-templates-blog-list-js","path":"/blog/13","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"3895e195-3fed-592a-bf97-2a838f31a04f","description":"<p>Guess what? Chemistry isn't the only high school course built on a <em>foundation of lies</em>. In art class we're taught that the primary colors are red, yellow, and blue. Not only is it wrong to say that there are three true primary colors, but if we <em>were</em> to pick three, we'd pick a better combination.</p><h2 id=\"let-there-be-light\" style=\"position:relative;\">Let there be light</h2><p>A band of wavelengths in the electromagnetic spectrum between 390nm and 700nm makes up the <em>visible spectrum of light</em>; we perceive different wavelengths within this spectrum as colors. <em>White light</em> is a combination of all wavelengths in the visible spectrum.</p><figure>\n  \n  <figcaption>The visible spectrum of light</figcaption>\n</figure><p>Humans are <a href=\"http://en.wikipedia.org/wiki/Trichromacy\" target=\"_blank\" rel=\"noopener noreferrer\">trichromats</a>, which means that we have three types of color receptors (<em>cone cells</em>). Our short-, mid-, and long-wavelength sensing cones sense blue, green, and red respectively; this brings us to the <em>first</em> set of important primary colors.</p>","more":true,"frontmatter":{"layout":"post","tags":["color","rant"]},"fields":{"uid":"POST_YOUR_ART_TEACHER_LIED","slug":"/blog/your-art-teacher-lied","title":"Your art teacher lied","date":"2014-03-23"}}},{"node":{"id":"9ceec1d7-5249-59ef-9d84-6ff72f7e8d6e","description":"<p>Today I wanted to see what the average frequency of a song would sound like with no spectrum analysis or separation. I had a hunch that it would end up sounding like garbage, and I was totally right.</p><p>If you took the average color of a beautiful painting, it would likely turn out poo brown. Today, I created the audio equivalent:</p><p><a href=\"https://youtu.be/rlyYQlPrdac\" target=\"_blank\" rel=\"noopener noreferrer\">Blazo's Misty Sapphire</a>:</p><p><a href=\"https://youtu.be/E_jwv2QMtAo\" target=\"_blank\" rel=\"noopener noreferrer\">Steve Reich's Music for 18 Musicians</a>:</p><p><a href=\"https://youtu.be/f-6H8NsfPNQ\" target=\"_blank\" rel=\"noopener noreferrer\">Kill the Noise remix of KOAN Sound's Talk Box</a>:</p><p>These first tones were generated using the powerful, free, cross-platform audio software <a href=\"http://audacity.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">Audacity</a> and a cool lisp-y language called <a href=\"https://en.wikipedia.org/wiki/Nyquist_(programming_language)\" target=\"_blank\" rel=\"noopener noreferrer\">Nyquist</a>. Since Audacity lets you run Nyquist scripts on hand-selected audio segments, this first bit was quick and dirty:</p><ol>\n<li>Drag the desired audio file into <a href=\"http://audacity.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">Audacity</a></li>\n<li>On the left side of the window, click the arrow<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup> beside the track's name</li>\n<li>Select \"Split Stereo to Mono\" from the resulting dropdown</li>\n<li>Double-click the top track to select it</li>\n<li>In the menu bar, click Effect &gt; Nyquist Prompt...</li>\n<li>\n<p>Enter the following into the prompt:</p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre class=\"language-lisp\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token car\">setf</span> f0 <span class=\"token punctuation\">(</span><span class=\"token car\">aref</span> <span class=\"token punctuation\">(</span><span class=\"token car\">yin</span> s <span class=\"token number\">33</span> <span class=\"token number\">93</span> <span class=\"token number\">4400</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token car\">setf</span> fl <span class=\"token punctuation\">(</span><span class=\"token car\">truncate</span> <span class=\"token punctuation\">(</span><span class=\"token car\">snd-length</span> f0 ny<span class=\"token lisp-property property\">:all</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token car\">setf</span> mean-f0 <span class=\"token punctuation\">(</span><span class=\"token car\">snd-fetch</span> <span class=\"token punctuation\">(</span><span class=\"token car\">snd-avg</span> f0 fl fl op-average<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token car\">format</span> <span class=\"token boolean\">nil</span> <span class=\"token string\">\"Mean Fundamental Frequency:~%~a ~~~a\"</span>\n    <span class=\"token punctuation\">(</span><span class=\"token car\">step-to-hz</span> mean-f0<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span><span class=\"token car\">nth</span> <span class=\"token punctuation\">(</span><span class=\"token car\">round</span> mean-f0<span class=\"token punctuation\">)</span> nyq<span class=\"token lisp-property property\">:pitch-names</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>If you're using a recent version of Audacity, check the \"Use legacy (version 3) syntax\" box at the top of the prompt<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup></li>\n<li>Let it run and <strong>remember the output frequency</strong></li>\n<li>Keeping the track selected, click Generate &gt; Tone... in the top menu</li>\n<li>Input the frequency that was generated in step 7</li>\n<li>Repeat 4 - 9 on the bottom track</li>\n<li>Click the arrow again and select \"Make Stereo Track\"</li>\n</ol>","more":true,"frontmatter":{"layout":"post","tags":["audio","python","lisp","math"]},"fields":{"uid":"POST_TAKING_THE_AVERAGE_TONE","slug":"/blog/taking-the-average-tone","title":"Taking the average tone","date":"2014-03-17"}}},{"node":{"id":"734261de-249b-5582-9cc4-465070fad3be","description":"<p>A few days ago a fellow Hacker-Schooler proposed Iron Blogger to our batch. The rules are simple:</p><ol>\n<li>Get a blog</li>\n<li>Write on said blog at least once a week</li>\n<li>Failing completion of #2, be humiliated and ostracized. Also, forfeit $5.</li>\n</ol><p>I don't think that we've decided on where the money is going yet; I'm hoping for giant Iron Blogger belt buckles.</p><h2 id=\"of-course-ill-do-that\" style=\"position:relative;\">Of course I'll do that!</h2><p>At the start of the batch I vowed to avoid any projects focusing on front-end design work, including a personal site.</p><p>Oops.</p><p>I also vowed to try my hand at blogging; breaking one vow to fulfill the other can't be that bad, right? I made an addendum, stating that I could spend exactly <strong>two</strong> days making a site... and here we are!</p><h2 id=\"it-had-to-happen\" style=\"position:relative;\">It had to happen</h2><p>Getting rid of my old site was increasingly pressing, and I'm relieved to have finally made the move. I threw my last one together during exam season a few summers ago to send out to employers, then promptly lost access to the server that it was on. I've done a lot since then but The Site Remained The Same, showcasing a bunch of work that I'd outgrown. Going through Google Analytics and seeing people flicking through my old portfolio made me really uncomfortable.</p>","more":true,"frontmatter":{"layout":"post","tags":["meta","build","web","hackerschool"]},"fields":{"uid":"POST_IRON_BLOGGER","slug":"/blog/iron-blogger","title":"Iron blogger","date":"2014-03-10"}}},{"node":{"id":"298c2312-2a3c-59ce-acca-0d4b4929dd68","description":"<p>I started a project called <a href=\"https://github.com/rileyjshaw/terra\" target=\"_blank\" rel=\"noopener noreferrer\">Terra</a> a few weeks ago. I added a conditional to <code class=\"language-javascript\">init()</code> that would complain if I'd already defined the library:</p><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">exports</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>exports<span class=\"token punctuation\">.</span>terra<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// do initialization things</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token string\">\"You've already defined terra. Pay attention..\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// more stuff happens...</span>\n\n\t<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div><p>I'll admit that this is a really ugly pattern for handling namespaces, but <a href=\"#what-does-it-all-mean\">even common patterns are affected by this</a>. Let me take you on a journey through <strong>the biggest browser <a href=\"https://www.destroyallsoftware.com/talks/wat\" target=\"_blank\" rel=\"noopener noreferrer\">wat</a> I've ever seen.</strong></p><p>I ran the code and the console yelled at me.</p><p><code class=\"error\">\"You've already defined terra. Pay attention..\"</code></p><p>Strange... but maybe I forgot a <code class=\"language-javascript\">var</code> somewhere. I set some breakpoints in DevTools and stepped through the execution.</p>","more":true,"frontmatter":{"layout":"post","tags":["web","javascript","rant"]},"fields":{"uid":"POST_WINDOW.CLUSTERFUCK","slug":"/blog/window.clusterfuck","title":"window.clusterFuck","date":"2014-03-10"}}}]},"allCombinedProjectsJson":{"nodes":[]}},"pageContext":{"internalLimit":4,"internalSkip":19,"externalLimit":1,"externalSkip":41,"numPages":13,"currentPage":13}}}