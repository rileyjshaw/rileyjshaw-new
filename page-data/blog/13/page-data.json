{"componentChunkName":"component---src-templates-blog-list-js","path":"/blog/13/","result":{"data":{"allMdx":{"edges":[]},"allCombinedProjectsJson":{"nodes":[{"uid":"COMMIT_7E2CA523403D8403FAACC6D6DB0CF49D07A9C992","title":"Add Titania style","date":"2016-01-06","link":"https://rileyjshaw.commit--blog.com/rileyjshaw/LineMenuStyles/7e2ca523403d8403faacc6d6db0cf49d07a9c992","repo":"rileyjshaw/LineMenuStyles","description":"<p>Tested on latest IE, Firefox, Chrome, Safari.</p><p>Screenshot:</p><p>It's responsive, too!</p>","more":false},{"uid":"COMMIT_E2592C54BF110E35957A6C093A79999C3A1047BB","title":"Rewrite extension and update version to 3.0.0","date":"2015-12-29","link":"https://rileyjshaw.commit--blog.com/rileyjshaw/dark-theme-everywhere/e2592c54bf110e35957a6c093a79999c3a1047bb","repo":"rileyjshaw/dark-theme-everywhere","description":"<p>Initially, this extension grabbed the content of a CSS file with an XMLHttpRequest and injected it into the bottom of the page. This had a few advantages:</p><ol>\n<li>Text content could be easy processed and manipulated (admittedly, I wasn't using this for anything).</li>\n<li>Toggling styles was as easy as adding and removing a &lt;style&gt; element from &lt;body&gt;.</li>\n<li>In theory, this strategy would beat out almost every other style rule (some inline styles excepted). <a href=\"http://www.w3.org/TR/CSS2/cascade.html#cascading-order\" rel=\"noopener noreferrer\" target=\"_blank\">User <code>!important</code> rules used to override author <code>!important</code> rules</a>, but Chrome <a href=\"https://src.chromium.org/viewvc/chrome?revision=234007&amp;view=revision\" rel=\"noopener noreferrer\" target=\"_blank\">no-longer does user stylesheets</a>. I figured an aggressively <code>!important</code> author stylesheet added at the very bottom of the page was pretty solid.</li>\n</ol><p>After some testing, I realized that <code>!important</code> styles from <code>content_scripts</code> injection (along with chrome.tabs.insertCSS) actually <em>do</em> take precedence over author stylesheets. Since 3) was the key consideration for my original decision, I re-wrote the extension to inject a stylesheet from <code>content_scripts</code>.</p>","more":true},{"uid":"COMMIT_0167A91073922AC7B5018C6A73C894853DABBA56","title":"Remove numkey layout bindings","date":"2015-12-23","link":"https://rileyjshaw.commit--blog.com/rileyjshaw/.supermac/0167a91073922ac7b5018c6a73c894853dabba56","repo":"rileyjshaw/.supermac","description":"<p>1, 2, 3, and 4 are useful for app-specific bindings and should thus be reserved.</p>","more":false}]}},"pageContext":{"internalLimit":2,"internalSkip":9,"externalLimit":3,"externalSkip":51,"numPages":16,"currentPage":13}},"staticQueryHashes":["3605882644"]}