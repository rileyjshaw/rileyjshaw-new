{"componentChunkName":"component---src-templates-blog-list-js","path":"/blog/13","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"description":"<p>From page 33 of the <a href=\"http://www.librarything.com/work/52052\" target=\"_blank\" rel=\"noopener noreferrer\">Apple II User's Guide</a>:</p><blockquote>\n<h3 id=\"accidental-reset\" style=\"position:relative;\">Accidental Reset</h3>\n<p>Sooner or later you will hit the <code class=\"language-text\">RESET</code> key when you did not intend to. It is inevitable, unless your Apple II requires you to type <code class=\"language-text\">CTRL-RESET</code> instead of just plain <code class=\"language-text\">RESET</code>. You can reduce the hazard by carefully prying off the plastic keytop, leaving just the keyswitch shaft available (Figure 2-9).</p>\n<p>You can take this one step further and make it physically harder to push down the <code class=\"language-text\">RESET</code> key. Get a small rubber washer about 3/8 inches inner diameter, 1/2 inch outer diameter, and 1/8 inch thick. Remove the <code class=\"language-text\">RESET</code> keytop as shown in Figure 2-9. Work the washer over the exposed square flange of the keyshaft as shown in Figure 2-10. Replace the keytop.</p>\n</blockquote>","more":true,"frontmatter":{"layout":"post","tags":["hardware","quote"]},"fields":{"uid":"POST_ACCIDENTAL_RESET","slug":"/blog/accidental-reset","title":"Accidental reset","date":"2014-04-14"}}},{"node":{"description":"<p>From <a href=\"https://c.learncodethehardway.org/book/introduction.html\" target=\"_blank\" rel=\"noopener noreferrer\">Learn C The Hard Way</a>:</p><blockquote>\n<p>I'm going to guess that you come from a language for weaklings. One of those \"usable\" languages that lets you get away with sloppy thinking and half-assed hackery like Python or Ruby. Or, maybe you use a language like Lisp that pretends the computer is some purely functional fantasy land with padded walls for little babies. Maybe you've learned Prolog and you think the entire world should just be a database that you walk around in looking for clues. Even worse, I'm betting you've been using an IDE, so your brain is riddled with memory holes and you can't even type out an entire function's name without hitting CTRL-SPACE every 3 characters you type.\n<cite>Zed A. Shaw</cite></p>\n</blockquote><p>Brushing up on C for <a href=\"https://github.com/adventure-db/adventure\" target=\"_blank\" rel=\"noopener noreferrer\">a project</a> that I'm working on with my friend <a href=\"https://github.com/neerajwahi/\" target=\"_blank\" rel=\"noopener noreferrer\">Neeraj</a>.</p>","more":false,"frontmatter":{"layout":"post","tags":["c","db","quote"]},"fields":{"uid":"POST_A_LANGUAGE_FOR_WEAKLINGS","slug":"/blog/a-language-for-weaklings","title":"A language for weaklings","date":"2014-04-01"}}},{"node":{"description":"<p><strong>UPDATE 2014-06-25</strong>: <em>I created a library called <a href=\"http://rileyjshaw.com/sweep/\" target=\"_blank\" rel=\"noopener noreferrer\">sweep.js</a> that addresses this problem.</em></p><p>I was recently browsing a beautiful red monochrome<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup> site. There were a few call-to-action buttons on the page that transitioned to green on hover.</p><p data-height=\"268\" data-theme-id=\"5323\" data-slug-hash=\"qgrKn\" data-default-tab=\"result\" data-user=\"rileyjshaw\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/rileyjshaw/pen/qgrKn/\">Red to green transitions are ugly</a> by Riley Shaw (<a href=\"http://codepen.io/rileyjshaw\">@rileyjshaw</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p><p>Where did that brown come from?! The initial red looks great, the final green looks great, but everything between is pretty dismal. Why is that?</p><h2 id=\"the-rgb-color-model\" style=\"position:relative;\">The RGB color model</h2><p><strong>R</strong>ed <strong>G</strong>reen and <strong>B</strong>lue are the <a href=\"/blog/your-art-teacher-lied\">three primary additive colors</a>. Your browser takes an 8-bit intensity value for each of the R, G, and B components to determine the output color. This is often represented as three two-digit hex values (for example, <span style=\"color:#ff8800\">#ff8800</span> is orange).</p>","more":true,"frontmatter":{"layout":"post","tags":["color","css","javascript","web"]},"fields":{"uid":"POST_HUE_ANGLE_TRANSITIONS","slug":"/blog/hue-angle-transitions","title":"Hue-angle Transitions","date":"2014-03-31"}}},{"node":{"description":"<p>Guess what? Chemistry isn't the only high school course built on a <em>foundation of lies</em>. In art class we're taught that the primary colors are red, yellow, and blue. Not only is it wrong to say that there are three true primary colors, but if we <em>were</em> to pick three, we'd pick a better combination.</p><h2 id=\"let-there-be-light\" style=\"position:relative;\">Let there be light</h2><p>A band of wavelengths in the electromagnetic spectrum between 390nm and 700nm makes up the <em>visible spectrum of light</em>; we perceive different wavelengths within this spectrum as colors. <em>White light</em> is a combination of all wavelengths in the visible spectrum.</p><figure>\n  \n  <figcaption>The visible spectrum of light</figcaption>\n</figure><p>Humans are <a href=\"http://en.wikipedia.org/wiki/Trichromacy\" target=\"_blank\" rel=\"noopener noreferrer\">trichromats</a>, which means that we have three types of color receptors (<em>cone cells</em>). Our short-, mid-, and long-wavelength sensing cones sense blue, green, and red respectively; this brings us to the <em>first</em> set of important primary colors.</p>","more":true,"frontmatter":{"layout":"post","tags":["color","rant"]},"fields":{"uid":"POST_YOUR_ART_TEACHER_LIED","slug":"/blog/your-art-teacher-lied","title":"Your art teacher lied","date":"2014-03-23"}}},{"node":{"description":"<p>Today I wanted to see what the average frequency of a song would sound like with no spectrum analysis or separation. I had a hunch that it would end up sounding like garbage, and I was totally right.</p><p>If you took the average color of a beautiful painting, it would likely turn out poo brown. Today, I created the audio equivalent:</p><p><a href=\"https://youtu.be/rlyYQlPrdac\" target=\"_blank\" rel=\"noopener noreferrer\">Blazo's Misty Sapphire</a>:</p><p><a href=\"https://youtu.be/E_jwv2QMtAo\" target=\"_blank\" rel=\"noopener noreferrer\">Steve Reich's Music for 18 Musicians</a>:</p><p><a href=\"https://youtu.be/f-6H8NsfPNQ\" target=\"_blank\" rel=\"noopener noreferrer\">Kill the Noise remix of KOAN Sound's Talk Box</a>:</p><p>These first tones were generated using the powerful, free, cross-platform audio software <a href=\"http://audacity.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">Audacity</a> and a cool lisp-y language called <a href=\"https://en.wikipedia.org/wiki/Nyquist_(programming_language)\" target=\"_blank\" rel=\"noopener noreferrer\">Nyquist</a>. Since Audacity lets you run Nyquist scripts on hand-selected audio segments, this first bit was quick and dirty:</p><ol>\n<li>Drag the desired audio file into <a href=\"http://audacity.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">Audacity</a></li>\n<li>On the left side of the window, click the arrow<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup> beside the track's name</li>\n<li>Select \"Split Stereo to Mono\" from the resulting dropdown</li>\n<li>Double-click the top track to select it</li>\n<li>In the menu bar, click Effect &gt; Nyquist Prompt...</li>\n<li>\n<p>Enter the following into the prompt:</p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre class=\"language-lisp\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token car\">setf</span> f0 <span class=\"token punctuation\">(</span><span class=\"token car\">aref</span> <span class=\"token punctuation\">(</span><span class=\"token car\">yin</span> s <span class=\"token number\">33</span> <span class=\"token number\">93</span> <span class=\"token number\">4400</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token car\">setf</span> fl <span class=\"token punctuation\">(</span><span class=\"token car\">truncate</span> <span class=\"token punctuation\">(</span><span class=\"token car\">snd-length</span> f0 ny<span class=\"token lisp-property property\">:all</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token car\">setf</span> mean-f0 <span class=\"token punctuation\">(</span><span class=\"token car\">snd-fetch</span> <span class=\"token punctuation\">(</span><span class=\"token car\">snd-avg</span> f0 fl fl op-average<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token car\">format</span> <span class=\"token boolean\">nil</span> <span class=\"token string\">\"Mean Fundamental Frequency:~%~a ~~~a\"</span>\n    <span class=\"token punctuation\">(</span><span class=\"token car\">step-to-hz</span> mean-f0<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span><span class=\"token car\">nth</span> <span class=\"token punctuation\">(</span><span class=\"token car\">round</span> mean-f0<span class=\"token punctuation\">)</span> nyq<span class=\"token lisp-property property\">:pitch-names</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>If you're using a recent version of Audacity, check the \"Use legacy (version 3) syntax\" box at the top of the prompt<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup></li>\n<li>Let it run and <strong>remember the output frequency</strong></li>\n<li>Keeping the track selected, click Generate &gt; Tone... in the top menu</li>\n<li>Input the frequency that was generated in step 7</li>\n<li>Repeat 4 - 9 on the bottom track</li>\n<li>Click the arrow again and select \"Make Stereo Track\"</li>\n</ol>","more":true,"frontmatter":{"layout":"post","tags":["audio","python","lisp","math"]},"fields":{"uid":"POST_TAKING_THE_AVERAGE_TONE","slug":"/blog/taking-the-average-tone","title":"Taking the average tone","date":"2014-03-17"}}}]},"allCombinedProjectsJson":{"nodes":[]}},"pageContext":{"internalLimit":5,"internalSkip":16,"externalLimit":0,"externalSkip":44,"numPages":14,"currentPage":13}}}