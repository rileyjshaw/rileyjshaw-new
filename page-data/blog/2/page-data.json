{"componentChunkName":"component---src-templates-blog-list-js","path":"/blog/2","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"67cd5054-2db8-5413-ba8b-5422225f8e67","description":"<p>I was on the CBC again! Kady Wong and I represented\n<a href=\"http://repairmatters.ca/\" target=\"_blank\" rel=\"noopener noreferrer\">Repair Matters</a> on BC Today this afternoon.</p><p><a href=\"https://www.cbc.ca/listen/live-radio/1-4-bc-today/clip/15736413-sep.-16-2019-road-safety.-diy-electronic-repairs\" target=\"_blank\" rel=\"noopener noreferrer\">You can listen to the segment here</a>. It starts at 33:30.</p>","more":false,"frontmatter":{"layout":"post","tags":["life","repair"]},"fields":{"uid":"POST_REPAIR_MATTERS_ON_CBC_RADIO","slug":"/blog/repair-matters-on-cbc-radio","title":"Repair Matters on CBC Radio","date":"2019-09-16"}}}]},"allCombinedProjectsJson":{"nodes":[{"id":"a5593a38-2f6a-5bfb-9351-577c4fd7c18b","uid":"COMMIT_F96E4148F210177757F79AA74D872EA645CD45A6","title":"Add some resources","date":"2019-09-23","link":"http://rileyjshaw.commit--blog.com/rileyjshaw/tech-ethics-yvr/f96e4148f210177757f79aa74d872ea645cd45a6","repo":"rileyjshaw/tech-ethics-yvr","description":"<p>Adds the following resources:</p>\n<ul>\n<li>\"<a href=\"https://humanetech.com/podcast/\" rel=\"noopener noreferrer\" target=\"_blank\">Your Undivided Attention</a>\" (podcast)</li>\n<li>\"<a href=\"https://www.carbonite.com/podcasts/breach\" rel=\"noopener noreferrer\" target=\"_blank\">Breach</a>\" (podcast)</li>\n<li>\"<a href=\"https://irlpodcast.org\" rel=\"noopener noreferrer\" target=\"_blank\">IRL</a>\" (podcast)</li>\n<li>\"<a href=\"https://www.bbc.co.uk/programmes/m000458m\" rel=\"noopener noreferrer\" target=\"_blank\">New Ways of Seeing</a>\" (podcast)</li>\n<li>\"<a href=\"https://stealthisshow.com\" rel=\"noopener noreferrer\" target=\"_blank\">Steal This Show</a>\" (podcast)</li>\n<li>\"<a href=\"http://www.sarawb.com/technically-wrong\" rel=\"noopener noreferrer\" target=\"_blank\">Technically Wrong</a>\" (book)</li>\n<li>\"<a href=\"https://mitpress.mit.edu/books/protocol\" rel=\"noopener noreferrer\" target=\"_blank\">Protocol</a>\" (book)</li>\n<li>\"<a href=\"https://www.penguinrandomhouse.com/books/600671/how-to-do-nothing-by-jenny-odell/9781612197494\" rel=\"noopener noreferrer\" target=\"_blank\">How to Do Nothing</a>\" (book)</li>\n</ul>","more":false},{"id":"94bf353a-428d-5f47-9a3d-3dd9263c53fe","uid":"COMMIT_5EFE71827C2575CBD09DC30669E9C1A63FC625DB","title":"Initial commit","date":"2019-09-14","link":"http://rileyjshaw.commit--blog.com/rileyjshaw/plop/5efe71827c2575cbd09dc30669e9c1a63fc625db","repo":"rileyjshaw/plop","description":"<h1>plop (working title)</h1>\n<p><em>Scriptable text expansion microtool.</em></p>\n<p><code>Status: pre-alpha / prototype / I thought of this an hour ago</code></p>\n<p><a href=\"img/hello_world.gif\" rel=\"noopener noreferrer\" target=\"_blank\"><img src=\"img/hello_world.gif\" alt=\"demo of the tool printing &quot;hello world&quot;\" style=\"max-width:100%;\"></a> <a href=\"img/beer.gif\" rel=\"noopener noreferrer\" target=\"_blank\"><img src=\"img/beer.gif\" alt=\"demo of the tool sequentially printing the song &quot;99 bottles of beer on the wall&quot;\" style=\"max-width:100%;\"></a> <a href=\"img/multiline.gif\" rel=\"noopener noreferrer\" target=\"_blank\"><img src=\"img/multiline.gif\" alt=\"demo of multiline text entry\" style=\"max-width:100%;\"></a></p>\n<h2>Usage:</h2>\n<pre><code># Only works on MacOS for now.\ngit clone https://github.com/rileyjshaw/plop\ncd plop\nnpm i\nnpm start\n</code></pre>\n<p>While going about your business, hit <code>Cmd + Shift + Space</code>. Write some valid JavaScript. The result will be typed into whatever program you have open.</p>\n<h3>Note:</h3>\n<p><code>\\n</code> triggers a simulated Enter press. Please be kind, don't spam your group chat.</p>","more":false},{"id":"cbd72e86-7652-5c55-bf34-ef7ce86d9362","uid":"COMMIT_13F32FB1219D29A61032646BE13DCFE602A595F5","title":"Add pagination to the blog!","date":"2019-09-03","link":"http://rileyjshaw.commit--blog.com/rileyjshaw/rileyjshaw-new/13f32fb1219d29a61032646be13dcfe602a595f5","repo":"rileyjshaw/rileyjshaw-new","description":"<p>This is an exciting commit for the new site. It collects blog posts from multiple sources (for now: <a href=\"http://rileyjshaw.commit--blog.com\" rel=\"noopener noreferrer\" target=\"_blank\">http://rileyjshaw.commit--blog.com</a>, <a href=\"https://sfpc.rileyjshaw.com\" rel=\"noopener noreferrer\" target=\"_blank\">https://sfpc.rileyjshaw.com</a>, and <a href=\"/blog\">https://rileyjshaw.com/blog</a>), orders them by date, and paginates them into a nice on-site list.</p>\n<p>In the past, my blog has always seemed stale and outdated. By allowing it to gobble content from across the web, I can point it to whatever platform I'm currently publishing on!</p>\n<p>This commit is going to show up as a post on my blog, which feels rather meta.</p>","more":false},{"id":"8656ea8d-9e44-5520-8868-b87e5cffdf3a","uid":"COMMIT_2488BCD5E5610F692773E7815FABDB247ECE55F5","title":"Bootstrap an independent data scraper","date":"2019-08-31","link":"http://rileyjshaw.commit--blog.com/rileyjshaw/rileyjshaw-new/2488bcd5e5610f692773e7815fabdb247ece55f5","repo":"rileyjshaw/rileyjshaw-new","description":"<h1>Project scraper</h1>\n<p>The projects on my site are automatically scraped and formatted at publish time using the scripts in this directory. Read more about my reasoning below, or skip to the <a href=\"#structure\">directory structure</a>.</p>\n<h2>Why?</h2>\n<p>Gatsby's source and transformer plugins are powerful, and I used them in the initial development of this site. I eventually decided that separating my collection process would be good for flexibility, control, and offline work.</p>\n<h3>Flexibility</h3>\n<p>GraphQL's filters and transforms are powerful, and Gatsby's APIs add more options for how data is fetched, cached, and transformed. However, complicated or non-standard data transforms and sanitization are much easier outside of Gatsby's ecosystem. For instance, the API starts to feel clunky for one-off treatment of specific content nodes,</p>\n<h3>Control</h3>\n<p>I've had a good experience with Gatsby but I may decide to migrate my site to another platform or format someday. Keeping my data entirely separate from the from the site's framework makes migrating my data as easy as copy/pasting this directory. It's just a few JS files!</p>\n<h3>Offline</h3>\n<p>Gatsby stores requests made through its source plugins in the <code>.cache</code> directory by default. The <code>.cache</code> directory is deleted after:</p>\n<ul>\n<li><code>gatsby clean</code> is called.</li>\n<li><code>package.json</code> changes, for example a dependency is updated or added.</li>\n<li><code>gatsby-config.js</code> changes, for example a plugin is added or modified.</li>\n<li><code>gatsby-node.js</code> changes, for example if a new Node API is invoked.</li>\n<li>…etc.</li>\n</ul>\n<p>I found I was frequently triggering <code>.cache</code> wipes during development. At best this meant I was pinging APIs and atom feeds more than necessary. At worst, it made working offline with project data impossible.</p>\n<h2>Directory structure</h2>\n<p>Here's how the scraper is organized for now:</p>\n<pre><code>scrape-projects.js\n\tThe megafile to replace Gatsby's source plugins. This pulls project data\n\tfrom all online sources and saves them into `_generated/`.\n\n_generated/\n\tFiles generated by the `scrape-projects.js` above. DO NOT EDIT THESE FILES\n\tMANUALLY! They will be overwritten.\n\n\tscraped-projects-raw.json\n\t\tNot quite the raw response, but pretty close. This file\n\t\tcontains all the data that I may decide to use someday, but\n\t\thaven't yet. Organized by `type` in a nested object.\n\n    scraped-projects-formatted.json\n\t\tStandardized into a smaller format that can be smashed together with\n\t\t`curation/` data. Flattened into an array with `type` annotations on\n\t\teach node, as well as unique, unchanging project IDs (`UID`).\n\ncuration/\n\tThis is where all custom curation and processing go, eg. tagging content.\n\tProjects are modified based on their generated UID.\n\n\ttweaks.js\n\t\tMainly for one-off changes eg. fixing formatting errors from immutable\n\t\tonline sources. This file can also be used to apply changes on groups\n\t\tof files.\n\n\ttags.js\n\t\tTODO: figure out where `tags`, `lastTagged`, and `coolness` data are\n\t\tgoing to live.\n\nsources/\n\tOffline data files and collections to compliment the online data cached in\n\t`_generated/`.\n\n\tstandalone-projects.json\n\t\tTODO: Move these over from the `src/data` directory.\n\ntools/\n\tCustom tools to help classify, organize, or edit project nodes without\n\topening a text editor. Custom tools are only built for data that is too\n\tdifficult to keep updated or standardized manually.\n\tTODO: Hook these up to a Node server so they edit the JSON files directly.\n\n\ttagger.html\n\t\tFinds untagged or incorrectly tagged projects, as well as projects\n\t\tthat were last tagged before a new tag type was added. Provides an\n\t\tinterface to preview and re-tag each project.\n\n\tcool-sort.html\n\t\tTODO: sort or insert nodes based on their \"coolness\".\n\ntest/\n\tQuick test files to ensure data is downloaded without any dropped nodes,\n\tUIDs are unique, etc.\n</code></pre>","more":true}]}},"pageContext":{"internalLimit":1,"internalSkip":1,"externalLimit":4,"externalSkip":4,"numPages":13,"currentPage":2}}}