{"componentChunkName":"component---src-templates-blog-list-js","path":"/blog/5","result":{"data":{"allMdx":{"edges":[{"node":{"description":"I made some pretty images using  Andy Doro ’s  3-state cellular automata tool  and  my CA finder ! Each of the 4 final images can be clicked for a slightly higher-res video, but careful: each video is over 10 megabytes. \n \n \n \n \n \n \n \n \n \n \n","more":false,"frontmatter":{"layout":"gallery","tags":["gallery"]},"fields":{"uid":"POST_CELLULAR_AUTOMATA","slug":"/blog/cellular-automata","title":"Cellular automata","date":"2019-03-18"}}}]},"allCombinedProjectsJson":{"nodes":[{"uid":"COMMIT_9A31D93C0803DDB1B2E0FD9208451686011472B7","title":"Add gallery posts and some cellular automata","date":"2019-08-01","link":"http://rileyjshaw.commit--blog.com/rileyjshaw/rileyjshaw.github.io/9a31d93c0803ddb1b2e0fd9208451686011472b7","repo":"rileyjshaw/rileyjshaw.github.io","description":"<p>I've decided to upgrade my website! The <a href=\"/blog\">blog</a> and <a href=\"/lab\">lab</a> are moving to the same page. I'm also going to add more content types, like songs, galleries, and videos. As I migrate things over, I'll be backfilling my blog with content to test with.</p>\n<p>The CA post is an example of filler content.</p>","more":false},{"uid":"COMMIT_931445B47DA28BD836E1D5A92EF0A9627EB244DB","title":"Fix #3: Update min and max to sensible defaults","date":"2019-04-05","link":"http://rileyjshaw.commit--blog.com/rileyjshaw/Servo/931445b47da28bd836e1d5a92ef0a9627eb244db","repo":"rileyjshaw/Servo","description":"<p>R/C servos have a standard pulse width range of 1000 to 2000µs<sup name=\"user-content-a1\"><a href=\"#f1\">1</a></sup>, with the zero point between the two at 1500µs. Currently, Arduino's Servo library sets:</p>\n<ul>\n<li><a href=\"https://github.com/arduino-libraries/Servo/blob/4970d615a13f4c0d08026ee361cc8a01974924a2/src/Servo.h#L80\" rel=\"noopener noreferrer\" target=\"_blank\"><code>#define MIN_PULSE_WIDTH 544</code></a></li>\n<li><a href=\"https://github.com/arduino-libraries/Servo/blob/4970d615a13f4c0d08026ee361cc8a01974924a2/src/Servo.h#L81\" rel=\"noopener noreferrer\" target=\"_blank\"><code>#define MAX_PULSE_WIDTH 2400</code></a></li>\n<li><a href=\"https://github.com/arduino-libraries/Servo/blob/4970d615a13f4c0d08026ee361cc8a01974924a2/src/Servo.h#L82\" rel=\"noopener noreferrer\" target=\"_blank\"><code>#define DEFAULT_PULSE_WIDTH 1500</code></a></li>\n</ul>\n<p>This causes a lot of confusion<sup name=\"user-content-a2\"><a href=\"#f2\">2</a></sup>, especially since [the docs say <code>write(90)</code> should correspond to the mid-point] (<a href=\"https://www.arduino.cc/en/Reference/ServoWrite\" rel=\"noopener noreferrer\" target=\"_blank\">https://www.arduino.cc/en/Reference/ServoWrite</a>); in actuality, it results in a call to <code>writeMicroseconds(1472)</code><sup name=\"user-content-a3\"><a href=\"#f3\">3</a></sup>.</p>\n<p>This change adjusts the defaults to align with R/C standards. Specifically,</p>\n<ul>\n<li><code>write(0)</code> now corresponds to the standard min pulse width of 1000µs.</li>\n<li><code>write(90)</code> now corresponds to the standard zero point pulse width, and aligns with the library's <code>DEFAULT_PULSE_WIDTH</code> variable.</li>\n<li><code>write(180)</code> now corresponds to the standard max pulse width of 2000µs.</li>\n</ul>\n<p>Tested on an Arduino Uno with a <a href=\"http://www.ee.ic.ac.uk/pcheung/teaching/DE1_EE/stores/sg90_datasheet.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Tower Pro Micro Servo SG90</a>, and a <a href=\"https://parallax.com/sites/default/files/downloads/900-00360-Feedback-360-HS-Servo-v1.2.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Parallax Feedback 360° High-Speed Servo</a>.</p>\n<hr>\n<p><a name=\"user-content-f1\" href=\"#a1\">1</a>: For example, <a href=\"http://www.ee.ic.ac.uk/pcheung/teaching/DE1_EE/stores/sg90_datasheet.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">http://www.ee.ic.ac.uk/pcheung/teaching/DE1_EE/stores/sg90_datasheet.pdf</a></p>\n<p><a name=\"user-content-f2\" href=\"#a2\">2</a>: For instance:</p>\n<ul>\n<li><a href=\"https://github.com/julianduque/beaglebone-io/issues/54\" rel=\"noopener noreferrer\" target=\"_blank\">julianduque/beaglebone-io#54</a></li>\n<li><a href=\"https://github.com/arduino-libraries/Servo/issues/3\" rel=\"noopener noreferrer\" target=\"_blank\">arduino-libraries#3</a></li>\n<li><a href=\"https://toolguyd.com/oscilloscope-arduino-servo-pwm-signal-mistakes/\" rel=\"noopener noreferrer\" target=\"_blank\">https://toolguyd.com/oscilloscope-arduino-servo-pwm-signal-mistakes/</a></li>\n<li><a href=\"https://makezine.com/2014/04/23/arduinos-servo-library-angles-microseconds-and-optional-command-parameters/\" rel=\"noopener noreferrer\" target=\"_blank\">https://makezine.com/2014/04/23/arduinos-servo-library-angles-microseconds-and-optional-command-parameters/</a></li>\n</ul>\n<p>I also see a <em>lot</em> of posts on <a href=\"https://forum.arduino.cc\" rel=\"noopener noreferrer\" target=\"_blank\">https://forum.arduino.cc</a> about this.</p>\n<p><a name=\"user-content-f3\" href=\"#a3\">3</a>: There is actually no way to set a standard servo to the zero-point using <code>write(angle)</code>; the closest you can get is <code>write(92)</code>, for a pulse of 1504µs.</p>","more":true},{"uid":"COMMIT_36F25F4F3A18BBB048B9BE3B8DC24D65F10EC273","title":"Simplify min, max logic and increase range","date":"2019-04-05","link":"http://rileyjshaw.commit--blog.com/rileyjshaw/Servo/36f25f4f3a18bbb048b9be3b8dc24d65f10ec273","repo":"rileyjshaw/Servo","description":"<p>Different servo models can accept a wide range of pulse widths. Even different servos of the same model might vary a bit. Currently, the Arduino Servo library has a severely restricted hard limit on the pulse widths that can be sent to servos. Specifically:</p>\n<ul>\n<li>Minimum pulse width must be between [32, 1052].</li>\n<li>Maximum pulse width must be between [1888, 2908].</li>\n</ul>\n<p>Many popular servos have min/max pulse widths that fall in that unavailable range between (1052, 1888). For instance, the <a href=\"https://parallax.com/sites/default/files/downloads/900-00360-Feedback-360-HS-Servo-v1.2.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Parallax Feedback 360° High-Speed Servo</a> operates between [1280, 1720].</p>\n<p>Before this commit, each instance of <code>Servo</code> stored their <code>min</code> and <code>max</code> values as <code>int8_t</code>. Since that only leaves room for values in the range [-128, 127], it can't store meaningful servo pulse widths, which are typically in the ~[1000, 2000]µs range. To compensate, <code>min</code> and <code>max</code> store the distance from the default values, divided by 4…</p>\n<p>There are two problems with this:</p>\n<ul>\n<li>The first, mentioned above, is that you can never stray more than 512µs from <code>MIN_PULSE_WIDTH</code> and <code>MAX_PULSE_WIDTH</code>.</li>\n<li>The second is that unexpected and unnecessary rounding occurs.</li>\n</ul>\n<p>Simply storing <code>min</code> and <code>max</code> as <code>uint16_t</code> and using the values directly solves this problem, and reduces the complexity involved in working around it. This commit makes the library faster, and allows it to work with a wider range of servos. It also fixes some subtle bugs where the minimum value was hardcoded to <code>MIN_PULSE_WIDTH</code>.</p>\n<p>Tested on an Arduino Uno with a <a href=\"http://www.ee.ic.ac.uk/pcheung/teaching/DE1_EE/stores/sg90_datasheet.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Tower Pro Micro Servo SG90</a>, and a <a href=\"https://parallax.com/sites/default/files/downloads/900-00360-Feedback-360-HS-Servo-v1.2.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Parallax Feedback 360° High-Speed Servo</a>.</p>","more":true},{"uid":"COMMIT_AC98244CC4F551C3BE62F62340E13BF50B89F508","title":"Update `performance.now()` compatibility table to match rest of article","date":"2019-04-05","link":"http://rileyjshaw.commit--blog.com/rileyjshaw/browser-compat-data/ac98244cc4f551c3be62f62340e13bf50b89f508","repo":"rileyjshaw/browser-compat-data","description":"<p>As mentioned in <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\" rel=\"noopener noreferrer\" target=\"_blank\">https://developer.mozilla.org/en-US/docs/Web/API/Performance/now</a>:</p>\n<blockquote>\n<p>Firefox started rounding to 1 millisecond in Firefox 60.</p>\n</blockquote>\n<p>This commit updates the <code>performance.now()</code> compatibility table to match the rest of the article.</p>","more":false}]}},"pageContext":{"internalLimit":1,"internalSkip":3,"externalLimit":4,"externalSkip":17,"numPages":15,"currentPage":5}},"staticQueryHashes":["3605882644"]}